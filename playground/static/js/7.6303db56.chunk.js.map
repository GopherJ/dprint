{"version":3,"sources":["wasm/index.js"],"names":["heap","Array","getObject","idx","fill","undefined","push","heap_next","length","takeObject","ret","dropObject","WASM_VECTOR_LEN","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","ptr","subarray","len","mem","offset","code","charCodeAt","slice","cachegetInt32Memory0","getInt32Memory0","Int32Array","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","getStringFromWasm0","decode","stack_pointer","addBorrowedObject","obj","Error","resolve_config","configuration","r0","r1","format_text","file_text","ptr0","len0","addHeapObject","__wbindgen_object_drop_ref","arg0","__wbg_next_070429384a9059a5","next","e","handleError","__wbg_done_24ef91fda5bda381","done","__wbg_value_1b88544311a72cbf","value","__wbg_get_8cfa183ec5c83163","arg1","get","__wbg_keys_d9f81a565b9b3b60","keys","__wbindgen_string_get","x","__wbindgen_debug_string","debugString","val","type","description","name","isArray","debug","i","className","builtInMatches","exec","toString","call","JSON","stringify","_","message","stack","__wbindgen_throw"],"mappings":"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","file":"static/js/7.6303db56.chunk.js","sourcesContent":["import * as wasm from './index_bg.wasm';\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n/**\n* @param {any} configuration\n* @returns {string}\n*/\nexport function resolve_config(configuration) {\n    try {\n        wasm.resolve_config(8, addBorrowedObject(configuration));\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        heap[stack_pointer++] = undefined;\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @param {string} file_text\n* @param {any} configuration\n* @returns {string}\n*/\nexport function format_text(file_text, configuration) {\n    try {\n        var ptr0 = passStringToWasm0(file_text, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.format_text(8, ptr0, len0, addBorrowedObject(configuration));\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        heap[stack_pointer++] = undefined;\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction handleError(e) {\n    wasm.__wbindgen_exn_store(addHeapObject(e));\n}\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbg_next_070429384a9059a5 = function(arg0) {\n    try {\n        var ret = getObject(arg0).next();\n        return addHeapObject(ret);\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __wbg_done_24ef91fda5bda381 = function(arg0) {\n    var ret = getObject(arg0).done;\n    return ret;\n};\n\nexport const __wbg_value_1b88544311a72cbf = function(arg0) {\n    var ret = getObject(arg0).value;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_get_8cfa183ec5c83163 = function(arg0, arg1) {\n    var ret = getObject(arg0).get(getObject(arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_keys_d9f81a565b9b3b60 = function(arg0) {\n    var ret = getObject(arg0).keys();\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_string_get = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = typeof(obj) === 'string' ? obj : undefined;\n    var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbindgen_debug_string = function(arg0, arg1) {\n    var ret = debugString(getObject(arg1));\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n"],"sourceRoot":""}