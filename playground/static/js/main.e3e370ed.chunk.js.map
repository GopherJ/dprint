{"version":3,"sources":["../../core/dist/dprint-core.js","../../dprint-plugin-typescript/dist/dprint-plugin-typescript.js","components/Spinner.tsx","components/CodeEditor.tsx","components/ConfigurationSelection.tsx","components/ExternalLink.tsx","utils/UrlSharer.ts","Playground.tsx","serviceWorker.tsx","index.tsx"],"names":["_toConsumableArray","_regeneratorRuntime","_classCallCheck","_createClass","Object","defineProperty","exports","value","PrintItemKind","Signal","os","defaultValues","lineWidth","indentWidth","useTabs","newlineKind","assertNever","throwError","concat","JSON","stringify","message","Error","getError","makeIterableRepeatable","iterable","RepeatableIterable","conditionResolvers","isStartOfNewLine","conditionContext","writerInfo","columnNumber","lineStartColumnNumber","isHanging","startInfo","endInfo","resolvedStartInfo","getResolvedInfo","resolvedEndInfo","resolvedInfo","getResolvedEndInfo","lineStartIndentLevel","isMultipleLines","defaultValue","kind","Info","lineNumber","areInfoEqual","internalIterator","this","items","Array","from","key","Symbol","iterator","_this","index","next","length","undefined","done","result","resolveNewLineKindFromText","text","i","EOL","parserHelpers","_marked","mark","withIndent","_marked2","newlineGroup","_marked3","prependToIterableIfHasItems","_marked4","toPrintItemIterable","_marked5","surroundWithNewLines","item","wrap","_context","prev","StartIndent","delegateYield","FinishIndent","stop","_context2","StartNewLineGroup","FinishNewLineGroup","found","_len","_key","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_args3","arguments","_context3","t1","return","finish","printItem","_context4","_context5","NewLine","parseJsLikeCommentLine","rawCommentValue","nonSlashIndex","getFirstNonSlashIndex","startTextIndex","commentValue","substring","trimRight","createInfo","name","conditions","_marked6","indentIfStartOfLine","_marked7","withIndentIfStartOfLineIndented","_context6","Condition","condition","true","false","_context7","context","indentLevel","newlineIfHangingSpaceOtherwise","options","_options$spaceChar","spaceChar","newlineIfMultipleLinesSpaceOrNewlineOtherwise","SpaceOrNewLine","singleIndentIfStartOfLine","SingleIndent","forceReevaluationOnceResolved","info","CliLoggingEnvironment","console","log","warn","error","Writer","singleIndentationText","repeat","state","currentLineColumn","currentLineNumber","lastLineIndentLevel","indentText","expectNewLineNext","ignoreIndent","action","fireOnNewLine","cloneState","write","validateText","baseWrite","includes","startsWithNewLine","push","join","get","set","level","RepeatableConditionCache","repeatableConditions","Map","repeatableCondition","create","originalCondition","exitSymbol","print","possibleNewLineSavePoint","writer","resolvedConditions","resolvedInfos","lookAheadSavePoints","newlineGroupDepth","currentIndexes","container","repeatableConditionCache","getContainer","parent","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","createConditionContainer","getOrCreate","err","deepIterableToContainer","onNewLine","handlePrintItem","pop","printItems","toString","signal","ExpectNewLine","markExpectNewLine","PossibleNewLine","markPossibleNewLineIfAble","isAboveMaxWidth","saveState","updateStateToSavePoint","startIndent","finishIndent","singleIndent","StartIgnoringIndent","startIgnoringIndent","FinishIgnoringIndent","finishIgnoringIndent","handleSignal","isNewLine","handleString","RawString","unknown","indexOf","getLineWidth","handleRawString","getConditionValue","printingCondition","has","savePoint","createSavePointForRestoringCondition","_savePoint","delete","Function","_result","getResolvedCondition","c","conditionValue","getWriterInfo","_savePoint2","_getResolvedInfo","handleCondition","resolveInfo","createSavePoint","isForNewLine","setState","writerState","getLineStartIndentLevel","getLineStartColumnNumber","getLineNumber","getLineColumn","getIndentationLevel","offset","maxWidth","conditionName","getState","formatFileText","filePath","fileText","plugins","plugin","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_plugin","shouldParseFile","getPlugin","parseResult","parseFile","config","getConfiguration","getFileExtension","lastPeriodIndex","lastIndexOf","resolveConfiguration","assign","diagnostics","resolvedConfig","getValue","ensureNumber","propertyName","getNewLineKind","addExcessPropertyDiagnostics","validateFunc","actualValue","version","parseNode","parseProgram","parseBlockStatement","parseIdentifier","parseV8IntrinsicIdentifier","_marked11","parseClassDeclarationOrExpression","_marked13","parseEnumDeclaration","_marked15","parseEnumMember","_marked16","parseExportAllDeclaration","_marked17","parseExportNamedDeclaration","_marked18","parseExportDefaultDeclaration","_marked20","parseFunctionDeclarationOrExpression","_marked21","parseImportDeclaration","_marked22","parseImportEqualsDeclaration","_marked23","parseInterfaceDeclaration","_marked24","parseModuleDeclaration","_marked25","parseNamespaceExportDeclaration","_marked26","parseTypeAlias","_marked29","parseTypeParameterDeclaration","_marked31","parseVariableDeclaration","_marked32","parseVariableDeclarator","_marked33","parseClassOrObjectMethod","_marked34","parseClassProperty","_marked35","parseDecorator","_marked36","parseParameterProperty","_marked37","parseCallSignatureDeclaration","_marked38","parseConstructSignatureDeclaration","_marked39","parseIndexSignature","_marked40","parseMethodSignature","_marked41","parsePropertySignature","_marked42","parseBreakStatement","_marked43","parseContinueStatement","_marked44","parseDebuggerStatement","_marked45","parseDirective","_marked46","parseDoWhileStatement","_marked47","parseEmptyStatement","_marked48","parseExportAssignment","_marked51","parseExpressionStatement","_marked53","parseForInStatement","_marked55","parseForOfStatement","_marked57","parseForStatement","_marked59","parseIfStatement","_marked60","parseInterpreterDirective","_marked61","parseLabeledStatement","_marked62","parseReturnStatement","_marked64","parseSwitchCase","_marked65","parseSwitchStatement","_marked66","parseThrowStatement","_marked67","parseTryStatement","_marked68","parseWhileStatement","_marked69","parseCatchClause","_marked75","parseArrayPattern","_marked76","parseArrayExpression","_marked77","parseArrowFunctionExpression","_marked78","parseAsExpression","_marked79","parseAssignmentExpression","_marked80","parseAssignmentPattern","_marked81","parseAwaitExpression","_marked84","parseBinaryOrLogicalExpression","_marked85","parseExpressionWithTypeArguments","_marked86","parseExternalModuleReference","_marked92","parseCallExpression","_marked94","parseConditionalExpression","_marked95","parseMemberExpression","_marked96","parseMetaProperty","_marked97","parseNewExpression","_marked98","parseNonNullExpression","_marked99","parseObjectExpression","_marked100","parseObjectPattern","_marked101","parseObjectProperty","_marked102","parseRestElement","_marked103","parseSequenceExpression","_marked104","parseSpreadElement","_marked105","parseTaggedTemplateExpression","_marked106","parseTypeAssertion","_marked107","parseUnaryExpression","_marked108","parseUpdateExpression","_marked109","parseYieldExpression","_marked110","parseImportNamespaceSpecifier","_marked111","parseImportSpecifier","_marked112","parseExportDefaultSpecifier","_marked113","parseExportNamespaceSpecifier","_marked114","parseExportSpecifier","_marked115","parseBigIntLiteral","_marked116","parseBooleanLiteral","_marked117","parseNumericLiteral","_marked118","parseStringOrDirectiveLiteral","_marked119","parseRegExpLiteral","_marked120","parseTemplateElement","_marked122","parseTemplateLiteral","_marked123","parseArrayType","_marked127","parseConditionalType","_marked128","parseConstructorType","_marked129","parseFunctionType","_marked130","parseImportType","_marked131","parseIndexedAccessType","_marked132","parseInferType","_marked133","parseLiteralType","_marked136","parseMappedType","_marked137","parseOptionalType","_marked138","parseParenthesizedType","_marked139","parseQualifiedName","_marked140","parseRestType","_marked142","parseTupleType","_marked143","parseTypeAnnotation","_marked144","parseTypeLiteral","_marked145","parseTypeOperator","_marked146","parseTypeParameter","_marked147","parseTypePredicate","_marked148","parseTypeQuery","_marked149","parseTypeReference","_marked151","parseUnionOrIntersectionType","_marked152","parseJsxAttribute","_marked153","parseJsxElement","_marked154","parseJsxEmptyExpression","_marked155","parseJsxExpressionContainer","_marked158","parseJsxOpeningElement","_marked159","parseJsxClosingElement","_marked160","parseJsxFragment","_marked161","parseJsxOpeningFragment","_marked162","parseJsxClosingFragment","_marked163","parseJsxIdentifier","_marked164","parseJsxMemberExpression","_marked165","parseJsxNamespacedName","_marked166","parseJsxSpreadAttribute","_marked167","parseJsxSpreadChild","_marked168","parseJsxText","_marked170","parseMemberedBody","_marked171","parseJsxWithOpeningAndClosing","_marked174","parseJsxChildren","_marked175","parseStatements","_marked176","parseStatementOrMembers","_marked177","parseTrailingCommentsAsStatements","_marked179","getTrailingCommentsAsStatements","_marked181","parseParametersOrArguments","_marked183","parseCommaSeparatedValues","_marked185","parseCloseParenWithType","_marked186","parseNodeInParens","_marked187","parseIteratorInParens","_marked189","parseNamedImportsOrExports","_marked190","parseDecoratorsIfClass","_marked191","parseDecorators","_marked193","parseForMemberLikeExpression","_marked194","parseExtendsOrImplements","_marked197","parseArrayLikeNodes","_marked199","parseObjectLikeNode","_marked200","getWithComments","_marked201","parseCommentsAsLeading","_marked202","parseTrailingComments","_marked203","parseCommentsAsTrailing","_marked204","parseCommentCollection","_marked205","parseCommentBasedOnLastNode","_marked208","parseComment","_marked210","parseFirstLineTrailingComments","_marked211","parseBraceSeparator","_marked212","parseControlFlowSeparator","_marked213","parseTypeAnnotationWithColonIfExists","_marked214","parseNodeWithPreceedingColon","core","parser","semiColons","singleQuotes","useBraces","bracePosition","singleBodyPosition","nextControlFlowPosition","operatorPosition","trailingCommas","forceMultiLineArguments","forceMultiLineParameters","globalConfig","pluginConfig","ensureBoolean","ensureBraceUse","ensureBracePosition","ensureSingleBodyPosition","ensureNextControlFlowPosition","ensureOperatorPosition","ensureTrailingCommas","freeze","prefixSemiColonInsertionChars","Bag","bag","Stack","isStringEmptyOrWhiteSpace","test","hasNewlineOccurrencesInLeadingWhitespace","occurrences","hasNoNewlinesInLeadingWhitespace","hasNewLineOccurrencesInTrailingWhitespace","hasNoNewlinesInTrailingWhitespace","hasSeparatingBlankLine","nodeA","nodeB","leadingComments","commentStartLine","loc","start","line","end","getNodeBStartLine","hasLeadingCommentOnDifferentLine","node","commentsToIgnore","comment","getLeadingCommentOnDifferentLine","getUseNewlinesForNodes","nodes","getNodes","nonNullNodes","firstNode","secondNode","t0","isFirstNodeOnLine","_char","hasParentheses","extra","parenthesized","getStartOrParenStart","parenStart","getJsxText","jsxText","raw","getFirstOpenBraceTokenWithin","tokenFinder","getFirstTokenWithin","getFirstOpenBracketTokenWithin","getFirstAngleBracketTokenBefore","getFirstTokenBefore","getFirstNonCommentTokenBefore","isNotComment","getFirstOpenParenTokenBefore","getFirstCloseParenTokenAfter","getFirstTokenAfter","token","type","isPrefixSemiColonInsertionChar","_char2","Set","getPrefixSemiColonInsertionChars","findNodeIndexInSortedArrayFast","compare","top","bottom","mid","Math","floor","comparisonResult","binarySearch","TokenFinder","tokens","tokenIndex","tokenOrIsMatch","moveToNodeStart","getTokenIsMatchFunction","isMatch","currentToken","moveToNodeEnd","nodeStart","nodeEnd","tokenText","label","getTokenText","_core$parserHelpers","BAG_KEYS","IfStatementLastBraceCondition","ClassStartHeaderInfo","InterfaceDeclarationStartHeaderInfo","ModuleDeclarationStartHeaderInfo","DisableIndentBool","parseObj","startHeaderInfo","take","members","body","shouldUseBlankLine","previousMember","nextMember","local","parseUnknownNode","parseNotSupportedFlowNode","opts","printItemIterator","parseInParens","hasIgnoreComment","previousExpressionContainer","_i","children","previousChild","getPreviousJsxExpressionContainer","expression","innerComments","some","isIgnoreComment","handledComments","nodeIterator","useNewLines","putDisableIndentInBagIfNecessaryForNode","parseNodeAsRawString","abrupt","parentStack","currentNode","innerParse","interpreter","directives","startStatementsInfo","endStatementsInfo","innerTrailingComments","trailingComments","filter","optional","definite","typeAnnotation","_context8","_marked8","_marked10","parseClassDecorators","parseHeader","_context13","_marked9","parseExtendsAndImplements","_context12","_context11","superClass","_callee2","_context10","superTypeParameters","implements","put","declare","abstract","id","typeParameters","_context9","_marked12","parseBody","_context15","previousNode","nextNode","memberSpacingOption","_context14","const","_marked14","parseInitializer","_context18","initializer","_context17","_callee3","_context16","_context19","source","specifiers","defaultExport","namespaceExport","namedExports","_context20","find","s","declaration","shouldUseSemiColon","_context21","_marked19","getUseSpaceBeforeParens","_context23","_context22","async","generator","params","forceMultiLineWhenMultipleLines","customCloseParen","typeNode","returnType","bodyNode","defaultImport","namespaceImport","namedImports","_context24","_context25","isExport","moduleReference","_context26","extends","_startHeaderInfo","hasNamespaceKeyword","_context27","keyword","global","_context28","_context29","_marked27","_marked28","parseItems","parseParameterList","getUseNewLines","_context34","_loop","_context33","param","_context32","_context31","_context30","_marked30","parseDeclarators","requiresSemiColon","_context36","left","_context35","declarations","_context37","init","getForceMultiLineParameters","getBracePosition","getUseSemiColon","_context38","accessibility","static","computed","_context39","readonly","_context40","_context41","parameter","_context42","parameters","_context43","_context44","_context45","_context47","_callee4","_context46","_context48","_context49","_context50","_context51","_context52","firstInnerNode","innerIterable","_context53","_context54","_marked49","_marked50","parseInner","parseForPrefixSemiColonInsertion","_context57","parsedNode","checkIterable","checkString","checkCondition","_context56","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_context55","_marked52","endHeaderInfo","parseInnerHeader","_context60","_context59","_callee5","_context58","right","parseConditionalBraceBody","requiresBracesCondition","_marked54","_context63","_context62","_callee6","_context61","await","_marked56","_context67","separatorAfterSemiColons","_context66","getSeparatorAfterSemiColons","_callee7","_context64","_callee8","_context65","update","_marked58","startElseHeaderInfo","_parseHeader","_context69","ifStatement","_context68","parseHeaderWithConditionalBraceBody","consequent","alternate","braceCondition","parseLeadingComments","headerStartToken","_context70","_context71","_context72","argument","_marked63","blockStatementBody","parseTrailingCommentStatements","getBlockStatementBody","_context74","parentCases","isLastSwitchCase","isEqualIndent","lastNode","_i2","_trailingComments","parsedCommentNode","_context73","cases","column","_context75","discriminant","_context76","_context77","block","handler","finalizer","_context78","_context79","_marked70","_callee9","_context80","_context81","_marked72","_marked74","getHeaderTrailingComments","headerTrailingComments","openBraceCondition","newlineOrSpaceCondition","bodyShouldBeMultiLine","_callee10","_context82","getBodyStatementStartLine","getHeaderStartLine","firstStatement","shouldUseNewline","resolvedEndStatementsInfo","_marked71","parseHeaderTrailingComment","_context86","_context85","_callee11","_context83","_callee12","_context84","_marked73","commentLine","lastHeaderToken","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_iterator6","_step6","checkComments","_context88","comments","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_iterator7","_step7","_comment","_context87","t2","_context89","elements","_context90","headerStartInfo","shouldUseParens","_context91","isFirstTokenInNodeMatch","firstParam","configSetting","_context92","_context93","operator","_context96","_callee14","_context95","_callee13","_context94","_context97","_marked83","useSpaceSurroundingOperator","topMostExpr","isTopMost","topMostInfo","indentIfNecessary","getTopMostBinaryOrLogicalExpression","getOrSetTopMostInfo","isBinaryOrLogicalExpression","isExpressionBreakable","getUseSpaceSurroundingOperator","_context103","expr","topBinaryOrLogicalExpressionInfos","topMost","ancestor","_marked82","newlineGroupIfNecessary","getOperatorPosition","_context102","configValue","getConfigValue","operatorToken","_context101","_context98","_callee15","_context100","_context99","_context104","_context105","_marked87","_marked91","innerParseCallExpression","parseTestLibraryCallExpression","isTestLibraryCallExpression","_context112","typeArguments","identifier","callee","object","property","getIdentifier","isValidCallee","_marked88","_marked89","_marked90","parseTestLibraryCallee","parseTestLibraryArguments","stripSignals","_context111","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_iterator8","_step8","_context110","_context109","_context108","_context107","_context106","_marked93","useNewlines","beforeAlternateInfo","parseConsequentAndAlternate","_context118","_context117","endStatementOrMemberInfo","peek","_callee16","_context115","_context114","_callee17","_context116","_context113","_context119","_context120","meta","_context121","_context122","_context123","properties","_context124","_context125","shorthand","_context126","_context127","values","expressions","multiLineOrHangingConditionResolver","_context128","_context129","tag","quasi","_context130","_context131","getOperator","prefix","_context132","_context133","delegate","_context134","_context136","imported","_callee18","_context135","_context137","exported","_context138","_context140","_callee19","_context139","_context141","_context142","_context143","getStringLiteralText","_context144","stringValue","rawStringValue","replace","getStringValue","_context145","pattern","flags","_context146","_marked121","getItems","_context150","quasisIndex","expressionsIndex","_loop2","_ret","_context149","currentQuasis","currentExpression","moveNextQuasis","moveNextExpression","_context148","quasis","v","_callee20","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_iterator9","_step9","_context147","parseUnknownNodeWithMessage","rawString","nodeText","_context151","elementType","_marked124","_marked126","isParentConditionalType","parseMainArea","parseFalseType","_context157","_marked125","_context156","_context155","falseType","_context154","checkType","_callee21","_context152","extendsType","_callee22","_context153","trueType","_context159","typeNodeSeparator","_callee23","_context158","_context161","_callee24","_context160","_context162","qualifier","_context163","objectType","indexType","_context164","typeParameter","_context165","literal","_marked134","_marked135","parseLayout","_context168","_context167","_context166","_context169","_context170","_context171","_context172","_marked141","forceTrailingCommas","parseElements","_context176","elementTypes","_loop3","_context175","_context174","_context173","getForceTrailingCommas","_context177","_context178","_context179","_context182","constraint","_callee25","_context180","default","_callee26","_context181","_context183","parameterName","_context184","exprName","_context185","typeName","_marked150","separator","isAncestorParenthesizedType","isAncestorUnionOrIntersectionType","getIsAncestorParenthesizedType","_context187","_i3","_context186","types","_context188","_context189","closingElement","openingElement","_context190","surroundWithSpace","_context191","_marked157","isMultiLine","parseAttributes","getIsMultiLine","_context194","attributes","_marked156","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_iterator10","_step10","attrib","parseAttrib","_context193","_context192","selfClosing","_context195","_context196","openingFragment","closingFragment","_context197","_context198","_context199","_context200","_context201","namespace","_context202","_context203","lines","lineText","_context204","trim","split","map","_marked169","_context206","_context205","n","allChildren","useMultilines","getUseMultilines","_context207","firstChild","parentStartInfo","parentEndInfo","_marked172","_marked173","parsedChildren","parseForNewLines","parseForSingleLine","shouldUseSpace","_context210","previousElement","nextElement","endsWith","startsWith","_context209","_context208","shouldUseNewLine","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_iterator11","_step11","directive","statements","_context211","previousStatement","nextStatement","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_loop4","_iterator12","_step12","_context214","itemOrArray","_context213","_context212","popOrThrow","unhandledComments","_context215","_marked178","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_iterator13","_step13","getPossibleComments","_context217","nodeBody","_context216","_marked180","_options$forceMultiLi","_context219","paramHasParen","firstOpenParen","getOpenParenToken","paramList","_context218","_marked182","_loop5","parseValue","_context225","hasComma","_context221","_context220","parsedParam","_context224","_callee27","_context222","_callee28","_context223","_marked184","typeNodeStartInfo","typeNodeEndInfo","parsedTypeNodeIterator","parseTypeNode","_context229","_context228","_callee29","_context226","_callee30","_context227","openParenToken","_context230","_context232","_callee31","_context231","parentDeclaration","namedImportsOrExports","_marked188","braceSeparator","parseSpecifiers","getUseSpace","_context234","_context233","_context235","decorators","isClassExpression","_context236","leftNode","rightNode","isComputed","_marked192","useNewline","parseRightNode","_context238","_context237","_context241","_callee33","_context240","_callee32","_context239","_marked196","_context245","_marked195","element","parseElement","_context244","_context243","_context242","_marked198","multiLine","getInner","_context249","_loop6","_context248","_context247","_context246","_context250","lastComment","hasHandled","_context251","_context252","getTrailingCommentsWithNextLeading","nextProperty","getTrailingComments","trailingCommentsOnSameLine","firstUnhandledComment","_context253","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_iterator14","_step14","_context254","_context255","_marked206","_marked207","parseCommentBlock","parseCommentLine","_context258","_context257","_context256","add","_marked209","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_iterator15","_step15","trailingComment","getComments","_context260","_context259","_context261","nodeBlock","getFirstControlFlowToken","_context262","_context263","_context264","option","TypeScriptPlugin","_unresolvedConfig","_resolveConfigurationResult","_environment","environment","toLowerCase","_getResolveConfigurationResult","file","getCommentsToCheck","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","program","_callee","parseTypeScriptFile","_marked215","getPlugins","parse","sourceType","createParenthesizedExpressions","strictMode","allowAwaitOutsideFunction","allowImportExportEverywhere","allowReturnOutsideFunction","allowSuperOutsideMethod","allowUndeclaredExports","_context265","fileExtension","isJsx","parseToBabelAst","_getEnvironment","Spinner","props","backgroundColor","className","style","color","loading","size","CodeEditor","editor","lastScrollTop","editorComponent","editorDidMount","bind","reactMonacoEditorPromise","then","monacoEditor","languages","typescript","typescriptDefaults","setCompilerOptions","noLib","target","ScriptTarget","ESNext","setDiagnosticsOptions","noSyntaxValidation","noSemanticValidation","defineTheme","base","inherit","rules","colors","catch","updateScrollTop","getEditor","width","height","theme","language","onChange","automaticLayout","renderWhitespace","readOnly","minimap","enabled","quickSuggestions","wordBasedSuggestions","rulers","onDidChangeModelContent","setPosition","onDidScrollChange","e","scrollTopChanged","onScrollTopChange","scrollTop","setTimeout","setScrollTop","React","Component","useBraceOptions","bracePositionOptions","singleBodyPositionOptions","nextControlFlowPositionOptions","operatorPositionOptions","trailingCommaOptions","arrowFunctionUseParenthesesOptions","enumMemberSpacingOptions","ConfigurationSelection","title","getNumberConfig","getBooleanConfig","getSelectForConfig","configKey","checked","updateConfig","inputMode","max","round","valueAsNumber","newConfig","onUpdateConfig","ConfigurationItem","ExternalLink","href","url","rel","UrlSaver","locationHash","document","location","hash","matches","exec","decompress","getText","getConfig","window","history","replaceState","compressToEncodedURIComponent","decompressFromEncodedURIComponent","urlSaver","Playground","lastUpdateTimeout","getUrlInfo","initialText","initialUnresolvedConfig","initialConfig","getResolvedConfiguration","formattedText","formatText","onConfigUpdate","onTextChange","defaultSize","allowResize","minSize","getFormattedText","updateUrl","newText","clearTimeout","urlInfo","typeScriptConfig","typeScriptPlugin","initialize","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3e370ed.chunk.js","sourcesContent":["'use strict';\n\nvar _toConsumableArray = require(\"/home/travis/build/dsherret/dprint/packages/playground/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _regeneratorRuntime = require(\"/home/travis/build/dsherret/dprint/packages/playground/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"/home/travis/build/dsherret/dprint/packages/playground/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/travis/build/dsherret/dprint/packages/playground/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar os = require('os');\n\nvar defaultValues = {\n  lineWidth: 120,\n  indentWidth: 4,\n  useTabs: false,\n  newlineKind: \"auto\"\n};\n\nfunction resolveConfiguration(config) {\n  config = Object.assign({}, config);\n  var diagnostics = [];\n  var resolvedConfig = {\n    lineWidth: getValue(\"lineWidth\", defaultValues.lineWidth, ensureNumber),\n    indentWidth: getValue(\"indentWidth\", defaultValues.indentWidth, ensureNumber),\n    useTabs: getValue(\"useTabs\", defaultValues.useTabs, ensureBoolean),\n    newlineKind: getNewLineKind()\n  };\n  addExcessPropertyDiagnostics();\n  return {\n    config: resolvedConfig,\n    diagnostics: diagnostics\n  };\n\n  function getNewLineKind() {\n    var newlineKind = config.newlineKind;\n    delete config.newlineKind;\n\n    switch (newlineKind) {\n      case \"auto\":\n        return \"auto\";\n\n      case \"crlf\":\n        return \"\\r\\n\";\n\n      case \"lf\":\n        return \"\\n\";\n\n      case null:\n      case undefined:\n        return defaultValues.newlineKind;\n\n      case \"system\":\n        return os.EOL === \"\\r\\n\" ? \"\\r\\n\" : \"\\n\";\n\n      default:\n        var propertyName = \"newlineKind\";\n        diagnostics.push({\n          propertyName: propertyName,\n          message: \"Unknown configuration specified for '\".concat(propertyName, \"': \").concat(newlineKind)\n        });\n        return defaultValues[\"newlineKind\"];\n    }\n  }\n\n  function getValue(key, defaultValue, validateFunc) {\n    var actualValue = config[key];\n    if (actualValue == null || !validateFunc(key, actualValue)) actualValue = defaultValue;\n    delete config[key];\n    return actualValue;\n  }\n\n  function ensureNumber(key, value) {\n    if (typeof value === \"number\") return true;\n    diagnostics.push({\n      propertyName: key,\n      message: \"Expected the configuration for '\".concat(key, \"' to be a number, but its value was: \").concat(value)\n    });\n    return false;\n  }\n\n  function ensureBoolean(key, value) {\n    if (typeof value === \"boolean\") return true;\n    diagnostics.push({\n      propertyName: key,\n      message: \"Expected the configuration for '\".concat(key, \"' to be a boolean, but its value was: \").concat(value)\n    });\n    return false;\n  }\n\n  function addExcessPropertyDiagnostics() {\n    for (var propertyName in config) {\n      if (propertyName === \"projectType\" || propertyName === \"plugins\") {\n        continue;\n      }\n\n      diagnostics.push({\n        propertyName: propertyName,\n        message: \"Unexpected property in configuration: \".concat(propertyName)\n      });\n    }\n  }\n}\n\n(function (PrintItemKind) {\n  PrintItemKind[PrintItemKind[\"RawString\"] = 0] = \"RawString\";\n  PrintItemKind[PrintItemKind[\"Condition\"] = 1] = \"Condition\";\n  PrintItemKind[PrintItemKind[\"Info\"] = 2] = \"Info\";\n})(exports.PrintItemKind || (exports.PrintItemKind = {}));\n\n(function (Signal) {\n  Signal[Signal[\"NewLine\"] = 0] = \"NewLine\";\n  Signal[Signal[\"PossibleNewLine\"] = 1] = \"PossibleNewLine\";\n  Signal[Signal[\"SpaceOrNewLine\"] = 2] = \"SpaceOrNewLine\";\n  Signal[Signal[\"ExpectNewLine\"] = 3] = \"ExpectNewLine\";\n  Signal[Signal[\"StartIndent\"] = 4] = \"StartIndent\";\n  Signal[Signal[\"FinishIndent\"] = 5] = \"FinishIndent\";\n  Signal[Signal[\"StartNewLineGroup\"] = 6] = \"StartNewLineGroup\";\n  Signal[Signal[\"FinishNewLineGroup\"] = 7] = \"FinishNewLineGroup\";\n  Signal[Signal[\"SingleIndent\"] = 8] = \"SingleIndent\";\n  Signal[Signal[\"StartIgnoringIndent\"] = 9] = \"StartIgnoringIndent\";\n  Signal[Signal[\"FinishIgnoringIndent\"] = 10] = \"FinishIgnoringIndent\";\n})(exports.Signal || (exports.Signal = {}));\n\n(function (conditionResolvers) {\n  function isStartOfNewLine(conditionContext) {\n    return conditionContext.writerInfo.columnNumber === conditionContext.writerInfo.lineStartColumnNumber;\n  }\n\n  conditionResolvers.isStartOfNewLine = isStartOfNewLine;\n\n  function isHanging(conditionContext, startInfo, endInfo) {\n    var resolvedStartInfo = conditionContext.getResolvedInfo(startInfo);\n    if (resolvedStartInfo == null) return undefined;\n    var resolvedEndInfo = getResolvedEndInfo();\n    if (resolvedEndInfo == null) return undefined;\n    return resolvedEndInfo.lineStartIndentLevel > resolvedStartInfo.lineStartIndentLevel;\n\n    function getResolvedEndInfo() {\n      if (endInfo == null) return conditionContext.writerInfo;\n      var resolvedInfo = conditionContext.getResolvedInfo(endInfo);\n      if (resolvedInfo == null) return undefined;\n      return resolvedInfo;\n    }\n  }\n\n  conditionResolvers.isHanging = isHanging;\n\n  function isMultipleLines(conditionContext, startInfo, endInfo, defaultValue) {\n    var resolvedStartInfo = conditionContext.getResolvedInfo(startInfo);\n    var resolvedEndInfo = getResolvedEndInfo();\n    if (resolvedStartInfo == null || resolvedEndInfo == null) return defaultValue;\n    return resolvedEndInfo.lineNumber > resolvedStartInfo.lineNumber;\n\n    function getResolvedEndInfo() {\n      if (endInfo.kind === exports.PrintItemKind.Info) return conditionContext.getResolvedInfo(endInfo);\n      return endInfo;\n    }\n  }\n\n  conditionResolvers.isMultipleLines = isMultipleLines;\n\n  function areInfoEqual(conditionContext, startInfo, endInfo, defaultValue) {\n    var resolvedStartInfo = conditionContext.getResolvedInfo(startInfo);\n    var resolvedEndInfo = conditionContext.getResolvedInfo(endInfo);\n    if (resolvedStartInfo == null || resolvedEndInfo == null) return defaultValue;\n    return resolvedStartInfo.lineNumber === resolvedEndInfo.lineNumber && resolvedStartInfo.columnNumber === resolvedEndInfo.columnNumber;\n  }\n\n  conditionResolvers.areInfoEqual = areInfoEqual;\n})(exports.conditionResolvers || (exports.conditionResolvers = {}));\n\nfunction assertNever(value) {\n  return throwError(\"Unhandled value: \".concat(JSON.stringify(value)));\n}\n\nfunction throwError(message) {\n  throw getError(message);\n}\n\nfunction getError(message) {\n  return new Error(\"[dprint]: \".concat(message));\n}\n\nfunction getFileExtension(filePath) {\n  var lastPeriodIndex = filePath.lastIndexOf(\".\");\n  if (lastPeriodIndex === -1) return \"\";\n  return filePath.substring(lastPeriodIndex);\n}\n\nfunction makeIterableRepeatable(iterable) {\n  if (iterable instanceof RepeatableIterable) return iterable;\n  return new RepeatableIterable(iterable);\n}\n\nvar RepeatableIterable =\n/*#__PURE__*/\nfunction () {\n  function RepeatableIterable(internalIterator) {\n    _classCallCheck(this, RepeatableIterable);\n\n    this.items = Array.from(internalIterator);\n  }\n\n  _createClass(RepeatableIterable, [{\n    key: Symbol.iterator,\n    value: function value() {\n      var _this = this;\n\n      var index = 0;\n      return {\n        next: function next() {\n          if (index >= _this.items.length) return {\n            value: undefined,\n            done: true\n          };\n          var result = {\n            value: _this.items[index],\n            done: false\n          };\n          index++;\n          return result;\n        }\n      };\n    }\n  }]);\n\n  return RepeatableIterable;\n}();\n\nfunction resolveNewLineKindFromText(text) {\n  for (var i = text.length - 1; i >= 0; i--) {\n    if (text[i] === \"\\n\") return text[i - 1] === \"\\r\" ? \"\\r\\n\" : \"\\n\";\n  }\n\n  return os.EOL === \"\\r\\n\" ? \"\\r\\n\" : \"\\n\";\n}\n\n(function (parserHelpers) {\n  var _marked =\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(withIndent),\n      _marked2 =\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(newlineGroup),\n      _marked3 =\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(prependToIterableIfHasItems),\n      _marked4 =\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(toPrintItemIterable),\n      _marked5 =\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(surroundWithNewLines);\n\n  function withIndent(item) {\n    return _regeneratorRuntime.wrap(function withIndent$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return exports.Signal.StartIndent;\n\n          case 2:\n            return _context.delegateYield(item, \"t0\", 3);\n\n          case 3:\n            _context.next = 5;\n            return exports.Signal.FinishIndent;\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _marked);\n  }\n\n  parserHelpers.withIndent = withIndent;\n\n  function newlineGroup(item) {\n    return _regeneratorRuntime.wrap(function newlineGroup$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return exports.Signal.StartNewLineGroup;\n\n          case 2:\n            return _context2.delegateYield(item, \"t0\", 3);\n\n          case 3:\n            _context2.next = 5;\n            return exports.Signal.FinishNewLineGroup;\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _marked2);\n  }\n\n  parserHelpers.newlineGroup = newlineGroup;\n\n  function prependToIterableIfHasItems(iterable) {\n    var found,\n        _len,\n        items,\n        _key,\n        _iteratorNormalCompletion,\n        _didIteratorError,\n        _iteratorError,\n        _iterator,\n        _step,\n        item,\n        _args3 = arguments;\n\n    return _regeneratorRuntime.wrap(function prependToIterableIfHasItems$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            found = false;\n\n            for (_len = _args3.length, items = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              items[_key - 1] = _args3[_key];\n            }\n\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _iteratorError = undefined;\n            _context3.prev = 5;\n            _iterator = iterable[Symbol.iterator]();\n\n          case 7:\n            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n              _context3.next = 17;\n              break;\n            }\n\n            item = _step.value;\n\n            if (found) {\n              _context3.next = 12;\n              break;\n            }\n\n            return _context3.delegateYield(items, \"t0\", 11);\n\n          case 11:\n            found = true;\n\n          case 12:\n            _context3.next = 14;\n            return item;\n\n          case 14:\n            _iteratorNormalCompletion = true;\n            _context3.next = 7;\n            break;\n\n          case 17:\n            _context3.next = 23;\n            break;\n\n          case 19:\n            _context3.prev = 19;\n            _context3.t1 = _context3[\"catch\"](5);\n            _didIteratorError = true;\n            _iteratorError = _context3.t1;\n\n          case 23:\n            _context3.prev = 23;\n            _context3.prev = 24;\n\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n\n          case 26:\n            _context3.prev = 26;\n\n            if (!_didIteratorError) {\n              _context3.next = 29;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 29:\n            return _context3.finish(26);\n\n          case 30:\n            return _context3.finish(23);\n\n          case 31:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _marked3, null, [[5, 19, 23, 31], [24,, 26, 30]]);\n  }\n\n  parserHelpers.prependToIterableIfHasItems = prependToIterableIfHasItems;\n\n  function toPrintItemIterable(printItem) {\n    return _regeneratorRuntime.wrap(function toPrintItemIterable$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return printItem;\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _marked4);\n  }\n\n  parserHelpers.toPrintItemIterable = toPrintItemIterable;\n\n  function surroundWithNewLines(item) {\n    return _regeneratorRuntime.wrap(function surroundWithNewLines$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return exports.Signal.NewLine;\n\n          case 2:\n            return _context5.delegateYield(item, \"t0\", 3);\n\n          case 3:\n            _context5.next = 5;\n            return exports.Signal.NewLine;\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _marked5);\n  }\n\n  parserHelpers.surroundWithNewLines = surroundWithNewLines;\n\n  function parseJsLikeCommentLine(rawCommentValue) {\n    var nonSlashIndex = getFirstNonSlashIndex();\n    var startTextIndex = rawCommentValue[nonSlashIndex] === \" \" ? nonSlashIndex + 1 : nonSlashIndex;\n    var commentValue = rawCommentValue.substring(startTextIndex).trimRight();\n    var prefix = \"//\" + rawCommentValue.substring(0, nonSlashIndex);\n    return prefix + (commentValue.length > 0 ? \" \".concat(commentValue) : \"\");\n\n    function getFirstNonSlashIndex() {\n      for (var i = 0; i < rawCommentValue.length; i++) {\n        if (rawCommentValue[i] !== \"/\") return i;\n      }\n\n      return rawCommentValue.length;\n    }\n  }\n\n  parserHelpers.parseJsLikeCommentLine = parseJsLikeCommentLine;\n\n  function createInfo(name) {\n    return {\n      kind: exports.PrintItemKind.Info,\n      name: name\n    };\n  }\n\n  parserHelpers.createInfo = createInfo;\n})(exports.parserHelpers || (exports.parserHelpers = {}));\n\nvar withIndent = exports.parserHelpers.withIndent;\n\n(function (conditions) {\n  var _marked6 =\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(indentIfStartOfLine),\n      _marked7 =\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(withIndentIfStartOfLineIndented);\n\n  function newlineIfHangingSpaceOtherwise(options) {\n    var startInfo = options.startInfo,\n        endInfo = options.endInfo,\n        _options$spaceChar = options.spaceChar,\n        spaceChar = _options$spaceChar === void 0 ? \" \" : _options$spaceChar;\n    return {\n      kind: exports.PrintItemKind.Condition,\n      name: \"newLineIfHangingSpaceOtherwise\",\n      condition: function condition(conditionContext) {\n        return exports.conditionResolvers.isHanging(conditionContext, startInfo, endInfo);\n      },\n      true: [exports.Signal.NewLine],\n      false: [spaceChar]\n    };\n  }\n\n  conditions.newlineIfHangingSpaceOtherwise = newlineIfHangingSpaceOtherwise;\n\n  function newlineIfMultipleLinesSpaceOrNewlineOtherwise(options) {\n    var startInfo = options.startInfo,\n        endInfo = options.endInfo;\n    return {\n      name: \"newlineIfMultipleLinesSpaceOrNewlineOtherwise\",\n      kind: exports.PrintItemKind.Condition,\n      condition: function condition(conditionContext) {\n        return exports.conditionResolvers.isMultipleLines(conditionContext, startInfo, endInfo || conditionContext.writerInfo, false);\n      },\n      true: [exports.Signal.NewLine],\n      false: [exports.Signal.SpaceOrNewLine]\n    };\n  }\n\n  conditions.newlineIfMultipleLinesSpaceOrNewlineOtherwise = newlineIfMultipleLinesSpaceOrNewlineOtherwise;\n\n  function singleIndentIfStartOfLine() {\n    return {\n      kind: exports.PrintItemKind.Condition,\n      name: \"singleIndentIfStartOfLine\",\n      condition: exports.conditionResolvers.isStartOfNewLine,\n      true: [exports.Signal.SingleIndent]\n    };\n  }\n\n  conditions.singleIndentIfStartOfLine = singleIndentIfStartOfLine;\n\n  function indentIfStartOfLine(item) {\n    return _regeneratorRuntime.wrap(function indentIfStartOfLine$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            item = makeIterableRepeatable(item);\n            _context6.next = 3;\n            return {\n              kind: exports.PrintItemKind.Condition,\n              name: \"indentIfStartOfLine\",\n              condition: exports.conditionResolvers.isStartOfNewLine,\n              true: withIndent(item),\n              false: item\n            };\n\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _marked6);\n  }\n\n  conditions.indentIfStartOfLine = indentIfStartOfLine;\n\n  function withIndentIfStartOfLineIndented(item) {\n    return _regeneratorRuntime.wrap(function withIndentIfStartOfLineIndented$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            item = makeIterableRepeatable(item);\n            _context7.next = 3;\n            return {\n              kind: exports.PrintItemKind.Condition,\n              name: \"withIndentIfStartOfLineIndented\",\n              condition: function condition(context) {\n                return context.writerInfo.lineStartIndentLevel > context.writerInfo.indentLevel;\n              },\n              true: withIndent(item),\n              false: item\n            };\n\n          case 3:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _marked7);\n  }\n\n  conditions.withIndentIfStartOfLineIndented = withIndentIfStartOfLineIndented;\n\n  function forceReevaluationOnceResolved(info) {\n    return {\n      kind: exports.PrintItemKind.Condition,\n      name: \"forceReevaluationOnceInfoResolved\",\n      condition: function condition(conditionContext) {\n        return conditionContext.getResolvedInfo(info) == null ? undefined : false;\n      }\n    };\n  }\n\n  conditions.forceReevaluationOnceResolved = forceReevaluationOnceResolved;\n})(exports.conditions || (exports.conditions = {}));\n\nvar CliLoggingEnvironment =\n/*#__PURE__*/\nfunction () {\n  function CliLoggingEnvironment() {\n    _classCallCheck(this, CliLoggingEnvironment);\n  }\n\n  _createClass(CliLoggingEnvironment, [{\n    key: \"log\",\n    value: function log(text) {\n      console.log(text);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(text) {\n      console.warn(text);\n    }\n  }, {\n    key: \"error\",\n    value: function error(text) {\n      console.error(text);\n    }\n  }]);\n\n  return CliLoggingEnvironment;\n}();\n\nvar Writer =\n/*#__PURE__*/\nfunction () {\n  function Writer(options) {\n    _classCallCheck(this, Writer);\n\n    this.options = options;\n    this.indentWidth = options.indentWidth;\n    this.singleIndentationText = this.options.useTabs ? \"\\t\" : \" \".repeat(options.indentWidth);\n    this.state = {\n      currentLineColumn: 0,\n      currentLineNumber: 0,\n      lastLineIndentLevel: 0,\n      indentLevel: 0,\n      indentText: \"\",\n      expectNewLineNext: false,\n      items: [],\n      ignoreIndent: false\n    };\n  }\n\n  _createClass(Writer, [{\n    key: \"onNewLine\",\n    value: function onNewLine(action) {\n      if (this.fireOnNewLine != null) throwError(\"Cannot call \".concat(\"onNewLine\", \" multiple times.\"));\n      this.fireOnNewLine = action;\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return Writer.cloneState(this.state);\n    }\n  }, {\n    key: \"setState\",\n    value: function setState(state) {\n      this.state = Writer.cloneState(state);\n    }\n  }, {\n    key: \"singleIndent\",\n    value: function singleIndent() {\n      this.write(this.singleIndentationText);\n    }\n  }, {\n    key: \"write\",\n    value: function write(text) {\n      this.validateText(text);\n      this.baseWrite(text);\n    }\n  }, {\n    key: \"validateText\",\n    value: function validateText(text) {\n      if (text === \"\\n\" || text === \"\\r\\n\") return;\n      if (text.includes(\"\\n\")) throwError(\"Printer error: The parser should write\");\n    }\n  }, {\n    key: \"baseWrite\",\n    value: function baseWrite(text) {\n      var startsWithNewLine = text[0] === \"\\n\" || text[0] === \"\\r\" && text[1] === \"\\n\";\n\n      if (this.expectNewLineNext) {\n        this.expectNewLineNext = false;\n\n        if (!startsWithNewLine) {\n          this.baseWrite(this.options.newlineKind);\n          this.baseWrite(text);\n          return;\n        }\n      }\n\n      if (this.currentLineColumn === 0 && !startsWithNewLine && this.indentLevel > 0 && !this.ignoreIndent) text = this.indentText + text;\n\n      for (var i = 0; i < text.length; i++) {\n        if (text[i] === \"\\n\") {\n          this.currentLineColumn = 0;\n          this.currentLineNumber++;\n          this.lastLineIndentLevel = this.indentLevel;\n          this.fireOnNewLine();\n        } else {\n          if (this.currentLineColumn === 0) this.lastLineIndentLevel = this.indentLevel;\n          if (text[i] === \"\\t\") this.currentLineColumn += this.indentWidth;else this.currentLineColumn++;\n        }\n      }\n\n      this.state.items.push(text);\n    }\n  }, {\n    key: \"startIndent\",\n    value: function startIndent() {\n      this.indentLevel++;\n    }\n  }, {\n    key: \"finishIndent\",\n    value: function finishIndent() {\n      this.indentLevel--;\n      if (this.indentLevel < 0) return throwError(\"For some reason \".concat(\"finishIndent\", \" was called without a corresponding \", \"startIndent\", \".\"));\n    }\n  }, {\n    key: \"startIgnoringIndent\",\n    value: function startIgnoringIndent() {\n      this.ignoreIndent = true;\n    }\n  }, {\n    key: \"finishIgnoringIndent\",\n    value: function finishIgnoringIndent() {\n      this.ignoreIndent = false;\n    }\n  }, {\n    key: \"markExpectNewLine\",\n    value: function markExpectNewLine() {\n      this.expectNewLineNext = true;\n    }\n  }, {\n    key: \"getLineStartIndentLevel\",\n    value: function getLineStartIndentLevel() {\n      return this.lastLineIndentLevel;\n    }\n  }, {\n    key: \"getIndentationLevel\",\n    value: function getIndentationLevel() {\n      return this.indentLevel;\n    }\n  }, {\n    key: \"getLineStartColumnNumber\",\n    value: function getLineStartColumnNumber() {\n      return this.singleIndentationText.length * this.lastLineIndentLevel;\n    }\n  }, {\n    key: \"getLineColumn\",\n    value: function getLineColumn() {\n      if (this.currentLineColumn === 0) return this.indentWidth * this.indentLevel;\n      return this.currentLineColumn;\n    }\n  }, {\n    key: \"getLineNumber\",\n    value: function getLineNumber() {\n      return this.currentLineNumber;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.items.join(\"\");\n    }\n  }, {\n    key: \"currentLineColumn\",\n    get: function get() {\n      return this.state.currentLineColumn;\n    },\n    set: function set(value) {\n      this.state.currentLineColumn = value;\n    }\n  }, {\n    key: \"currentLineNumber\",\n    get: function get() {\n      return this.state.currentLineNumber;\n    },\n    set: function set(value) {\n      this.state.currentLineNumber = value;\n    }\n  }, {\n    key: \"lastLineIndentLevel\",\n    get: function get() {\n      return this.state.lastLineIndentLevel;\n    },\n    set: function set(value) {\n      this.state.lastLineIndentLevel = value;\n    }\n  }, {\n    key: \"expectNewLineNext\",\n    get: function get() {\n      return this.state.expectNewLineNext;\n    },\n    set: function set(value) {\n      this.state.expectNewLineNext = value;\n    }\n  }, {\n    key: \"indentLevel\",\n    get: function get() {\n      return this.state.indentLevel;\n    },\n    set: function set(level) {\n      if (this.indentLevel === level) return;\n      this.state.indentLevel = level;\n      this.state.indentText = this.singleIndentationText.repeat(level);\n      if (this.currentLineColumn === 0) this.lastLineIndentLevel = level;\n    }\n  }, {\n    key: \"indentText\",\n    get: function get() {\n      return this.state.indentText;\n    }\n  }, {\n    key: \"ignoreIndent\",\n    get: function get() {\n      return this.state.ignoreIndent;\n    },\n    set: function set(value) {\n      this.state.ignoreIndent = value;\n    }\n  }, {\n    key: \"items\",\n    get: function get() {\n      return this.state.items;\n    }\n  }], [{\n    key: \"cloneState\",\n    value: function cloneState(state) {\n      var newState = {\n        currentLineColumn: state.currentLineColumn,\n        currentLineNumber: state.currentLineNumber,\n        lastLineIndentLevel: state.lastLineIndentLevel,\n        expectNewLineNext: state.expectNewLineNext,\n        indentLevel: state.indentLevel,\n        indentText: state.indentText,\n        items: _toConsumableArray(state.items),\n        ignoreIndent: state.ignoreIndent\n      };\n      return newState;\n    }\n  }]);\n\n  return Writer;\n}();\n\nvar RepeatableConditionCache =\n/*#__PURE__*/\nfunction () {\n  function RepeatableConditionCache() {\n    _classCallCheck(this, RepeatableConditionCache);\n\n    this.repeatableConditions = new Map();\n  }\n\n  _createClass(RepeatableConditionCache, [{\n    key: \"getOrCreate\",\n    value: function getOrCreate(condition) {\n      var repeatableCondition = this.repeatableConditions.get(condition);\n\n      if (repeatableCondition == null) {\n        repeatableCondition = this.create(condition);\n        this.repeatableConditions.set(condition, repeatableCondition);\n      }\n\n      return repeatableCondition;\n    }\n  }, {\n    key: \"create\",\n    value: function create(condition) {\n      return {\n        name: condition.name,\n        originalCondition: condition,\n        condition: condition.condition,\n        true: condition.true && Array.from(condition.true),\n        false: condition.false && Array.from(condition.false)\n      };\n    }\n  }]);\n\n  return RepeatableConditionCache;\n}();\n\nfunction deepIterableToContainer(iterable) {\n  var repeatableConditionCache = new RepeatableConditionCache();\n  return getContainer(iterable, undefined);\n\n  function getContainer(items, parent) {\n    var container = {\n      items: [],\n      parent: parent\n    };\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = items[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var item = _step2.value;\n        if (typeof item === \"object\" && item.kind === exports.PrintItemKind.Condition) container.items.push(createConditionContainer(repeatableConditionCache.getOrCreate(item), container));else container.items.push(item);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    return container;\n  }\n\n  function createConditionContainer(repeatableCondition, parent) {\n    return {\n      kind: exports.PrintItemKind.Condition,\n      name: repeatableCondition.name,\n      condition: repeatableCondition.condition,\n      originalCondition: repeatableCondition.originalCondition,\n\n      get true() {\n        var value = repeatableCondition.true && getContainer(repeatableCondition.true, parent);\n        Object.defineProperty(this, \"true\", {\n          value: value\n        });\n        return value;\n      },\n\n      get false() {\n        var value = repeatableCondition.false && getContainer(repeatableCondition.false, parent);\n        Object.defineProperty(this, \"false\", {\n          value: value\n        });\n        return value;\n      }\n\n    };\n  }\n}\n\nvar exitSymbol = Symbol(\"Used in certain cases when a save point is restored.\");\n\nfunction print(iterable, options) {\n  var writer = new Writer(options);\n  var resolvedConditions = new Map();\n  var resolvedInfos = new Map();\n  var lookAheadSavePoints = new Map();\n  var possibleNewLineSavePoint;\n  var newlineGroupDepth = 0;\n  var currentIndexes = [0];\n  var container = deepIterableToContainer(iterable);\n  writer.onNewLine(function () {\n    possibleNewLineSavePoint = undefined;\n  });\n  printItems();\n  return writer.toString();\n\n  function printItems() {\n    while (true) {\n      while (currentIndexes[currentIndexes.length - 1] < container.items.length) {\n        handlePrintItem(container.items[currentIndexes[currentIndexes.length - 1]]);\n        currentIndexes[currentIndexes.length - 1]++;\n      }\n\n      if (container.parent == null) return;\n      container = container.parent;\n      currentIndexes.pop();\n      currentIndexes[currentIndexes.length - 1]++;\n    }\n  }\n\n  function handlePrintItem(printItem) {\n    if (typeof printItem === \"number\") handleSignal(printItem);else if (typeof printItem === \"string\") handleString(printItem);else if (printItem.kind === exports.PrintItemKind.RawString) handleRawString(printItem);else if (printItem.kind === exports.PrintItemKind.Condition) handleCondition(printItem);else if (printItem.kind === exports.PrintItemKind.Info) resolveInfo(printItem);else assertNever(printItem);\n\n    function handleSignal(signal) {\n      switch (signal) {\n        case exports.Signal.NewLine:\n          writer.write(options.newlineKind);\n          break;\n\n        case exports.Signal.ExpectNewLine:\n          writer.markExpectNewLine();\n          break;\n\n        case exports.Signal.PossibleNewLine:\n          markPossibleNewLineIfAble();\n          break;\n\n        case exports.Signal.SpaceOrNewLine:\n          if (isAboveMaxWidth(1)) {\n            var saveState = possibleNewLineSavePoint;\n            if (saveState == null || saveState.newlineGroupDepth >= newlineGroupDepth) writer.write(options.newlineKind);else if (possibleNewLineSavePoint != null) updateStateToSavePoint(possibleNewLineSavePoint);\n          } else {\n            markPossibleNewLineIfAble();\n            writer.write(\" \");\n          }\n\n          break;\n\n        case exports.Signal.StartIndent:\n          writer.startIndent();\n          break;\n\n        case exports.Signal.FinishIndent:\n          writer.finishIndent();\n          break;\n\n        case exports.Signal.StartNewLineGroup:\n          newlineGroupDepth++;\n          break;\n\n        case exports.Signal.FinishNewLineGroup:\n          newlineGroupDepth--;\n          break;\n\n        case exports.Signal.SingleIndent:\n          writer.singleIndent();\n          break;\n\n        case exports.Signal.StartIgnoringIndent:\n          writer.startIgnoringIndent();\n          break;\n\n        case exports.Signal.FinishIgnoringIndent:\n          writer.finishIgnoringIndent();\n          break;\n\n        default:\n          assertNever(signal);\n          break;\n      }\n    }\n\n    function handleString(text) {\n      var isNewLine = text === \"\\n\" || text === \"\\r\\n\";\n      if (!isNewLine && text.includes(\"\\n\")) throw new Error(\"Parser error: Cannot parse text that includes newlines. Newlines must be in their own string.\");\n      if (!isNewLine && possibleNewLineSavePoint != null && isAboveMaxWidth(text.length)) updateStateToSavePoint(possibleNewLineSavePoint);else writer.write(text);\n    }\n\n    function handleRawString(unknown) {\n      if (possibleNewLineSavePoint != null && isAboveMaxWidth(getLineWidth())) updateStateToSavePoint(possibleNewLineSavePoint);else writer.baseWrite(unknown.text);\n\n      function getLineWidth() {\n        var index = unknown.text.indexOf(\"\\n\");\n        if (index === -1) return unknown.text.length;else if (unknown.text[index - 1] === \"\\r\") return index - 1;\n        return index;\n      }\n    }\n\n    function handleCondition(condition) {\n      try {\n        var conditionValue = getConditionValue(condition.originalCondition, condition.originalCondition);\n\n        if (conditionValue) {\n          if (condition.true) {\n            container = condition.true;\n            currentIndexes.push(-1);\n          }\n        } else {\n          if (condition.false) {\n            container = condition.false;\n            currentIndexes.push(-1);\n          }\n        }\n      } catch (err) {\n        if (err !== exitSymbol) throw err;\n      }\n    }\n  }\n\n  function markPossibleNewLineIfAble() {\n    if (possibleNewLineSavePoint != null && newlineGroupDepth > possibleNewLineSavePoint.newlineGroupDepth) return;\n    possibleNewLineSavePoint = createSavePoint(\"newline\");\n  }\n\n  function updateStateToSavePoint(savePoint) {\n    var isForNewLine = possibleNewLineSavePoint === savePoint;\n    writer.setState(savePoint.writerState);\n    possibleNewLineSavePoint = isForNewLine ? undefined : savePoint.possibleNewLineSavePoint;\n    container = savePoint.container;\n    currentIndexes = _toConsumableArray(savePoint.currentIndexes);\n    newlineGroupDepth = savePoint.newlineGroupDepth;\n    if (isForNewLine) writer.write(options.newlineKind);\n  }\n\n  function getConditionValue(condition, printingCondition) {\n    if (typeof condition.condition === \"object\") {\n      var result = resolvedConditions.get(condition.condition);\n\n      if (result == null) {\n        if (!lookAheadSavePoints.has(condition)) {\n          var savePoint = createSavePointForRestoringCondition(condition.name);\n          lookAheadSavePoints.set(condition, savePoint);\n        }\n      } else {\n        var _savePoint = lookAheadSavePoints.get(condition);\n\n        if (_savePoint != null) {\n          lookAheadSavePoints.delete(condition);\n          updateStateToSavePoint(_savePoint);\n          throw exitSymbol;\n        }\n      }\n\n      return result;\n    } else if (condition.condition instanceof Function) {\n      var _result = condition.condition({\n        getResolvedCondition: getResolvedCondition,\n        writerInfo: getWriterInfo(),\n        getResolvedInfo: function getResolvedInfo(info) {\n          return _getResolvedInfo(info);\n        }\n      });\n\n      if (_result != null) resolvedConditions.set(condition, _result);\n      return _result;\n    } else {\n      return assertNever(condition.condition);\n    }\n\n    function getResolvedCondition(c, defaultValue) {\n      var conditionValue = getConditionValue(c);\n      if (conditionValue == null) return defaultValue;\n      return conditionValue;\n    }\n\n    function _getResolvedInfo(info) {\n      var resolvedInfo = resolvedInfos.get(info);\n\n      if (resolvedInfo == null && !lookAheadSavePoints.has(info)) {\n        var _savePoint2 = createSavePointForRestoringCondition(info.name);\n\n        lookAheadSavePoints.set(info, _savePoint2);\n      }\n\n      return resolvedInfo;\n    }\n  }\n\n  function resolveInfo(info) {\n    resolvedInfos.set(info, getWriterInfo());\n    var savePoint = lookAheadSavePoints.get(info);\n\n    if (savePoint != null) {\n      lookAheadSavePoints.delete(info);\n      updateStateToSavePoint(savePoint);\n    }\n  }\n\n  function getWriterInfo() {\n    return {\n      lineStartIndentLevel: writer.getLineStartIndentLevel(),\n      lineStartColumnNumber: writer.getLineStartColumnNumber(),\n      lineNumber: writer.getLineNumber(),\n      columnNumber: writer.getLineColumn(),\n      indentLevel: writer.getIndentationLevel()\n    };\n  }\n\n  function isAboveMaxWidth() {\n    var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return writer.getLineColumn() + 1 + offset > options.maxWidth;\n  }\n\n  function createSavePointForRestoringCondition(conditionName) {\n    var savePoint = createSavePoint(conditionName);\n    savePoint.currentIndexes[savePoint.currentIndexes.length - 1]--;\n    return savePoint;\n  }\n\n  function createSavePoint(name) {\n    return {\n      name: name,\n      currentIndexes: _toConsumableArray(currentIndexes),\n      newlineGroupDepth: newlineGroupDepth,\n      writerState: writer.getState(),\n      possibleNewLineSavePoint: possibleNewLineSavePoint,\n      container: container\n    };\n  }\n}\n\nfunction formatFileText(options) {\n  var filePath = options.filePath,\n      fileText = options.fileText,\n      plugins = options.plugins;\n  var plugin = getPlugin();\n  var parseResult = plugin.parseFile(filePath, fileText);\n  if (!parseResult) return options.fileText;\n  var config = plugin.getConfiguration();\n  return print(parseResult, {\n    newlineKind: config.newlineKind === \"auto\" ? resolveNewLineKindFromText(fileText) : config.newlineKind,\n    maxWidth: config.lineWidth,\n    indentWidth: config.indentWidth,\n    useTabs: config.useTabs\n  });\n\n  function getPlugin() {\n    if (plugins.length === 0) return throwError(\"Formatter had zero plugins to format with. Did you mean to install or provide one such as dprint-plugin-typescript?\");\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = plugins[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var _plugin = _step3.value;\n        if (_plugin.shouldParseFile(filePath, fileText)) return _plugin;\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n          _iterator3.return();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n\n    return throwError(\"Could not find a plugin that would parse the file at path: \".concat(filePath));\n  }\n}\n\nvar version = \"0.4.4\";\nexports.CliLoggingEnvironment = CliLoggingEnvironment;\nexports.formatFileText = formatFileText;\nexports.getFileExtension = getFileExtension;\nexports.makeIterableRepeatable = makeIterableRepeatable;\nexports.resolveConfiguration = resolveConfiguration;\nexports.resolveNewLineKindFromText = resolveNewLineKindFromText;\nexports.version = version;","'use strict';\n\nvar _toConsumableArray = require(\"/home/travis/build/dsherret/dprint/packages/playground/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _regeneratorRuntime = require(\"/home/travis/build/dsherret/dprint/packages/playground/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"/home/travis/build/dsherret/dprint/packages/playground/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/travis/build/dsherret/dprint/packages/playground/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseNode),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseProgram),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseBlockStatement),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseIdentifier),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseV8IntrinsicIdentifier),\n    _marked11 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseClassDeclarationOrExpression),\n    _marked13 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseEnumDeclaration),\n    _marked15 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseEnumMember),\n    _marked16 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseExportAllDeclaration),\n    _marked17 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseExportNamedDeclaration),\n    _marked18 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseExportDefaultDeclaration),\n    _marked20 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseFunctionDeclarationOrExpression),\n    _marked21 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseImportDeclaration),\n    _marked22 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseImportEqualsDeclaration),\n    _marked23 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseInterfaceDeclaration),\n    _marked24 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseModuleDeclaration),\n    _marked25 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseNamespaceExportDeclaration),\n    _marked26 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseTypeAlias),\n    _marked29 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseTypeParameterDeclaration),\n    _marked31 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseVariableDeclaration),\n    _marked32 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseVariableDeclarator),\n    _marked33 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseClassOrObjectMethod),\n    _marked34 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseClassProperty),\n    _marked35 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseDecorator),\n    _marked36 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseParameterProperty),\n    _marked37 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseCallSignatureDeclaration),\n    _marked38 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseConstructSignatureDeclaration),\n    _marked39 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseIndexSignature),\n    _marked40 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseMethodSignature),\n    _marked41 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parsePropertySignature),\n    _marked42 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseBreakStatement),\n    _marked43 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseContinueStatement),\n    _marked44 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseDebuggerStatement),\n    _marked45 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseDirective),\n    _marked46 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseDoWhileStatement),\n    _marked47 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseEmptyStatement),\n    _marked48 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseExportAssignment),\n    _marked51 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseExpressionStatement),\n    _marked53 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseForInStatement),\n    _marked55 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseForOfStatement),\n    _marked57 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseForStatement),\n    _marked59 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseIfStatement),\n    _marked60 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseInterpreterDirective),\n    _marked61 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseLabeledStatement),\n    _marked62 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseReturnStatement),\n    _marked64 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseSwitchCase),\n    _marked65 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseSwitchStatement),\n    _marked66 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseThrowStatement),\n    _marked67 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseTryStatement),\n    _marked68 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseWhileStatement),\n    _marked69 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseCatchClause),\n    _marked75 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseArrayPattern),\n    _marked76 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseArrayExpression),\n    _marked77 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseArrowFunctionExpression),\n    _marked78 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseAsExpression),\n    _marked79 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseAssignmentExpression),\n    _marked80 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseAssignmentPattern),\n    _marked81 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseAwaitExpression),\n    _marked84 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseBinaryOrLogicalExpression),\n    _marked85 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseExpressionWithTypeArguments),\n    _marked86 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseExternalModuleReference),\n    _marked92 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseCallExpression),\n    _marked94 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseConditionalExpression),\n    _marked95 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseMemberExpression),\n    _marked96 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseMetaProperty),\n    _marked97 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseNewExpression),\n    _marked98 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseNonNullExpression),\n    _marked99 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseObjectExpression),\n    _marked100 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseObjectPattern),\n    _marked101 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseObjectProperty),\n    _marked102 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseRestElement),\n    _marked103 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseSequenceExpression),\n    _marked104 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseSpreadElement),\n    _marked105 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseTaggedTemplateExpression),\n    _marked106 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseTypeAssertion),\n    _marked107 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseUnaryExpression),\n    _marked108 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseUpdateExpression),\n    _marked109 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseYieldExpression),\n    _marked110 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseImportNamespaceSpecifier),\n    _marked111 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseImportSpecifier),\n    _marked112 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseExportDefaultSpecifier),\n    _marked113 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseExportNamespaceSpecifier),\n    _marked114 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseExportSpecifier),\n    _marked115 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseBigIntLiteral),\n    _marked116 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseBooleanLiteral),\n    _marked117 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseNumericLiteral),\n    _marked118 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseStringOrDirectiveLiteral),\n    _marked119 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseRegExpLiteral),\n    _marked120 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseTemplateElement),\n    _marked122 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseTemplateLiteral),\n    _marked123 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseArrayType),\n    _marked127 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseConditionalType),\n    _marked128 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseConstructorType),\n    _marked129 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseFunctionType),\n    _marked130 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseImportType),\n    _marked131 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseIndexedAccessType),\n    _marked132 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseInferType),\n    _marked133 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseLiteralType),\n    _marked136 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseMappedType),\n    _marked137 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseOptionalType),\n    _marked138 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseParenthesizedType),\n    _marked139 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseQualifiedName),\n    _marked140 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseRestType),\n    _marked142 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseTupleType),\n    _marked143 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseTypeAnnotation),\n    _marked144 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseTypeLiteral),\n    _marked145 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseTypeOperator),\n    _marked146 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseTypeParameter),\n    _marked147 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseTypePredicate),\n    _marked148 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseTypeQuery),\n    _marked149 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseTypeReference),\n    _marked151 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseUnionOrIntersectionType),\n    _marked152 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseJsxAttribute),\n    _marked153 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseJsxElement),\n    _marked154 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseJsxEmptyExpression),\n    _marked155 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseJsxExpressionContainer),\n    _marked158 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseJsxOpeningElement),\n    _marked159 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseJsxClosingElement),\n    _marked160 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseJsxFragment),\n    _marked161 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseJsxOpeningFragment),\n    _marked162 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseJsxClosingFragment),\n    _marked163 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseJsxIdentifier),\n    _marked164 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseJsxMemberExpression),\n    _marked165 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseJsxNamespacedName),\n    _marked166 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseJsxSpreadAttribute),\n    _marked167 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseJsxSpreadChild),\n    _marked168 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseJsxText),\n    _marked170 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseMemberedBody),\n    _marked171 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseJsxWithOpeningAndClosing),\n    _marked174 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseJsxChildren),\n    _marked175 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseStatements),\n    _marked176 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseStatementOrMembers),\n    _marked177 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseTrailingCommentsAsStatements),\n    _marked179 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getTrailingCommentsAsStatements),\n    _marked181 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseParametersOrArguments),\n    _marked183 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseCommaSeparatedValues),\n    _marked185 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseCloseParenWithType),\n    _marked186 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseNodeInParens),\n    _marked187 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseIteratorInParens),\n    _marked189 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseNamedImportsOrExports),\n    _marked190 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseDecoratorsIfClass),\n    _marked191 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseDecorators),\n    _marked193 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseForMemberLikeExpression),\n    _marked194 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseExtendsOrImplements),\n    _marked197 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseArrayLikeNodes),\n    _marked199 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseObjectLikeNode),\n    _marked200 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getWithComments),\n    _marked201 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseCommentsAsLeading),\n    _marked202 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseTrailingComments),\n    _marked203 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseCommentsAsTrailing),\n    _marked204 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseCommentCollection),\n    _marked205 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseCommentBasedOnLastNode),\n    _marked208 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseComment),\n    _marked210 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseFirstLineTrailingComments),\n    _marked211 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseBraceSeparator),\n    _marked212 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseControlFlowSeparator),\n    _marked213 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseTypeAnnotationWithColonIfExists),\n    _marked214 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(parseNodeWithPreceedingColon);\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar core = require('@dprint/core');\n\nvar os = require('os');\n\nvar parser = require('@babel/parser');\n\nvar defaultValues = {\n  semiColons: true,\n  singleQuotes: false,\n  useBraces: \"whenNotSingleLine\",\n  bracePosition: \"nextLineIfHanging\",\n  singleBodyPosition: \"maintain\",\n  nextControlFlowPosition: \"nextLine\",\n  operatorPosition: \"nextLine\",\n  trailingCommas: \"never\",\n  forceMultiLineArguments: false,\n  forceMultiLineParameters: false,\n  \"enumDeclaration.memberSpacing\": \"maintain\",\n  \"arrowFunctionExpression.useParentheses\": \"maintain\",\n  \"binaryExpression.spaceSurroundingOperator\": true,\n  \"constructor.spaceBeforeParentheses\": false,\n  \"constructorType.spaceAfterNewKeyword\": false,\n  \"constructSignature.spaceAfterNewKeyword\": false,\n  \"doWhileStatement.spaceAfterWhileKeyword\": true,\n  \"exportDeclaration.spaceSurroundingNamedExports\": true,\n  \"forInStatement.spaceAfterForKeyword\": true,\n  \"forOfStatement.spaceAfterForKeyword\": true,\n  \"forStatement.spaceAfterForKeyword\": true,\n  \"forStatement.spaceAfterSemiColons\": true,\n  \"functionDeclaration.spaceBeforeParentheses\": false,\n  \"functionExpression.spaceBeforeParentheses\": false,\n  \"getAccessor.spaceBeforeParentheses\": false,\n  \"ifStatement.spaceAfterIfKeyword\": true,\n  \"importDeclaration.spaceSurroundingNamedExports\": true,\n  \"jsxExpressionContainer.spaceSurroundingExpression\": false,\n  \"method.spaceBeforeParentheses\": false,\n  \"setAccessor.spaceBeforeParentheses\": false,\n  \"typeAnnotation.spaceBeforeColon\": false,\n  \"typeAssertion.spaceBeforeExpression\": true,\n  \"whileStatement.spaceAfterWhileKeyword\": true\n};\n\nfunction resolveConfiguration(globalConfig, pluginConfig) {\n  pluginConfig = Object.assign({}, pluginConfig);\n  var diagnostics = [];\n  var semiColons = getValue(\"semiColons\", defaultValues.semiColons, ensureBoolean);\n  var useBraces = getValue(\"useBraces\", defaultValues.useBraces, ensureBraceUse);\n  var bracePosition = getValue(\"bracePosition\", defaultValues.bracePosition, ensureBracePosition);\n  var singleBodyPosition = getValue(\"singleBodyPosition\", defaultValues.singleBodyPosition, ensureSingleBodyPosition);\n  var nextControlFlowPosition = getValue(\"nextControlFlowPosition\", defaultValues.nextControlFlowPosition, ensureNextControlFlowPosition);\n  var operatorPosition = getValue(\"operatorPosition\", defaultValues.operatorPosition, ensureOperatorPosition);\n  var trailingCommas = getValue(\"trailingCommas\", defaultValues.trailingCommas, ensureTrailingCommas);\n  var forceMultiLineArguments = getValue(\"forceMultiLineArguments\", defaultValues.forceMultiLineArguments, ensureBoolean);\n  var forceMultiLineParameters = getValue(\"forceMultiLineParameters\", defaultValues.forceMultiLineParameters, ensureBoolean);\n  var resolvedConfig = {\n    singleQuotes: getValue(\"singleQuotes\", defaultValues[\"singleQuotes\"], ensureBoolean),\n    newlineKind: getNewLineKind(),\n    lineWidth: getValue(\"lineWidth\", globalConfig.lineWidth, ensureNumber),\n    indentWidth: getValue(\"indentWidth\", globalConfig.indentWidth, ensureNumber),\n    useTabs: getValue(\"useTabs\", globalConfig.useTabs, ensureBoolean),\n    \"enumDeclaration.memberSpacing\": getValue(\"enumDeclaration.memberSpacing\", defaultValues[\"enumDeclaration.memberSpacing\"], ensureEnumMemberSpacing),\n    \"arrowFunctionExpression.useParentheses\": getValue(\"arrowFunctionExpression.useParentheses\", defaultValues[\"arrowFunctionExpression.useParentheses\"], ensureArrowFunctionUseParentheses),\n    \"breakStatement.semiColon\": getValue(\"breakStatement.semiColon\", semiColons, ensureBoolean),\n    \"callSignature.semiColon\": getValue(\"callSignature.semiColon\", semiColons, ensureBoolean),\n    \"classProperty.semiColon\": getValue(\"classProperty.semiColon\", semiColons, ensureBoolean),\n    \"constructor.semiColon\": getValue(\"constructor.semiColon\", semiColons, ensureBoolean),\n    \"constructSignature.semiColon\": getValue(\"constructSignature.semiColon\", semiColons, ensureBoolean),\n    \"continueStatement.semiColon\": getValue(\"continueStatement.semiColon\", semiColons, ensureBoolean),\n    \"debuggerStatement.semiColon\": getValue(\"debuggerStatement.semiColon\", semiColons, ensureBoolean),\n    \"directive.semiColon\": getValue(\"directive.semiColon\", semiColons, ensureBoolean),\n    \"doWhileStatement.semiColon\": getValue(\"doWhileStatement.semiColon\", semiColons, ensureBoolean),\n    \"exportAllDeclaration.semiColon\": getValue(\"exportAllDeclaration.semiColon\", semiColons, ensureBoolean),\n    \"exportAssignment.semiColon\": getValue(\"exportAssignment.semiColon\", semiColons, ensureBoolean),\n    \"exportDefaultDeclaration.semiColon\": getValue(\"exportDefaultDeclaration.semiColon\", semiColons, ensureBoolean),\n    \"exportNamedDeclaration.semiColon\": getValue(\"exportNamedDeclaration.semiColon\", semiColons, ensureBoolean),\n    \"expressionStatement.semiColon\": getValue(\"expressionStatement.semiColon\", semiColons, ensureBoolean),\n    \"functionDeclaration.semiColon\": getValue(\"functionDeclaration.semiColon\", semiColons, ensureBoolean),\n    \"getAccessor.semiColon\": getValue(\"getAccessor.semiColon\", semiColons, ensureBoolean),\n    \"importDeclaration.semiColon\": getValue(\"importDeclaration.semiColon\", semiColons, ensureBoolean),\n    \"importEqualsDeclaration.semiColon\": getValue(\"importEqualsDeclaration.semiColon\", semiColons, ensureBoolean),\n    \"indexSignature.semiColon\": getValue(\"indexSignature.semiColon\", semiColons, ensureBoolean),\n    \"mappedType.semiColon\": getValue(\"mappedType.semiColon\", semiColons, ensureBoolean),\n    \"method.semiColon\": getValue(\"method.semiColon\", semiColons, ensureBoolean),\n    \"methodSignature.semiColon\": getValue(\"methodSignature.semiColon\", semiColons, ensureBoolean),\n    \"moduleDeclaration.semiColon\": getValue(\"moduleDeclaration.semiColon\", semiColons, ensureBoolean),\n    \"namespaceExportDeclaration.semiColon\": getValue(\"namespaceExportDeclaration.semiColon\", semiColons, ensureBoolean),\n    \"propertySignature.semiColon\": getValue(\"propertySignature.semiColon\", semiColons, ensureBoolean),\n    \"returnStatement.semiColon\": getValue(\"returnStatement.semiColon\", semiColons, ensureBoolean),\n    \"setAccessor.semiColon\": getValue(\"setAccessor.semiColon\", semiColons, ensureBoolean),\n    \"throwStatement.semiColon\": getValue(\"throwStatement.semiColon\", semiColons, ensureBoolean),\n    \"typeAlias.semiColon\": getValue(\"typeAlias.semiColon\", semiColons, ensureBoolean),\n    \"variableStatement.semiColon\": getValue(\"variableStatement.semiColon\", semiColons, ensureBoolean),\n    \"forInStatement.useBraces\": getValue(\"forInStatement.useBraces\", useBraces, ensureBraceUse),\n    \"forOfStatement.useBraces\": getValue(\"forOfStatement.useBraces\", useBraces, ensureBraceUse),\n    \"forStatement.useBraces\": getValue(\"forStatement.useBraces\", useBraces, ensureBraceUse),\n    \"ifStatement.useBraces\": getValue(\"ifStatement.useBraces\", useBraces, ensureBraceUse),\n    \"whileStatement.useBraces\": getValue(\"whileStatement.useBraces\", useBraces, ensureBraceUse),\n    \"arrowFunctionExpression.bracePosition\": getValue(\"arrowFunctionExpression.bracePosition\", bracePosition, ensureBracePosition),\n    \"classDeclaration.bracePosition\": getValue(\"classDeclaration.bracePosition\", bracePosition, ensureBracePosition),\n    \"classExpression.bracePosition\": getValue(\"classExpression.bracePosition\", bracePosition, ensureBracePosition),\n    \"constructor.bracePosition\": getValue(\"constructor.bracePosition\", bracePosition, ensureBracePosition),\n    \"doWhileStatement.bracePosition\": getValue(\"doWhileStatement.bracePosition\", bracePosition, ensureBracePosition),\n    \"enumDeclaration.bracePosition\": getValue(\"enumDeclaration.bracePosition\", bracePosition, ensureBracePosition),\n    \"forInStatement.bracePosition\": getValue(\"forInStatement.bracePosition\", bracePosition, ensureBracePosition),\n    \"forOfStatement.bracePosition\": getValue(\"forOfStatement.bracePosition\", bracePosition, ensureBracePosition),\n    \"forStatement.bracePosition\": getValue(\"forStatement.bracePosition\", bracePosition, ensureBracePosition),\n    \"functionDeclaration.bracePosition\": getValue(\"functionDeclaration.bracePosition\", bracePosition, ensureBracePosition),\n    \"functionExpression.bracePosition\": getValue(\"functionExpression.bracePosition\", bracePosition, ensureBracePosition),\n    \"getAccessor.bracePosition\": getValue(\"getAccessor.bracePosition\", bracePosition, ensureBracePosition),\n    \"ifStatement.bracePosition\": getValue(\"ifStatement.bracePosition\", bracePosition, ensureBracePosition),\n    \"interfaceDeclaration.bracePosition\": getValue(\"interfaceDeclaration.bracePosition\", bracePosition, ensureBracePosition),\n    \"moduleDeclaration.bracePosition\": getValue(\"moduleDeclaration.bracePosition\", bracePosition, ensureBracePosition),\n    \"method.bracePosition\": getValue(\"method.bracePosition\", bracePosition, ensureBracePosition),\n    \"setAccessor.bracePosition\": getValue(\"setAccessor.bracePosition\", bracePosition, ensureBracePosition),\n    \"switchStatement.bracePosition\": getValue(\"switchStatement.bracePosition\", bracePosition, ensureBracePosition),\n    \"switchCase.bracePosition\": getValue(\"switchCase.bracePosition\", bracePosition, ensureBracePosition),\n    \"tryStatement.bracePosition\": getValue(\"tryStatement.bracePosition\", bracePosition, ensureBracePosition),\n    \"whileStatement.bracePosition\": getValue(\"whileStatement.bracePosition\", bracePosition, ensureBracePosition),\n    \"forInStatement.singleBodyPosition\": getValue(\"forInStatement.singleBodyPosition\", singleBodyPosition, ensureSingleBodyPosition),\n    \"forOfStatement.singleBodyPosition\": getValue(\"forOfStatement.singleBodyPosition\", singleBodyPosition, ensureSingleBodyPosition),\n    \"forStatement.singleBodyPosition\": getValue(\"forStatement.singleBodyPosition\", singleBodyPosition, ensureSingleBodyPosition),\n    \"ifStatement.singleBodyPosition\": getValue(\"ifStatement.singleBodyPosition\", singleBodyPosition, ensureSingleBodyPosition),\n    \"whileStatement.singleBodyPosition\": getValue(\"whileStatement.singleBodyPosition\", singleBodyPosition, ensureSingleBodyPosition),\n    \"ifStatement.nextControlFlowPosition\": getValue(\"ifStatement.nextControlFlowPosition\", nextControlFlowPosition, ensureNextControlFlowPosition),\n    \"tryStatement.nextControlFlowPosition\": getValue(\"tryStatement.nextControlFlowPosition\", nextControlFlowPosition, ensureNextControlFlowPosition),\n    \"binaryExpression.operatorPosition\": getValue(\"binaryExpression.operatorPosition\", operatorPosition, ensureOperatorPosition),\n    \"conditionalExpression.operatorPosition\": getValue(\"conditionalExpression.operatorPosition\", operatorPosition, ensureOperatorPosition),\n    \"logicalExpression.operatorPosition\": getValue(\"logicalExpression.operatorPosition\", operatorPosition, ensureOperatorPosition),\n    \"arrayExpression.trailingCommas\": getValue(\"arrayExpression.trailingCommas\", trailingCommas, ensureTrailingCommas),\n    \"arrayPattern.trailingCommas\": getValue(\"arrayPattern.trailingCommas\", trailingCommas, ensureTrailingCommas),\n    \"enumDeclaration.trailingCommas\": getValue(\"enumDeclaration.trailingCommas\", trailingCommas, ensureTrailingCommas),\n    \"objectExpression.trailingCommas\": getValue(\"objectExpression.trailingCommas\", trailingCommas, ensureTrailingCommas),\n    \"tupleType.trailingCommas\": getValue(\"tupleType.trailingCommas\", trailingCommas, ensureTrailingCommas),\n    \"callExpression.forceMultiLineArguments\": getValue(\"callExpression.forceMultiLineArguments\", forceMultiLineArguments, ensureBoolean),\n    \"newExpression.forceMultiLineArguments\": getValue(\"newExpression.forceMultiLineArguments\", forceMultiLineArguments, ensureBoolean),\n    \"arrowFunctionExpression.forceMultiLineParameters\": getValue(\"arrowFunctionExpression.forceMultiLineParameters\", forceMultiLineParameters, ensureBoolean),\n    \"callSignature.forceMultiLineParameters\": getValue(\"callSignature.forceMultiLineParameters\", forceMultiLineParameters, ensureBoolean),\n    \"constructor.forceMultiLineParameters\": getValue(\"constructor.forceMultiLineParameters\", forceMultiLineParameters, ensureBoolean),\n    \"constructorType.forceMultiLineParameters\": getValue(\"constructorType.forceMultiLineParameters\", forceMultiLineParameters, ensureBoolean),\n    \"constructSignature.forceMultiLineParameters\": getValue(\"constructSignature.forceMultiLineParameters\", forceMultiLineParameters, ensureBoolean),\n    \"functionDeclaration.forceMultiLineParameters\": getValue(\"functionDeclaration.forceMultiLineParameters\", forceMultiLineParameters, ensureBoolean),\n    \"functionExpression.forceMultiLineParameters\": getValue(\"functionExpression.forceMultiLineParameters\", forceMultiLineParameters, ensureBoolean),\n    \"functionType.forceMultiLineParameters\": getValue(\"functionType.forceMultiLineParameters\", forceMultiLineParameters, ensureBoolean),\n    \"getAccessor.forceMultiLineParameters\": getValue(\"getAccessor.forceMultiLineParameters\", forceMultiLineParameters, ensureBoolean),\n    \"method.forceMultiLineParameters\": getValue(\"method.forceMultiLineParameters\", forceMultiLineParameters, ensureBoolean),\n    \"methodSignature.forceMultiLineParameters\": getValue(\"methodSignature.forceMultiLineParameters\", forceMultiLineParameters, ensureBoolean),\n    \"setAccessor.forceMultiLineParameters\": getValue(\"setAccessor.forceMultiLineParameters\", forceMultiLineParameters, ensureBoolean),\n    \"binaryExpression.spaceSurroundingOperator\": getValue(\"binaryExpression.spaceSurroundingOperator\", defaultValues[\"binaryExpression.spaceSurroundingOperator\"], ensureBoolean),\n    \"constructor.spaceBeforeParentheses\": getValue(\"constructor.spaceBeforeParentheses\", defaultValues[\"constructor.spaceBeforeParentheses\"], ensureBoolean),\n    \"constructorType.spaceAfterNewKeyword\": getValue(\"constructorType.spaceAfterNewKeyword\", defaultValues[\"constructorType.spaceAfterNewKeyword\"], ensureBoolean),\n    \"constructSignature.spaceAfterNewKeyword\": getValue(\"constructSignature.spaceAfterNewKeyword\", defaultValues[\"constructSignature.spaceAfterNewKeyword\"], ensureBoolean),\n    \"doWhileStatement.spaceAfterWhileKeyword\": getValue(\"doWhileStatement.spaceAfterWhileKeyword\", defaultValues[\"doWhileStatement.spaceAfterWhileKeyword\"], ensureBoolean),\n    \"exportDeclaration.spaceSurroundingNamedExports\": getValue(\"exportDeclaration.spaceSurroundingNamedExports\", defaultValues[\"exportDeclaration.spaceSurroundingNamedExports\"], ensureBoolean),\n    \"forInStatement.spaceAfterForKeyword\": getValue(\"forInStatement.spaceAfterForKeyword\", defaultValues[\"forInStatement.spaceAfterForKeyword\"], ensureBoolean),\n    \"forOfStatement.spaceAfterForKeyword\": getValue(\"forOfStatement.spaceAfterForKeyword\", defaultValues[\"forOfStatement.spaceAfterForKeyword\"], ensureBoolean),\n    \"forStatement.spaceAfterForKeyword\": getValue(\"forStatement.spaceAfterForKeyword\", defaultValues[\"forStatement.spaceAfterForKeyword\"], ensureBoolean),\n    \"forStatement.spaceAfterSemiColons\": getValue(\"forStatement.spaceAfterSemiColons\", defaultValues[\"forStatement.spaceAfterSemiColons\"], ensureBoolean),\n    \"functionDeclaration.spaceBeforeParentheses\": getValue(\"functionDeclaration.spaceBeforeParentheses\", defaultValues[\"functionDeclaration.spaceBeforeParentheses\"], ensureBoolean),\n    \"functionExpression.spaceBeforeParentheses\": getValue(\"functionExpression.spaceBeforeParentheses\", defaultValues[\"functionExpression.spaceBeforeParentheses\"], ensureBoolean),\n    \"getAccessor.spaceBeforeParentheses\": getValue(\"getAccessor.spaceBeforeParentheses\", defaultValues[\"getAccessor.spaceBeforeParentheses\"], ensureBoolean),\n    \"ifStatement.spaceAfterIfKeyword\": getValue(\"ifStatement.spaceAfterIfKeyword\", defaultValues[\"ifStatement.spaceAfterIfKeyword\"], ensureBoolean),\n    \"importDeclaration.spaceSurroundingNamedExports\": getValue(\"importDeclaration.spaceSurroundingNamedExports\", defaultValues[\"importDeclaration.spaceSurroundingNamedExports\"], ensureBoolean),\n    \"jsxExpressionContainer.spaceSurroundingExpression\": getValue(\"jsxExpressionContainer.spaceSurroundingExpression\", defaultValues[\"jsxExpressionContainer.spaceSurroundingExpression\"], ensureBoolean),\n    \"method.spaceBeforeParentheses\": getValue(\"method.spaceBeforeParentheses\", defaultValues[\"method.spaceBeforeParentheses\"], ensureBoolean),\n    \"setAccessor.spaceBeforeParentheses\": getValue(\"setAccessor.spaceBeforeParentheses\", defaultValues[\"setAccessor.spaceBeforeParentheses\"], ensureBoolean),\n    \"typeAnnotation.spaceBeforeColon\": getValue(\"typeAnnotation.spaceBeforeColon\", defaultValues[\"typeAnnotation.spaceBeforeColon\"], ensureBoolean),\n    \"typeAssertion.spaceBeforeExpression\": getValue(\"typeAssertion.spaceBeforeExpression\", defaultValues[\"typeAssertion.spaceBeforeExpression\"], ensureBoolean),\n    \"whileStatement.spaceAfterWhileKeyword\": getValue(\"whileStatement.spaceAfterWhileKeyword\", defaultValues[\"whileStatement.spaceAfterWhileKeyword\"], ensureBoolean)\n  };\n  addExcessPropertyDiagnostics();\n  return {\n    config: Object.freeze(resolvedConfig),\n    diagnostics: diagnostics\n  };\n\n  function getNewLineKind() {\n    var newlineKind = pluginConfig.newlineKind;\n    delete pluginConfig.newlineKind;\n\n    switch (newlineKind) {\n      case \"auto\":\n        return \"auto\";\n\n      case \"crlf\":\n        return \"\\r\\n\";\n\n      case \"lf\":\n        return \"\\n\";\n\n      case null:\n      case undefined:\n        return globalConfig.newlineKind;\n\n      case \"system\":\n        return os.EOL === \"\\r\\n\" ? \"\\r\\n\" : \"\\n\";\n\n      default:\n        var propertyName = \"newlineKind\";\n        diagnostics.push({\n          propertyName: propertyName,\n          message: \"Unknown configuration specified for '\".concat(propertyName, \"': \").concat(newlineKind)\n        });\n        return globalConfig.newlineKind;\n    }\n  }\n\n  function getValue(key, defaultValue, validateFunc) {\n    var actualValue = pluginConfig[key];\n    if (actualValue == null || !validateFunc(key, actualValue)) actualValue = defaultValue;\n    delete pluginConfig[key];\n    return actualValue;\n  }\n\n  function ensureNumber(key, value) {\n    if (typeof value === \"number\") return true;\n    diagnostics.push({\n      propertyName: key,\n      message: \"Expected the configuration for '\".concat(key, \"' to be a number, but its value was: \").concat(value)\n    });\n    return false;\n  }\n\n  function ensureBoolean(key, value) {\n    if (typeof value === \"boolean\") return true;\n    diagnostics.push({\n      propertyName: key,\n      message: \"Expected the configuration for '\".concat(key, \"' to be a boolean, but its value was: \").concat(value)\n    });\n    return false;\n  }\n\n  function ensureBraceUse(key, value) {\n    switch (value) {\n      case \"maintain\":\n      case \"whenNotSingleLine\":\n      case \"preferNone\":\n      case \"always\":\n      case null:\n      case undefined:\n        return true;\n\n      default:\n        diagnostics.push({\n          propertyName: key,\n          message: \"Expected the configuration for '\".concat(key, \"' to equal one of the expected values, but was: \").concat(value)\n        });\n        return false;\n    }\n  }\n\n  function ensureBracePosition(key, value) {\n    switch (value) {\n      case \"maintain\":\n      case \"sameLine\":\n      case \"nextLine\":\n      case \"nextLineIfHanging\":\n      case null:\n      case undefined:\n        return true;\n\n      default:\n        diagnostics.push({\n          propertyName: key,\n          message: \"Expected the configuration for '\".concat(key, \"' to equal one of the expected values, but was: \").concat(value)\n        });\n        return false;\n    }\n  }\n\n  function ensureSingleBodyPosition(key, value) {\n    switch (value) {\n      case \"maintain\":\n      case \"sameLine\":\n      case \"nextLine\":\n      case null:\n      case undefined:\n        return true;\n\n      default:\n        diagnostics.push({\n          propertyName: key,\n          message: \"Expected the configuration for '\".concat(key, \"' to equal one of the expected values, but was: \").concat(value)\n        });\n        return false;\n    }\n  }\n\n  function ensureNextControlFlowPosition(key, value) {\n    switch (value) {\n      case \"maintain\":\n      case \"sameLine\":\n      case \"nextLine\":\n      case null:\n      case undefined:\n        return true;\n\n      default:\n        diagnostics.push({\n          propertyName: key,\n          message: \"Expected the configuration for '\".concat(key, \"' to equal one of the expected values, but was: \").concat(value)\n        });\n        return false;\n    }\n  }\n\n  function ensureOperatorPosition(key, value) {\n    switch (value) {\n      case \"maintain\":\n      case \"sameLine\":\n      case \"nextLine\":\n      case null:\n      case undefined:\n        return true;\n\n      default:\n        diagnostics.push({\n          propertyName: key,\n          message: \"Expected the configuration for '\".concat(key, \"' to equal one of the expected values, but was: \").concat(value)\n        });\n        return false;\n    }\n  }\n\n  function ensureTrailingCommas(key, value) {\n    switch (value) {\n      case \"never\":\n      case \"always\":\n      case \"onlyMultiLine\":\n      case null:\n      case undefined:\n        return true;\n\n      default:\n        diagnostics.push({\n          propertyName: key,\n          message: \"Expected the configuration for '\".concat(key, \"' to equal one of the expected values, but was: \").concat(value)\n        });\n        return false;\n    }\n  }\n\n  function ensureEnumMemberSpacing(key, value) {\n    switch (value) {\n      case \"maintain\":\n      case \"blankline\":\n      case \"newline\":\n      case null:\n      case undefined:\n        return true;\n\n      default:\n        diagnostics.push({\n          propertyName: key,\n          message: \"Expected the configuration for '\".concat(key, \"' to equal one of the expected values, but was: \").concat(value)\n        });\n        return false;\n    }\n  }\n\n  function ensureArrowFunctionUseParentheses(key, value) {\n    switch (value) {\n      case \"maintain\":\n      case \"force\":\n      case \"preferNone\":\n      case null:\n      case undefined:\n        return true;\n\n      default:\n        diagnostics.push({\n          propertyName: key,\n          message: \"Expected the configuration for '\".concat(key, \"' to equal one of the expected values, but was: \").concat(value)\n        });\n        return false;\n    }\n  }\n\n  function addExcessPropertyDiagnostics() {\n    for (var propertyName in pluginConfig) {\n      diagnostics.push({\n        propertyName: propertyName,\n        message: \"Unexpected property in configuration: \".concat(propertyName)\n      });\n    }\n  }\n}\n\nfunction binarySearch(items, compare) {\n  var top = items.length - 1;\n  var bottom = 0;\n\n  while (bottom <= top) {\n    var mid = Math.floor((top + bottom) / 2);\n    var comparisonResult = compare(items[mid]);\n    if (comparisonResult === 0) return mid;else if (comparisonResult < 0) top = mid - 1;else bottom = mid + 1;\n  }\n\n  return -1;\n}\n\nfunction assertNever(value) {\n  return throwError(\"Unhandled value: \".concat(JSON.stringify(value)));\n}\n\nfunction throwError(message) {\n  throw getError(message);\n}\n\nfunction getError(message) {\n  return new Error(\"[dprint]: \".concat(message));\n}\n\nvar Bag =\n/*#__PURE__*/\nfunction () {\n  function Bag() {\n    _classCallCheck(this, Bag);\n\n    this.bag = new Map();\n  }\n\n  _createClass(Bag, [{\n    key: \"put\",\n    value: function put(key, value) {\n      this.bag.set(key, value);\n    }\n  }, {\n    key: \"take\",\n    value: function take(key) {\n      var value = this.bag.get(key);\n      this.bag.delete(key);\n      return value;\n    }\n  }, {\n    key: \"peek\",\n    value: function peek(key) {\n      return this.bag.get(key);\n    }\n  }]);\n\n  return Bag;\n}();\n\nvar Stack =\n/*#__PURE__*/\nfunction () {\n  function Stack() {\n    _classCallCheck(this, Stack);\n\n    this.items = [];\n  }\n\n  _createClass(Stack, [{\n    key: \"peek\",\n    value: function peek() {\n      return this.items[this.items.length - 1];\n    }\n  }, {\n    key: \"push\",\n    value: function push(item) {\n      this.items.push(item);\n    }\n  }, {\n    key: \"popOrThrow\",\n    value: function popOrThrow() {\n      var result = this.items.pop();\n      if (result == null) return throwError(\"Tried to pop, but stack was empty. Maybe a pop was accidentally done elsewhere?\");\n      return result;\n    }\n  }]);\n\n  return Stack;\n}();\n\nfunction isStringEmptyOrWhiteSpace(text) {\n  var hasNonWhiteSpaceChar = /\\S/.test(text);\n  return !hasNonWhiteSpaceChar;\n}\n\nfunction hasNewlineOccurrencesInLeadingWhitespace(text, occurrences) {\n  if (occurrences === 0) hasNoNewlinesInLeadingWhitespace(text);\n\n  for (var i = 0; i < text.length; i++) {\n    if (!isStringEmptyOrWhiteSpace(text[i])) return false;\n    if (text[i] === \"\\n\" && --occurrences === 0) return true;\n  }\n\n  return false;\n}\n\nfunction hasNoNewlinesInLeadingWhitespace(text) {\n  for (var i = 0; i < text.length; i++) {\n    if (!isStringEmptyOrWhiteSpace(text[i])) return true;\n    if (text[i] === \"\\n\") return false;\n  }\n\n  return true;\n}\n\nfunction hasNewLineOccurrencesInTrailingWhitespace(text, occurrences) {\n  if (occurrences === 0) return hasNoNewlinesInTrailingWhitespace(text);\n\n  for (var i = text.length - 1; i >= 0; i--) {\n    if (!isStringEmptyOrWhiteSpace(text[i])) return false;\n    if (text[i] === \"\\n\" && --occurrences === 0) return true;\n  }\n\n  return false;\n}\n\nfunction hasNoNewlinesInTrailingWhitespace(text) {\n  for (var i = text.length - 1; i >= 0; i--) {\n    if (!isStringEmptyOrWhiteSpace(text[i])) return true;\n    if (text[i] === \"\\n\") return false;\n  }\n\n  return true;\n}\n\nfunction hasSeparatingBlankLine(nodeA, nodeB) {\n  if (nodeB == null) return false;\n  return getNodeBStartLine() > nodeA.loc.end.line + 1;\n\n  function getNodeBStartLine() {\n    var leadingComments = nodeB.leadingComments;\n\n    if (leadingComments != null) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = leadingComments[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var leadingComment = _step.value;\n          var commentStartLine = leadingComment.loc.start.line;\n          if (commentStartLine > nodeA.loc.end.line) return commentStartLine;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n\n    return nodeB.loc.start.line;\n  }\n}\n\nfunction getLeadingCommentOnDifferentLine(node, commentsToIgnore) {\n  if (node.leadingComments == null) return undefined;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = node.leadingComments[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var comment = _step2.value;\n      if (commentsToIgnore != null && commentsToIgnore.includes(comment)) continue;\n      if (comment.loc.start.line < node.loc.start.line) return comment;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction hasLeadingCommentOnDifferentLine(node, commentsToIgnore) {\n  return getLeadingCommentOnDifferentLine(node, commentsToIgnore) != null;\n}\n\nfunction getUseNewlinesForNodes(nodes) {\n  var _marked =\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(getNodes);\n\n  var nonNullNodes = getNodes();\n  var firstNode = nonNullNodes.next().value;\n  var secondNode = nonNullNodes.next().value;\n  if (firstNode == null || secondNode == null || firstNode.loc.end.line === secondNode.loc.start.line) return false;\n  return true;\n\n  function getNodes() {\n    var _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, node;\n\n    return _regeneratorRuntime.wrap(function getNodes$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _iteratorNormalCompletion3 = true;\n            _didIteratorError3 = false;\n            _iteratorError3 = undefined;\n            _context.prev = 3;\n            _iterator3 = nodes[Symbol.iterator]();\n\n          case 5:\n            if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n              _context.next = 13;\n              break;\n            }\n\n            node = _step3.value;\n\n            if (!(node != null)) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 10;\n            return node;\n\n          case 10:\n            _iteratorNormalCompletion3 = true;\n            _context.next = 5;\n            break;\n\n          case 13:\n            _context.next = 19;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](3);\n            _didIteratorError3 = true;\n            _iteratorError3 = _context.t0;\n\n          case 19:\n            _context.prev = 19;\n            _context.prev = 20;\n\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n\n          case 22:\n            _context.prev = 22;\n\n            if (!_didIteratorError3) {\n              _context.next = 25;\n              break;\n            }\n\n            throw _iteratorError3;\n\n          case 25:\n            return _context.finish(22);\n\n          case 26:\n            return _context.finish(19);\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _marked, null, [[3, 15, 19, 27], [20,, 22, 26]]);\n  }\n}\n\nfunction isFirstNodeOnLine(node, fileText) {\n  for (var i = node.start - 1; i >= 0; i--) {\n    var _char = fileText[i];\n    if (_char === \" \" || _char === \"\\t\") continue;\n    return _char === \"\\n\";\n  }\n\n  return true;\n}\n\nfunction hasParentheses(node) {\n  var extra = node.extra;\n  if (extra == null) return false;\n  return extra.parenthesized || false;\n}\n\nfunction getStartOrParenStart(node) {\n  var extra = node.extra;\n  var parenStart = extra && extra.parenStart;\n  return parenStart != null ? parenStart : node.start;\n}\n\nfunction getJsxText(jsxText) {\n  return jsxText.extra.raw;\n}\n\nfunction getFirstOpenBraceTokenWithin(node, context) {\n  return context.tokenFinder.getFirstTokenWithin(node, \"{\");\n}\n\nfunction getFirstOpenBracketTokenWithin(node, context) {\n  return context.tokenFinder.getFirstTokenWithin(node, \"[\");\n}\n\nfunction getFirstAngleBracketTokenBefore(node, context) {\n  return context.tokenFinder.getFirstTokenBefore(node, \"<\");\n}\n\nfunction getFirstNonCommentTokenBefore(node, context) {\n  return context.tokenFinder.getFirstTokenBefore(node, isNotComment);\n}\n\nfunction getFirstOpenParenTokenBefore(node, context) {\n  return context.tokenFinder.getFirstTokenBefore(node, \"(\");\n}\n\nfunction getFirstCloseParenTokenAfter(node, context) {\n  return context.tokenFinder.getFirstTokenAfter(node, \")\");\n}\n\nfunction isNotComment(token) {\n  return token.type !== \"CommentLine\" && token.type !== \"CommentBlock\";\n}\n\nvar prefixSemiColonInsertionChars;\n\nfunction isPrefixSemiColonInsertionChar(_char2) {\n  return getPrefixSemiColonInsertionChars().has(_char2);\n}\n\nfunction getPrefixSemiColonInsertionChars() {\n  if (prefixSemiColonInsertionChars == null) {\n    prefixSemiColonInsertionChars = new Set([\"[\", \"(\", \"`\", \"+\", \"*\", \"/\", \"-\", \",\", \".\"]);\n  }\n\n  return prefixSemiColonInsertionChars;\n}\n\nfunction findNodeIndexInSortedArrayFast(items, node) {\n  return binarySearch(items, function (value) {\n    if (node.start < value.start) return -1;\n    if (node.start === value.start) return 0;\n    return 1;\n  });\n}\n\nvar TokenFinder =\n/*#__PURE__*/\nfunction () {\n  function TokenFinder(tokens) {\n    _classCallCheck(this, TokenFinder);\n\n    this.tokens = tokens;\n    this.tokenIndex = 0;\n  }\n\n  _createClass(TokenFinder, [{\n    key: \"isFirstTokenInNodeMatch\",\n    value: function isFirstTokenInNodeMatch(node, tokenOrIsMatch) {\n      this.moveToNodeStart(node);\n      var isMatch = getTokenIsMatchFunction(tokenOrIsMatch);\n      return isMatch(this.currentToken);\n    }\n  }, {\n    key: \"getFirstTokenWithin\",\n    value: function getFirstTokenWithin(node, tokenOrIsMatch) {\n      this.moveToNodeStart(node);\n      var isMatch = getTokenIsMatchFunction(tokenOrIsMatch);\n\n      while (!isMatch(this.currentToken) && this.currentToken.end <= node.end) {\n        if (this.tokenIndex === this.tokens.length - 1) return undefined;else this.tokenIndex++;\n      }\n\n      return isMatch(this.currentToken) ? this.currentToken : undefined;\n    }\n  }, {\n    key: \"getFirstTokenBefore\",\n    value: function getFirstTokenBefore(node, tokenOrIsMatch) {\n      this.moveToNodeStart(node);\n      var isMatch = getTokenIsMatchFunction(tokenOrIsMatch);\n\n      do {\n        if (this.tokenIndex === 0) return undefined;\n        this.tokenIndex--;\n      } while (!isMatch(this.currentToken));\n\n      return this.currentToken;\n    }\n  }, {\n    key: \"getFirstTokenAfter\",\n    value: function getFirstTokenAfter(node, tokenOrIsMatch) {\n      this.moveToNodeEnd(node);\n      var isMatch = getTokenIsMatchFunction(tokenOrIsMatch);\n\n      do {\n        if (this.tokenIndex === this.tokens.length - 1) return undefined;\n        this.tokenIndex++;\n      } while (!isMatch(this.currentToken));\n\n      return this.currentToken;\n    }\n  }, {\n    key: \"moveToNodeStart\",\n    value: function moveToNodeStart(node) {\n      var nodeStart = node.start;\n\n      while (this.currentToken.start < nodeStart) {\n        this.tokenIndex++;\n      }\n\n      while (this.currentToken.start > nodeStart) {\n        this.tokenIndex--;\n      }\n    }\n  }, {\n    key: \"moveToNodeEnd\",\n    value: function moveToNodeEnd(node) {\n      var nodeEnd = node.end;\n\n      while (this.currentToken.end < nodeEnd) {\n        this.tokenIndex++;\n      }\n\n      while (this.currentToken.end > nodeEnd) {\n        this.tokenIndex--;\n      }\n    }\n  }, {\n    key: \"currentToken\",\n    get: function get() {\n      return this.tokens[this.tokenIndex];\n    }\n  }]);\n\n  return TokenFinder;\n}();\n\nfunction getTokenIsMatchFunction(tokenOrIsMatch) {\n  if (tokenOrIsMatch instanceof Function) return tokenOrIsMatch;\n  var tokenText = tokenOrIsMatch;\n  return function (token) {\n    return getTokenText(token) === tokenText;\n  };\n}\n\nfunction getTokenText(token) {\n  if (token.value) return token.value;\n  if (token.type && typeof token.type !== \"string\" && token.type.label) return token.type.label;\n  return undefined;\n}\n\nvar _core$parserHelpers = core.parserHelpers,\n    withIndent = _core$parserHelpers.withIndent,\n    newlineGroup = _core$parserHelpers.newlineGroup,\n    prependToIterableIfHasItems = _core$parserHelpers.prependToIterableIfHasItems,\n    toPrintItemIterable = _core$parserHelpers.toPrintItemIterable,\n    surroundWithNewLines = _core$parserHelpers.surroundWithNewLines,\n    createInfo = _core$parserHelpers.createInfo;\nvar BAG_KEYS = {\n  IfStatementLastBraceCondition: \"ifStatementLastBraceCondition\",\n  ClassStartHeaderInfo: \"classStartHeaderInfo\",\n  InterfaceDeclarationStartHeaderInfo: \"interfaceDeclarationStartHeaderInfo\",\n  ModuleDeclarationStartHeaderInfo: \"moduleDeclarationStartHeaderInfo\",\n  DisableIndentBool: \"disableIndentBool\"\n};\n\nfunction parseTypeScriptFile(options) {\n  var file = options.file,\n      filePath = options.filePath,\n      fileText = options.fileText,\n      config = options.config,\n      environment = options.environment;\n  var context = {\n    file: file,\n    fileText: fileText,\n    log: function log(message) {\n      return environment.log(\"\".concat(message, \" (\").concat(filePath, \")\"));\n    },\n    warn: function warn(message) {\n      return environment.warn(\"\".concat(message, \" (\").concat(filePath, \")\"));\n    },\n    config: config,\n    handledComments: new Set(),\n    currentNode: file,\n    parentStack: [],\n    parent: file,\n    bag: new Bag(),\n    topBinaryOrLogicalExpressionInfos: new Map(),\n    endStatementOrMemberInfo: new Stack(),\n    tokenFinder: new TokenFinder(file.tokens)\n  };\n  if (!shouldParseFile()) return false;\n  return (\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.delegateYield(parseNode(file.program, context), \"t0\", 1);\n\n            case 1:\n              _context2.next = 3;\n              return {\n                kind: core.PrintItemKind.Condition,\n                name: \"endOfFileNewLine\",\n                condition: function condition(conditionContext) {\n                  return conditionContext.writerInfo.columnNumber > 0 || conditionContext.writerInfo.lineNumber > 0;\n                },\n                true: [core.Signal.NewLine]\n              };\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee);\n    })()\n  );\n\n  function shouldParseFile() {\n    var _marked2 =\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(getCommentsToCheck);\n\n    var _iteratorNormalCompletion4 = true;\n    var _didIteratorError4 = false;\n    var _iteratorError4 = undefined;\n\n    try {\n      for (var _iterator4 = getCommentsToCheck()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n        var comment = _step4.value;\n        if (/\\bdprint\\-ignore\\-file\\b/.test(comment.value)) return false;\n      }\n    } catch (err) {\n      _didIteratorError4 = true;\n      _iteratorError4 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n          _iterator4.return();\n        }\n      } finally {\n        if (_didIteratorError4) {\n          throw _iteratorError4;\n        }\n      }\n    }\n\n    return true;\n\n    function getCommentsToCheck() {\n      var program, body;\n      return _regeneratorRuntime.wrap(function getCommentsToCheck$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              program = file.program;\n\n              if (!program.innerComments) {\n                _context3.next = 3;\n                break;\n              }\n\n              return _context3.delegateYield(program.innerComments, \"t0\", 3);\n\n            case 3:\n              body = program.body;\n\n              if (!(body.length > 0 && body[0].leadingComments != null)) {\n                _context3.next = 6;\n                break;\n              }\n\n              return _context3.delegateYield(body[0].leadingComments, \"t1\", 6);\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _marked2);\n    }\n  }\n}\n\nvar parseObj = {\n  \"Program\": parseProgram,\n  \"BlockStatement\": parseBlockStatement,\n  \"Identifier\": parseIdentifier,\n  \"V8IntrinsicIdentifier\": parseV8IntrinsicIdentifier,\n  \"ClassDeclaration\": parseClassDeclarationOrExpression,\n  \"ExportAllDeclaration\": parseExportAllDeclaration,\n  \"ExportNamedDeclaration\": parseExportNamedDeclaration,\n  \"ExportDefaultDeclaration\": parseExportDefaultDeclaration,\n  \"FunctionDeclaration\": parseFunctionDeclarationOrExpression,\n  \"TSDeclareFunction\": parseFunctionDeclarationOrExpression,\n  \"TSEnumDeclaration\": parseEnumDeclaration,\n  \"TSEnumMember\": parseEnumMember,\n  \"ImportDeclaration\": parseImportDeclaration,\n  \"TSImportEqualsDeclaration\": parseImportEqualsDeclaration,\n  \"TSInterfaceDeclaration\": parseInterfaceDeclaration,\n  \"TSModuleDeclaration\": parseModuleDeclaration,\n  \"TSNamespaceExportDeclaration\": parseNamespaceExportDeclaration,\n  \"TSTypeAliasDeclaration\": parseTypeAlias,\n  \"ClassBody\": parseClassBody,\n  \"ClassMethod\": parseClassOrObjectMethod,\n  \"TSDeclareMethod\": parseClassOrObjectMethod,\n  \"ClassProperty\": parseClassProperty,\n  \"Decorator\": parseDecorator,\n  \"TSParameterProperty\": parseParameterProperty,\n  \"TSCallSignatureDeclaration\": parseCallSignatureDeclaration,\n  \"TSConstructSignatureDeclaration\": parseConstructSignatureDeclaration,\n  \"TSIndexSignature\": parseIndexSignature,\n  \"TSInterfaceBody\": parseInterfaceBody,\n  \"TSMethodSignature\": parseMethodSignature,\n  \"TSPropertySignature\": parsePropertySignature,\n  \"TSModuleBlock\": parseModuleBlock,\n  \"BreakStatement\": parseBreakStatement,\n  \"ContinueStatement\": parseContinueStatement,\n  \"DebuggerStatement\": parseDebuggerStatement,\n  \"Directive\": parseDirective,\n  \"DoWhileStatement\": parseDoWhileStatement,\n  \"EmptyStatement\": parseEmptyStatement,\n  \"TSExportAssignment\": parseExportAssignment,\n  \"ExpressionStatement\": parseExpressionStatement,\n  \"ForInStatement\": parseForInStatement,\n  \"ForOfStatement\": parseForOfStatement,\n  \"ForStatement\": parseForStatement,\n  \"IfStatement\": parseIfStatement,\n  \"InterpreterDirective\": parseInterpreterDirective,\n  \"LabeledStatement\": parseLabeledStatement,\n  \"ReturnStatement\": parseReturnStatement,\n  \"SwitchCase\": parseSwitchCase,\n  \"SwitchStatement\": parseSwitchStatement,\n  \"ThrowStatement\": parseThrowStatement,\n  \"TryStatement\": parseTryStatement,\n  \"WhileStatement\": parseWhileStatement,\n  \"VariableDeclaration\": parseVariableDeclaration,\n  \"VariableDeclarator\": parseVariableDeclarator,\n  \"CatchClause\": parseCatchClause,\n  \"ArrayPattern\": parseArrayPattern,\n  \"ArrayExpression\": parseArrayExpression,\n  \"ArrowFunctionExpression\": parseArrowFunctionExpression,\n  \"TSAsExpression\": parseAsExpression,\n  \"AssignmentExpression\": parseAssignmentExpression,\n  \"AssignmentPattern\": parseAssignmentPattern,\n  \"AwaitExpression\": parseAwaitExpression,\n  \"BinaryExpression\": parseBinaryOrLogicalExpression,\n  \"LogicalExpression\": parseBinaryOrLogicalExpression,\n  \"CallExpression\": parseCallExpression,\n  \"OptionalCallExpression\": parseCallExpression,\n  \"ClassExpression\": parseClassDeclarationOrExpression,\n  \"ConditionalExpression\": parseConditionalExpression,\n  \"TSExpressionWithTypeArguments\": parseExpressionWithTypeArguments,\n  \"TSExternalModuleReference\": parseExternalModuleReference,\n  \"FunctionExpression\": parseFunctionDeclarationOrExpression,\n  \"MemberExpression\": parseMemberExpression,\n  \"OptionalMemberExpression\": parseMemberExpression,\n  \"MetaProperty\": parseMetaProperty,\n  \"NewExpression\": parseNewExpression,\n  \"TSNonNullExpression\": parseNonNullExpression,\n  \"ObjectExpression\": parseObjectExpression,\n  \"ObjectMethod\": parseClassOrObjectMethod,\n  \"ObjectPattern\": parseObjectPattern,\n  \"ObjectProperty\": parseObjectProperty,\n  \"RestElement\": parseRestElement,\n  \"SequenceExpression\": parseSequenceExpression,\n  \"SpreadElement\": parseSpreadElement,\n  \"TaggedTemplateExpression\": parseTaggedTemplateExpression,\n  \"TSTypeAssertion\": parseTypeAssertion,\n  \"UnaryExpression\": parseUnaryExpression,\n  \"UpdateExpression\": parseUpdateExpression,\n  \"YieldExpression\": parseYieldExpression,\n  \"ImportDefaultSpecifier\": parseImportDefaultSpecifier,\n  \"ImportNamespaceSpecifier\": parseImportNamespaceSpecifier,\n  \"ImportSpecifier\": parseImportSpecifier,\n  \"ExportDefaultSpecifier\": parseExportDefaultSpecifier,\n  \"ExportNamespaceSpecifier\": parseExportNamespaceSpecifier,\n  \"ExportSpecifier\": parseExportSpecifier,\n  \"BigIntLiteral\": parseBigIntLiteral,\n  \"BooleanLiteral\": parseBooleanLiteral,\n  \"DirectiveLiteral\": parseStringOrDirectiveLiteral,\n  \"NullLiteral\": function NullLiteral() {\n    return toPrintItemIterable(\"null\");\n  },\n  \"NumericLiteral\": parseNumericLiteral,\n  \"StringLiteral\": parseStringOrDirectiveLiteral,\n  \"RegExpLiteral\": parseRegExpLiteral,\n  \"TemplateElement\": parseTemplateElement,\n  \"TemplateLiteral\": parseTemplateLiteral,\n  \"Import\": function Import() {\n    return toPrintItemIterable(\"import\");\n  },\n  \"Super\": function Super() {\n    return toPrintItemIterable(\"super\");\n  },\n  \"ThisExpression\": function ThisExpression() {\n    return toPrintItemIterable(\"this\");\n  },\n  \"TSAnyKeyword\": function TSAnyKeyword() {\n    return toPrintItemIterable(\"any\");\n  },\n  \"TSBigIntKeyword\": function TSBigIntKeyword() {\n    return toPrintItemIterable(\"bigint\");\n  },\n  \"TSBooleanKeyword\": function TSBooleanKeyword() {\n    return toPrintItemIterable(\"boolean\");\n  },\n  \"TSNeverKeyword\": function TSNeverKeyword() {\n    return toPrintItemIterable(\"never\");\n  },\n  \"TSNullKeyword\": function TSNullKeyword() {\n    return toPrintItemIterable(\"null\");\n  },\n  \"TSNumberKeyword\": function TSNumberKeyword() {\n    return toPrintItemIterable(\"number\");\n  },\n  \"TSObjectKeyword\": function TSObjectKeyword() {\n    return toPrintItemIterable(\"object\");\n  },\n  \"TSStringKeyword\": function TSStringKeyword() {\n    return toPrintItemIterable(\"string\");\n  },\n  \"TSSymbolKeyword\": function TSSymbolKeyword() {\n    return toPrintItemIterable(\"symbol\");\n  },\n  \"TSUndefinedKeyword\": function TSUndefinedKeyword() {\n    return toPrintItemIterable(\"undefined\");\n  },\n  \"TSUnknownKeyword\": function TSUnknownKeyword() {\n    return toPrintItemIterable(\"unknown\");\n  },\n  \"TSVoidKeyword\": function TSVoidKeyword() {\n    return toPrintItemIterable(\"void\");\n  },\n  \"VoidKeyword\": function VoidKeyword() {\n    return toPrintItemIterable(\"void\");\n  },\n  \"TSArrayType\": parseArrayType,\n  \"TSConditionalType\": parseConditionalType,\n  \"TSConstructorType\": parseConstructorType,\n  \"TSFunctionType\": parseFunctionType,\n  \"TSImportType\": parseImportType,\n  \"TSIndexedAccessType\": parseIndexedAccessType,\n  \"TSInferType\": parseInferType,\n  \"TSIntersectionType\": parseUnionOrIntersectionType,\n  \"TSLiteralType\": parseLiteralType,\n  \"TSMappedType\": parseMappedType,\n  \"TSOptionalType\": parseOptionalType,\n  \"TSParenthesizedType\": parseParenthesizedType,\n  \"TSQualifiedName\": parseQualifiedName,\n  \"TSRestType\": parseRestType,\n  \"TSThisType\": function TSThisType() {\n    return \"this\";\n  },\n  \"TSTupleType\": parseTupleType,\n  \"TSTypeAnnotation\": parseTypeAnnotation,\n  \"TSTypeLiteral\": parseTypeLiteral,\n  \"TSTypeOperator\": parseTypeOperator,\n  \"TSTypeParameter\": parseTypeParameter,\n  \"TSTypeParameterDeclaration\": parseTypeParameterDeclaration,\n  \"TSTypeParameterInstantiation\": parseTypeParameterDeclaration,\n  \"TSTypePredicate\": parseTypePredicate,\n  \"TSTypeQuery\": parseTypeQuery,\n  \"TSTypeReference\": parseTypeReference,\n  \"TSUnionType\": parseUnionOrIntersectionType,\n  \"JSXAttribute\": parseJsxAttribute,\n  \"JSXElement\": parseJsxElement,\n  \"JSXEmptyExpression\": parseJsxEmptyExpression,\n  \"JSXExpressionContainer\": parseJsxExpressionContainer,\n  \"JSXOpeningElement\": parseJsxOpeningElement,\n  \"JSXClosingElement\": parseJsxClosingElement,\n  \"JSXFragment\": parseJsxFragment,\n  \"JSXOpeningFragment\": parseJsxOpeningFragment,\n  \"JSXClosingFragment\": parseJsxClosingFragment,\n  \"JSXIdentifier\": parseJsxIdentifier,\n  \"JSXMemberExpression\": parseJsxMemberExpression,\n  \"JSXNamespacedName\": parseJsxNamespacedName,\n  \"JSXSpreadAttribute\": parseJsxSpreadAttribute,\n  \"JSXSpreadChild\": parseJsxSpreadChild,\n  \"JSXText\": parseJsxText,\n  \"ArgumentPlaceholder\": parseUnknownNode,\n  \"BindExpression\": parseUnknownNode,\n  \"ClassPrivateMethod\": parseUnknownNode,\n  \"ClassPrivateProperty\": parseUnknownNode,\n  \"DoExpression\": parseUnknownNode,\n  \"Noop\": parseUnknownNode,\n  \"ParenthesizedExpression\": parseUnknownNode,\n  \"PrivateName\": parseUnknownNode,\n  \"PipelineBareFunction\": parseUnknownNode,\n  \"PipelineTopicExpression\": parseUnknownNode,\n  \"PipelinePrimaryTopicReference\": parseUnknownNode,\n  \"Placeholder\": parseUnknownNode,\n  \"WithStatement\": parseUnknownNode,\n  \"AnyTypeAnnotation\": parseNotSupportedFlowNode,\n  \"ArrayTypeAnnotation\": parseNotSupportedFlowNode,\n  \"BooleanLiteralTypeAnnotation\": parseNotSupportedFlowNode,\n  \"BooleanTypeAnnotation\": parseNotSupportedFlowNode,\n  \"ClassImplements\": parseNotSupportedFlowNode,\n  \"DeclareClass\": parseNotSupportedFlowNode,\n  \"DeclareExportAllDeclaration\": parseNotSupportedFlowNode,\n  \"DeclareExportDeclaration\": parseNotSupportedFlowNode,\n  \"DeclareFunction\": parseNotSupportedFlowNode,\n  \"DeclareInterface\": parseNotSupportedFlowNode,\n  \"DeclareModule\": parseNotSupportedFlowNode,\n  \"DeclareModuleExports\": parseNotSupportedFlowNode,\n  \"DeclareOpaqueType\": parseNotSupportedFlowNode,\n  \"DeclareTypeAlias\": parseNotSupportedFlowNode,\n  \"DeclareVariable\": parseNotSupportedFlowNode,\n  \"DeclaredPredicate\": parseNotSupportedFlowNode,\n  \"EmptyTypeAnnotation\": parseNotSupportedFlowNode,\n  \"ExistsTypeAnnotation\": parseNotSupportedFlowNode,\n  \"FunctionTypeAnnotation\": parseNotSupportedFlowNode,\n  \"FunctionTypeParam\": parseNotSupportedFlowNode,\n  \"GenericTypeAnnotation\": parseNotSupportedFlowNode,\n  \"InferredPredicate\": parseNotSupportedFlowNode,\n  \"InterfaceDeclaration\": parseNotSupportedFlowNode,\n  \"InterfaceExtends\": parseNotSupportedFlowNode,\n  \"InterfaceTypeAnnotation\": parseNotSupportedFlowNode,\n  \"IntersectionTypeAnnotation\": parseNotSupportedFlowNode,\n  \"MixedTypeAnnotation\": parseNotSupportedFlowNode,\n  \"NullLiteralTypeAnnotation\": parseNotSupportedFlowNode,\n  \"NullableTypeAnnotation\": parseNotSupportedFlowNode,\n  \"NumberLiteralTypeAnnotation\": parseNotSupportedFlowNode,\n  \"NumberTypeAnnotation\": parseNotSupportedFlowNode,\n  \"ObjectTypeAnnotation\": parseNotSupportedFlowNode,\n  \"ObjectTypeCallProperty\": parseNotSupportedFlowNode,\n  \"ObjectTypeIndexer\": parseNotSupportedFlowNode,\n  \"ObjectTypeInternalSlot\": parseNotSupportedFlowNode,\n  \"ObjectTypeProperty\": parseNotSupportedFlowNode,\n  \"ObjectTypeSpreadProperty\": parseNotSupportedFlowNode,\n  \"OpaqueType\": parseNotSupportedFlowNode,\n  \"QualifiedTypeIdentifier\": parseNotSupportedFlowNode,\n  \"StringLiteralTypeAnnotation\": parseNotSupportedFlowNode,\n  \"StringTypeAnnotation\": parseNotSupportedFlowNode,\n  \"ThisTypeAnnotation\": parseNotSupportedFlowNode,\n  \"TupleTypeAnnotation\": parseNotSupportedFlowNode,\n  \"TypeAlias\": parseNotSupportedFlowNode,\n  \"TypeAnnotation\": parseNotSupportedFlowNode,\n  \"TypeCastExpression\": parseNotSupportedFlowNode,\n  \"TypeParameter\": parseNotSupportedFlowNode,\n  \"TypeParameterDeclaration\": parseNotSupportedFlowNode,\n  \"TypeParameterInstantiation\": parseNotSupportedFlowNode,\n  \"TypeofTypeAnnotation\": parseNotSupportedFlowNode,\n  \"UnionTypeAnnotation\": parseNotSupportedFlowNode,\n  \"Variance\": parseNotSupportedFlowNode,\n  \"VoidTypeAnnotation\": parseNotSupportedFlowNode\n};\n\nfunction parseNode(node, context, opts) {\n  var printItemIterator, parseNode, parseInParens, hasIgnoreComment;\n  return _regeneratorRuntime.wrap(function parseNode$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          hasIgnoreComment = function _ref3() {\n            if (!node) return false;\n\n            if (context.parent.type === \"JSXElement\" || context.parent.type === \"JSXFragment\") {\n              var previousExpressionContainer = getPreviousJsxExpressionContainer(context.parent);\n              if (previousExpressionContainer && previousExpressionContainer.expression.innerComments) return previousExpressionContainer.expression.innerComments.some(isIgnoreComment);\n              return false;\n            }\n\n            if (!node.leadingComments) return false;\n\n            for (var i = node.leadingComments.length - 1; i >= 0; i--) {\n              var comment = node.leadingComments[i];\n              if (context.handledComments.has(comment)) continue;\n              return isIgnoreComment(comment);\n            }\n\n            return false;\n\n            function isIgnoreComment(comment) {\n              return /\\bdprint\\-ignore\\b/.test(comment.value);\n            }\n\n            function getPreviousJsxExpressionContainer(parent) {\n              var currentIndex = findNodeIndexInSortedArrayFast(parent.children, node);\n\n              for (var _i = currentIndex - 1; _i >= 0; _i--) {\n                var previousChild = parent.children[_i];\n                if (previousChild.type === \"JSXExpressionContainer\") return previousChild;\n                if (previousChild.type !== \"JSXText\") return undefined;\n                if (!/^\\s*$/.test(previousChild.value)) return undefined;\n              }\n\n              return undefined;\n            }\n          };\n\n          parseInParens = function _ref2(nodeIterator) {\n            var openParenToken = getFirstOpenParenTokenBefore(node, context);\n            var useNewLines = getUseNewlinesForNodes([openParenToken, node]);\n            if (useNewLines) putDisableIndentInBagIfNecessaryForNode(node, context);\n            return core.conditions.withIndentIfStartOfLineIndented(parseIteratorInParens(nodeIterator, useNewLines));\n          };\n\n          parseNode = function _ref() {\n            var nodeIterator = getNodeIterator();\n            return hasParentheses(node) ? parseInParens(nodeIterator) : nodeIterator;\n\n            function getNodeIterator() {\n              if (node && hasIgnoreComment()) return toPrintItemIterable(parseNodeAsRawString(node, context));\n              var parseFunc = parseObj[node.type] || parseUnknownNode;\n              return parseFunc(node, context);\n            }\n          };\n\n          if (!(node == null)) {\n            _context4.next = 5;\n            break;\n          }\n\n          return _context4.abrupt(\"return\");\n\n        case 5:\n          context.parentStack.push(context.currentNode);\n          context.parent = context.currentNode;\n          context.currentNode = node;\n          printItemIterator = opts && opts.innerParse ? opts.innerParse(parseNode()) : parseNode();\n          return _context4.delegateYield(getWithComments(node, printItemIterator, context), \"t0\", 10);\n\n        case 10:\n          context.currentNode = context.parentStack.pop();\n          context.parent = context.parentStack[context.parentStack.length - 1];\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction parseProgram(node, context) {\n  return _regeneratorRuntime.wrap(function parseProgram$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (!node.interpreter) {\n            _context5.next = 7;\n            break;\n          }\n\n          return _context5.delegateYield(parseNode(node.interpreter, context), \"t0\", 2);\n\n        case 2:\n          _context5.next = 4;\n          return core.Signal.NewLine;\n\n        case 4:\n          if (!hasSeparatingBlankLine(node.interpreter, node.directives[0] || node.body[0])) {\n            _context5.next = 7;\n            break;\n          }\n\n          _context5.next = 7;\n          return core.Signal.NewLine;\n\n        case 7:\n          return _context5.delegateYield(parseStatements(node, context), \"t1\", 8);\n\n        case 8:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction parseBlockStatement(node, context) {\n  var startStatementsInfo, endStatementsInfo, innerTrailingComments, isArrowOrFunctionExpression;\n  return _regeneratorRuntime.wrap(function parseBlockStatement$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          startStatementsInfo = createInfo(\"startStatementsInfo\");\n          endStatementsInfo = createInfo(\"endStatementsInfo\");\n          _context6.next = 4;\n          return \"{\";\n\n        case 4:\n          innerTrailingComments = node.trailingComments && node.trailingComments.filter(function (c) {\n            return c.end < node.end;\n          });\n          if (innerTrailingComments && innerTrailingComments.length > 0) node.innerComments = [].concat(_toConsumableArray(node.innerComments || []), _toConsumableArray(innerTrailingComments));\n          isArrowOrFunctionExpression = context.parent.type === \"ArrowFunctionExpression\" || context.parent.type === \"FunctionExpression\";\n\n          if (!(isArrowOrFunctionExpression && node.loc.start.line === node.loc.end.line && node.body.length === 0 && !node.leadingComments && !node.innerComments)) {\n            _context6.next = 11;\n            break;\n          }\n\n          _context6.next = 10;\n          return \"}\";\n\n        case 10:\n          return _context6.abrupt(\"return\");\n\n        case 11:\n          return _context6.delegateYield(parseFirstLineTrailingComments(node, node.body, context), \"t0\", 12);\n\n        case 12:\n          _context6.next = 14;\n          return core.Signal.NewLine;\n\n        case 14:\n          _context6.next = 16;\n          return startStatementsInfo;\n\n        case 16:\n          return _context6.delegateYield(withIndent(parseStatements(node, context)), \"t1\", 17);\n\n        case 17:\n          _context6.next = 19;\n          return endStatementsInfo;\n\n        case 19:\n          _context6.next = 21;\n          return {\n            kind: core.PrintItemKind.Condition,\n            name: \"endStatementsNewLine\",\n            condition: function condition(conditionContext) {\n              return !core.conditionResolvers.areInfoEqual(conditionContext, startStatementsInfo, endStatementsInfo, false);\n            },\n            true: [core.Signal.NewLine]\n          };\n\n        case 21:\n          _context6.next = 23;\n          return \"}\";\n\n        case 23:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction parseIdentifier(node, context) {\n  var parent;\n  return _regeneratorRuntime.wrap(function parseIdentifier$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          parent = context.parent;\n          _context7.next = 3;\n          return node.name;\n\n        case 3:\n          if (!node.optional) {\n            _context7.next = 6;\n            break;\n          }\n\n          _context7.next = 6;\n          return \"?\";\n\n        case 6:\n          if (!(parent.type === \"VariableDeclarator\" && parent.definite)) {\n            _context7.next = 9;\n            break;\n          }\n\n          _context7.next = 9;\n          return \"!\";\n\n        case 9:\n          return _context7.delegateYield(parseTypeAnnotationWithColonIfExists(node.typeAnnotation, context), \"t0\", 10);\n\n        case 10:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction parseV8IntrinsicIdentifier(node, context) {\n  return _regeneratorRuntime.wrap(function parseV8IntrinsicIdentifier$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return \"%\".concat(node.name);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction parseClassDeclarationOrExpression(node, context) {\n  var _marked8, _marked10, parseClassDecorators, parseHeader;\n\n  return _regeneratorRuntime.wrap(function parseClassDeclarationOrExpression$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          parseHeader = function _ref6() {\n            var _marked9, startHeaderInfo, parseExtendsAndImplements;\n\n            return _regeneratorRuntime.wrap(function parseHeader$(_context12) {\n              while (1) {\n                switch (_context12.prev = _context12.next) {\n                  case 0:\n                    parseExtendsAndImplements = function _ref4() {\n                      return _regeneratorRuntime.wrap(function parseExtendsAndImplements$(_context11) {\n                        while (1) {\n                          switch (_context11.prev = _context11.next) {\n                            case 0:\n                              if (!node.superClass) {\n                                _context11.next = 4;\n                                break;\n                              }\n\n                              _context11.next = 3;\n                              return core.conditions.newlineIfMultipleLinesSpaceOrNewlineOtherwise({\n                                startInfo: startHeaderInfo\n                              });\n\n                            case 3:\n                              return _context11.delegateYield(core.conditions.indentIfStartOfLine(\n                              /*#__PURE__*/\n                              _regeneratorRuntime.mark(function _callee2() {\n                                return _regeneratorRuntime.wrap(function _callee2$(_context10) {\n                                  while (1) {\n                                    switch (_context10.prev = _context10.next) {\n                                      case 0:\n                                        _context10.next = 2;\n                                        return \"extends \";\n\n                                      case 2:\n                                        return _context10.delegateYield(parseNode(node.superClass, context), \"t0\", 3);\n\n                                      case 3:\n                                        if (!node.superTypeParameters) {\n                                          _context10.next = 5;\n                                          break;\n                                        }\n\n                                        return _context10.delegateYield(parseNode(node.superTypeParameters, context), \"t1\", 5);\n\n                                      case 5:\n                                      case \"end\":\n                                        return _context10.stop();\n                                    }\n                                  }\n                                }, _callee2);\n                              })()), \"t0\", 4);\n\n                            case 4:\n                              return _context11.delegateYield(parseExtendsOrImplements({\n                                text: \"implements\",\n                                items: node.implements,\n                                context: context,\n                                startHeaderInfo: startHeaderInfo\n                              }), \"t1\", 5);\n\n                            case 5:\n                            case \"end\":\n                              return _context11.stop();\n                          }\n                        }\n                      }, _marked9);\n                    };\n\n                    _marked9 =\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(parseExtendsAndImplements);\n                    startHeaderInfo = createInfo(\"startHeader\");\n                    _context12.next = 5;\n                    return startHeaderInfo;\n\n                  case 5:\n                    context.bag.put(BAG_KEYS.ClassStartHeaderInfo, startHeaderInfo);\n\n                    if (!(node.type === \"ClassDeclaration\")) {\n                      _context12.next = 13;\n                      break;\n                    }\n\n                    if (!node.declare) {\n                      _context12.next = 10;\n                      break;\n                    }\n\n                    _context12.next = 10;\n                    return \"declare \";\n\n                  case 10:\n                    if (!node.abstract) {\n                      _context12.next = 13;\n                      break;\n                    }\n\n                    _context12.next = 13;\n                    return \"abstract \";\n\n                  case 13:\n                    _context12.next = 15;\n                    return \"class\";\n\n                  case 15:\n                    if (!node.id) {\n                      _context12.next = 19;\n                      break;\n                    }\n\n                    _context12.next = 18;\n                    return \" \";\n\n                  case 18:\n                    return _context12.delegateYield(parseNode(node.id, context), \"t0\", 19);\n\n                  case 19:\n                    if (!node.typeParameters) {\n                      _context12.next = 21;\n                      break;\n                    }\n\n                    return _context12.delegateYield(parseNode(node.typeParameters, context), \"t1\", 21);\n\n                  case 21:\n                    return _context12.delegateYield(parseExtendsAndImplements(), \"t2\", 22);\n\n                  case 22:\n                  case \"end\":\n                    return _context12.stop();\n                }\n              }\n            }, _marked10);\n          };\n\n          parseClassDecorators = function _ref5() {\n            return _regeneratorRuntime.wrap(function parseClassDecorators$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    if (!(context.parent.type === \"ExportNamedDeclaration\" || context.parent.type === \"ExportDefaultDeclaration\")) {\n                      _context9.next = 2;\n                      break;\n                    }\n\n                    return _context9.abrupt(\"return\");\n\n                  case 2:\n                    return _context9.delegateYield(parseDecoratorsIfClass(node, context), \"t0\", 3);\n\n                  case 3:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, _marked8);\n          };\n\n          _marked8 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseClassDecorators), _marked10 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseHeader);\n\n          if (!(node.type === \"ClassExpression\")) {\n            _context13.next = 9;\n            break;\n          }\n\n          return _context13.delegateYield(parseClassDecorators(), \"t0\", 5);\n\n        case 5:\n          _context13.next = 7;\n          return {\n            kind: core.PrintItemKind.Condition,\n            name: \"singleIndentIfStartOfLine\",\n            condition: core.conditionResolvers.isStartOfNewLine,\n            true: [core.Signal.SingleIndent]\n          };\n\n        case 7:\n          _context13.next = 10;\n          break;\n\n        case 9:\n          return _context13.delegateYield(parseClassDecorators(), \"t1\", 10);\n\n        case 10:\n          return _context13.delegateYield(parseHeader(), \"t2\", 11);\n\n        case 11:\n          return _context13.delegateYield(parseNode(node.body, context), \"t3\", 12);\n\n        case 12:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction parseEnumDeclaration(node, context) {\n  var _marked12, startHeaderInfo, parseHeader, parseBody, shouldUseBlankLine;\n\n  return _regeneratorRuntime.wrap(function parseEnumDeclaration$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          shouldUseBlankLine = function _ref9(previousNode, nextNode) {\n            var memberSpacingOption = context.config[\"enumDeclaration.memberSpacing\"];\n\n            switch (memberSpacingOption) {\n              case \"blankline\":\n                return true;\n\n              case \"newline\":\n                return false;\n\n              case \"maintain\":\n                return hasSeparatingBlankLine(previousNode, nextNode);\n\n              default:\n                return assertNever(memberSpacingOption);\n            }\n          };\n\n          parseBody = function _ref8() {\n            return parseMemberedBody({\n              bracePosition: context.config[\"enumDeclaration.bracePosition\"],\n              context: context,\n              node: node,\n              members: node.members,\n              startHeaderInfo: startHeaderInfo,\n              shouldUseBlankLine: shouldUseBlankLine,\n              trailingCommas: context.config[\"enumDeclaration.trailingCommas\"]\n            });\n          };\n\n          parseHeader = function _ref7() {\n            return _regeneratorRuntime.wrap(function parseHeader$(_context14) {\n              while (1) {\n                switch (_context14.prev = _context14.next) {\n                  case 0:\n                    _context14.next = 2;\n                    return startHeaderInfo;\n\n                  case 2:\n                    if (!node.declare) {\n                      _context14.next = 5;\n                      break;\n                    }\n\n                    _context14.next = 5;\n                    return \"declare \";\n\n                  case 5:\n                    if (!node.const) {\n                      _context14.next = 8;\n                      break;\n                    }\n\n                    _context14.next = 8;\n                    return \"const \";\n\n                  case 8:\n                    _context14.next = 10;\n                    return \"enum\";\n\n                  case 10:\n                    _context14.next = 12;\n                    return \" \";\n\n                  case 12:\n                    return _context14.delegateYield(parseNode(node.id, context), \"t0\", 13);\n\n                  case 13:\n                  case \"end\":\n                    return _context14.stop();\n                }\n              }\n            }, _marked12);\n          };\n\n          _marked12 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseHeader);\n          startHeaderInfo = createInfo(\"startHeader\");\n          return _context15.delegateYield(parseHeader(), \"t0\", 6);\n\n        case 6:\n          return _context15.delegateYield(parseBody(), \"t1\", 7);\n\n        case 7:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction parseEnumMember(node, context) {\n  var _marked14, parseInitializer;\n\n  return _regeneratorRuntime.wrap(function parseEnumMember$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          parseInitializer = function _ref10(initializer) {\n            return _regeneratorRuntime.wrap(function parseInitializer$(_context17) {\n              while (1) {\n                switch (_context17.prev = _context17.next) {\n                  case 0:\n                    if (!(initializer.type === \"NumericLiteral\" || initializer.type === \"StringLiteral\")) {\n                      _context17.next = 5;\n                      break;\n                    }\n\n                    _context17.next = 3;\n                    return core.Signal.SpaceOrNewLine;\n\n                  case 3:\n                    _context17.next = 7;\n                    break;\n\n                  case 5:\n                    _context17.next = 7;\n                    return \" \";\n\n                  case 7:\n                    return _context17.delegateYield(core.conditions.indentIfStartOfLine(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee3() {\n                      return _regeneratorRuntime.wrap(function _callee3$(_context16) {\n                        while (1) {\n                          switch (_context16.prev = _context16.next) {\n                            case 0:\n                              _context16.next = 2;\n                              return \"= \";\n\n                            case 2:\n                              return _context16.delegateYield(parseNode(initializer, context), \"t0\", 3);\n\n                            case 3:\n                            case \"end\":\n                              return _context16.stop();\n                          }\n                        }\n                      }, _callee3);\n                    })()), \"t0\", 8);\n\n                  case 8:\n                  case \"end\":\n                    return _context17.stop();\n                }\n              }\n            }, _marked14);\n          };\n\n          _marked14 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseInitializer);\n          return _context18.delegateYield(parseNode(node.id, context), \"t0\", 3);\n\n        case 3:\n          if (!node.initializer) {\n            _context18.next = 5;\n            break;\n          }\n\n          return _context18.delegateYield(parseInitializer(node.initializer), \"t1\", 5);\n\n        case 5:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked15);\n}\n\nfunction parseExportAllDeclaration(node, context) {\n  return _regeneratorRuntime.wrap(function parseExportAllDeclaration$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return \"export * from \";\n\n        case 2:\n          return _context19.delegateYield(parseNode(node.source, context), \"t0\", 3);\n\n        case 3:\n          if (!context.config[\"exportAllDeclaration.semiColon\"]) {\n            _context19.next = 6;\n            break;\n          }\n\n          _context19.next = 6;\n          return \";\";\n\n        case 6:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction parseExportNamedDeclaration(node, context) {\n  var specifiers, defaultExport, namespaceExport, namedExports;\n  return _regeneratorRuntime.wrap(function parseExportNamedDeclaration$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          specifiers = node.specifiers;\n          defaultExport = specifiers.find(function (s) {\n            return s.type === \"ExportDefaultSpecifier\";\n          });\n          namespaceExport = specifiers.find(function (s) {\n            return s.type === \"ExportNamespaceSpecifier\";\n          });\n          namedExports = specifiers.filter(function (s) {\n            return s.type === \"ExportSpecifier\";\n          });\n          return _context20.delegateYield(parseDecoratorsIfClass(node.declaration, context), \"t0\", 5);\n\n        case 5:\n          _context20.next = 7;\n          return \"export \";\n\n        case 7:\n          if (!node.declaration) {\n            _context20.next = 11;\n            break;\n          }\n\n          return _context20.delegateYield(parseNode(node.declaration, context), \"t1\", 9);\n\n        case 9:\n          _context20.next = 25;\n          break;\n\n        case 11:\n          if (!defaultExport) {\n            _context20.next = 15;\n            break;\n          }\n\n          return _context20.delegateYield(parseNode(defaultExport, context), \"t2\", 13);\n\n        case 13:\n          _context20.next = 25;\n          break;\n\n        case 15:\n          if (!(namedExports.length > 0)) {\n            _context20.next = 19;\n            break;\n          }\n\n          return _context20.delegateYield(parseNamedImportsOrExports(node, namedExports, context), \"t3\", 17);\n\n        case 17:\n          _context20.next = 25;\n          break;\n\n        case 19:\n          if (!namespaceExport) {\n            _context20.next = 23;\n            break;\n          }\n\n          return _context20.delegateYield(parseNode(namespaceExport, context), \"t4\", 21);\n\n        case 21:\n          _context20.next = 25;\n          break;\n\n        case 23:\n          _context20.next = 25;\n          return \"{}\";\n\n        case 25:\n          if (!node.source) {\n            _context20.next = 29;\n            break;\n          }\n\n          _context20.next = 28;\n          return \" from \";\n\n        case 28:\n          return _context20.delegateYield(parseNode(node.source, context), \"t5\", 29);\n\n        case 29:\n          if (!(node.declaration == null && context.config[\"exportNamedDeclaration.semiColon\"])) {\n            _context20.next = 32;\n            break;\n          }\n\n          _context20.next = 32;\n          return \";\";\n\n        case 32:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _marked17);\n}\n\nfunction parseExportDefaultDeclaration(node, context) {\n  var shouldUseSemiColon;\n  return _regeneratorRuntime.wrap(function parseExportDefaultDeclaration$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          shouldUseSemiColon = function _ref11() {\n            if (!context.config[\"exportDefaultDeclaration.semiColon\"]) return false;\n\n            switch (node.declaration.type) {\n              case \"ClassDeclaration\":\n              case \"FunctionDeclaration\":\n                return false;\n\n              default:\n                return true;\n            }\n          };\n\n          return _context21.delegateYield(parseDecoratorsIfClass(node.declaration, context), \"t0\", 2);\n\n        case 2:\n          _context21.next = 4;\n          return \"export default \";\n\n        case 4:\n          return _context21.delegateYield(parseNode(node.declaration, context), \"t1\", 5);\n\n        case 5:\n          if (!shouldUseSemiColon()) {\n            _context21.next = 8;\n            break;\n          }\n\n          _context21.next = 8;\n          return \";\";\n\n        case 8:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, _marked18);\n}\n\nfunction parseFunctionDeclarationOrExpression(node, context) {\n  var _marked19, parseHeader, getUseSpaceBeforeParens;\n\n  return _regeneratorRuntime.wrap(function parseFunctionDeclarationOrExpression$(_context23) {\n    while (1) {\n      switch (_context23.prev = _context23.next) {\n        case 0:\n          getUseSpaceBeforeParens = function _ref13() {\n            switch (node.type) {\n              case \"TSDeclareFunction\":\n              case \"FunctionDeclaration\":\n                return context.config[\"functionDeclaration.spaceBeforeParentheses\"];\n\n              case \"FunctionExpression\":\n                return context.config[\"functionExpression.spaceBeforeParentheses\"];\n\n              default:\n                return assertNever(node);\n            }\n          };\n\n          parseHeader = function _ref12() {\n            var startHeaderInfo, bracePosition;\n            return _regeneratorRuntime.wrap(function parseHeader$(_context22) {\n              while (1) {\n                switch (_context22.prev = _context22.next) {\n                  case 0:\n                    startHeaderInfo = createInfo(\"functionHeaderStart\");\n                    _context22.next = 3;\n                    return startHeaderInfo;\n\n                  case 3:\n                    if (!(node.type !== \"FunctionExpression\" && node.declare)) {\n                      _context22.next = 6;\n                      break;\n                    }\n\n                    _context22.next = 6;\n                    return \"declare \";\n\n                  case 6:\n                    if (!node.async) {\n                      _context22.next = 9;\n                      break;\n                    }\n\n                    _context22.next = 9;\n                    return \"async \";\n\n                  case 9:\n                    _context22.next = 11;\n                    return \"function\";\n\n                  case 11:\n                    if (!node.generator) {\n                      _context22.next = 14;\n                      break;\n                    }\n\n                    _context22.next = 14;\n                    return \"*\";\n\n                  case 14:\n                    if (!node.id) {\n                      _context22.next = 18;\n                      break;\n                    }\n\n                    _context22.next = 17;\n                    return \" \";\n\n                  case 17:\n                    return _context22.delegateYield(parseNode(node.id, context), \"t0\", 18);\n\n                  case 18:\n                    if (!node.typeParameters) {\n                      _context22.next = 20;\n                      break;\n                    }\n\n                    return _context22.delegateYield(parseNode(node.typeParameters, context), \"t1\", 20);\n\n                  case 20:\n                    if (!getUseSpaceBeforeParens()) {\n                      _context22.next = 23;\n                      break;\n                    }\n\n                    _context22.next = 23;\n                    return \" \";\n\n                  case 23:\n                    return _context22.delegateYield(parseParametersOrArguments({\n                      nodes: node.params,\n                      context: context,\n                      forceMultiLineWhenMultipleLines: node.type === \"FunctionExpression\" ? context.config[\"functionExpression.forceMultiLineParameters\"] : context.config[\"functionDeclaration.forceMultiLineParameters\"],\n                      customCloseParen: parseCloseParenWithType({\n                        context: context,\n                        startInfo: startHeaderInfo,\n                        typeNode: node.returnType\n                      })\n                    }), \"t2\", 24);\n\n                  case 24:\n                    if (!(node.type === \"FunctionDeclaration\" || node.type === \"FunctionExpression\")) {\n                      _context22.next = 27;\n                      break;\n                    }\n\n                    bracePosition = node.type === \"FunctionDeclaration\" ? context.config[\"functionDeclaration.bracePosition\"] : context.config[\"functionExpression.bracePosition\"];\n                    return _context22.delegateYield(parseBraceSeparator({\n                      bracePosition: bracePosition,\n                      bodyNode: node.body,\n                      startHeaderInfo: startHeaderInfo,\n                      context: context\n                    }), \"t3\", 27);\n\n                  case 27:\n                  case \"end\":\n                    return _context22.stop();\n                }\n              }\n            }, _marked19);\n          };\n\n          _marked19 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseHeader);\n          return _context23.delegateYield(parseHeader(), \"t0\", 4);\n\n        case 4:\n          if (!(node.type === \"FunctionDeclaration\" || node.type === \"FunctionExpression\")) {\n            _context23.next = 8;\n            break;\n          }\n\n          return _context23.delegateYield(parseNode(node.body, context), \"t1\", 6);\n\n        case 6:\n          _context23.next = 11;\n          break;\n\n        case 8:\n          if (!context.config[\"functionDeclaration.semiColon\"]) {\n            _context23.next = 11;\n            break;\n          }\n\n          _context23.next = 11;\n          return \";\";\n\n        case 11:\n        case \"end\":\n          return _context23.stop();\n      }\n    }\n  }, _marked20);\n}\n\nfunction parseImportDeclaration(node, context) {\n  var specifiers, defaultImport, namespaceImport, namedImports;\n  return _regeneratorRuntime.wrap(function parseImportDeclaration$(_context24) {\n    while (1) {\n      switch (_context24.prev = _context24.next) {\n        case 0:\n          _context24.next = 2;\n          return \"import \";\n\n        case 2:\n          specifiers = node.specifiers;\n          defaultImport = specifiers.find(function (s) {\n            return s.type === \"ImportDefaultSpecifier\";\n          });\n          namespaceImport = specifiers.find(function (s) {\n            return s.type === \"ImportNamespaceSpecifier\";\n          });\n          namedImports = specifiers.filter(function (s) {\n            return s.type === \"ImportSpecifier\";\n          });\n\n          if (!defaultImport) {\n            _context24.next = 11;\n            break;\n          }\n\n          return _context24.delegateYield(parseNode(defaultImport, context), \"t0\", 8);\n\n        case 8:\n          if (!(namespaceImport != null || namedImports.length > 0)) {\n            _context24.next = 11;\n            break;\n          }\n\n          _context24.next = 11;\n          return \", \";\n\n        case 11:\n          if (!namespaceImport) {\n            _context24.next = 13;\n            break;\n          }\n\n          return _context24.delegateYield(parseNode(namespaceImport, context), \"t1\", 13);\n\n        case 13:\n          return _context24.delegateYield(parseNamedImportsOrExports(node, namedImports, context), \"t2\", 14);\n\n        case 14:\n          if (!(defaultImport != null || namespaceImport != null || namedImports.length > 0)) {\n            _context24.next = 17;\n            break;\n          }\n\n          _context24.next = 17;\n          return \" from \";\n\n        case 17:\n          return _context24.delegateYield(parseNode(node.source, context), \"t3\", 18);\n\n        case 18:\n          if (!context.config[\"importDeclaration.semiColon\"]) {\n            _context24.next = 21;\n            break;\n          }\n\n          _context24.next = 21;\n          return \";\";\n\n        case 21:\n        case \"end\":\n          return _context24.stop();\n      }\n    }\n  }, _marked21);\n}\n\nfunction parseImportEqualsDeclaration(node, context) {\n  return _regeneratorRuntime.wrap(function parseImportEqualsDeclaration$(_context25) {\n    while (1) {\n      switch (_context25.prev = _context25.next) {\n        case 0:\n          if (!node.isExport) {\n            _context25.next = 3;\n            break;\n          }\n\n          _context25.next = 3;\n          return \"export \";\n\n        case 3:\n          _context25.next = 5;\n          return \"import \";\n\n        case 5:\n          return _context25.delegateYield(parseNode(node.id, context), \"t0\", 6);\n\n        case 6:\n          _context25.next = 8;\n          return \" = \";\n\n        case 8:\n          return _context25.delegateYield(parseNode(node.moduleReference, context), \"t1\", 9);\n\n        case 9:\n          if (!context.config[\"importEqualsDeclaration.semiColon\"]) {\n            _context25.next = 12;\n            break;\n          }\n\n          _context25.next = 12;\n          return \";\";\n\n        case 12:\n        case \"end\":\n          return _context25.stop();\n      }\n    }\n  }, _marked22);\n}\n\nfunction parseInterfaceDeclaration(node, context) {\n  var startHeaderInfo;\n  return _regeneratorRuntime.wrap(function parseInterfaceDeclaration$(_context26) {\n    while (1) {\n      switch (_context26.prev = _context26.next) {\n        case 0:\n          startHeaderInfo = createInfo(\"startHeader\");\n          _context26.next = 3;\n          return startHeaderInfo;\n\n        case 3:\n          context.bag.put(BAG_KEYS.InterfaceDeclarationStartHeaderInfo, startHeaderInfo);\n\n          if (!node.declare) {\n            _context26.next = 7;\n            break;\n          }\n\n          _context26.next = 7;\n          return \"declare \";\n\n        case 7:\n          _context26.next = 9;\n          return \"interface \";\n\n        case 9:\n          return _context26.delegateYield(parseNode(node.id, context), \"t0\", 10);\n\n        case 10:\n          return _context26.delegateYield(parseNode(node.typeParameters, context), \"t1\", 11);\n\n        case 11:\n          return _context26.delegateYield(parseExtendsOrImplements({\n            text: \"extends\",\n            items: node.extends,\n            context: context,\n            startHeaderInfo: startHeaderInfo\n          }), \"t2\", 12);\n\n        case 12:\n          return _context26.delegateYield(parseNode(node.body, context), \"t3\", 13);\n\n        case 13:\n        case \"end\":\n          return _context26.stop();\n      }\n    }\n  }, _marked23);\n}\n\nfunction parseModuleDeclaration(node, context) {\n  var _startHeaderInfo, hasNamespaceKeyword;\n\n  return _regeneratorRuntime.wrap(function parseModuleDeclaration$(_context27) {\n    while (1) {\n      switch (_context27.prev = _context27.next) {\n        case 0:\n          hasNamespaceKeyword = function _ref14() {\n            var keyword = context.tokenFinder.getFirstTokenWithin(node, function (token) {\n              return token.value && (token.value === \"namespace\" || token.value === \"module\") || false;\n            });\n            return keyword == null || keyword.value === \"namespace\";\n          };\n\n          if (!(context.parent.type !== \"TSModuleDeclaration\")) {\n            _context27.next = 26;\n            break;\n          }\n\n          _startHeaderInfo = createInfo(\"startHeader\");\n          _context27.next = 5;\n          return _startHeaderInfo;\n\n        case 5:\n          context.bag.put(BAG_KEYS.ModuleDeclarationStartHeaderInfo, _startHeaderInfo);\n\n          if (!node.declare) {\n            _context27.next = 9;\n            break;\n          }\n\n          _context27.next = 9;\n          return \"declare \";\n\n        case 9:\n          if (!node.global) {\n            _context27.next = 17;\n            break;\n          }\n\n          _context27.next = 12;\n          return \"global\";\n\n        case 12:\n          if (!(node.id != null)) {\n            _context27.next = 15;\n            break;\n          }\n\n          _context27.next = 15;\n          return \" \";\n\n        case 15:\n          _context27.next = 24;\n          break;\n\n        case 17:\n          if (!hasNamespaceKeyword()) {\n            _context27.next = 22;\n            break;\n          }\n\n          _context27.next = 20;\n          return \"namespace \";\n\n        case 20:\n          _context27.next = 24;\n          break;\n\n        case 22:\n          _context27.next = 24;\n          return \"module \";\n\n        case 24:\n          _context27.next = 28;\n          break;\n\n        case 26:\n          _context27.next = 28;\n          return \".\";\n\n        case 28:\n          return _context27.delegateYield(parseNode(node.id, context), \"t0\", 29);\n\n        case 29:\n          if (!node.body) {\n            _context27.next = 33;\n            break;\n          }\n\n          return _context27.delegateYield(parseNode(node.body, context), \"t1\", 31);\n\n        case 31:\n          _context27.next = 36;\n          break;\n\n        case 33:\n          if (!context.config[\"moduleDeclaration.semiColon\"]) {\n            _context27.next = 36;\n            break;\n          }\n\n          _context27.next = 36;\n          return \";\";\n\n        case 36:\n        case \"end\":\n          return _context27.stop();\n      }\n    }\n  }, _marked24);\n}\n\nfunction parseNamespaceExportDeclaration(node, context) {\n  return _regeneratorRuntime.wrap(function parseNamespaceExportDeclaration$(_context28) {\n    while (1) {\n      switch (_context28.prev = _context28.next) {\n        case 0:\n          _context28.next = 2;\n          return \"export as namespace \";\n\n        case 2:\n          return _context28.delegateYield(parseNode(node.id, context), \"t0\", 3);\n\n        case 3:\n          if (!context.config[\"namespaceExportDeclaration.semiColon\"]) {\n            _context28.next = 6;\n            break;\n          }\n\n          _context28.next = 6;\n          return \";\";\n\n        case 6:\n        case \"end\":\n          return _context28.stop();\n      }\n    }\n  }, _marked25);\n}\n\nfunction parseTypeAlias(node, context) {\n  return _regeneratorRuntime.wrap(function parseTypeAlias$(_context29) {\n    while (1) {\n      switch (_context29.prev = _context29.next) {\n        case 0:\n          if (!node.declare) {\n            _context29.next = 3;\n            break;\n          }\n\n          _context29.next = 3;\n          return \"declare \";\n\n        case 3:\n          _context29.next = 5;\n          return \"type \";\n\n        case 5:\n          return _context29.delegateYield(parseNode(node.id, context), \"t0\", 6);\n\n        case 6:\n          if (!node.typeParameters) {\n            _context29.next = 8;\n            break;\n          }\n\n          return _context29.delegateYield(parseNode(node.typeParameters, context), \"t1\", 8);\n\n        case 8:\n          _context29.next = 10;\n          return \" = \";\n\n        case 10:\n          return _context29.delegateYield(parseNode(node.typeAnnotation, context), \"t2\", 11);\n\n        case 11:\n          if (!context.config[\"typeAlias.semiColon\"]) {\n            _context29.next = 14;\n            break;\n          }\n\n          _context29.next = 14;\n          return \";\";\n\n        case 14:\n        case \"end\":\n          return _context29.stop();\n      }\n    }\n  }, _marked26);\n}\n\nfunction parseTypeParameterDeclaration(declaration, context) {\n  var _marked27, _marked28, useNewLines, parseItems, parseParameterList, getUseNewLines;\n\n  return _regeneratorRuntime.wrap(function parseTypeParameterDeclaration$(_context34) {\n    while (1) {\n      switch (_context34.prev = _context34.next) {\n        case 0:\n          getUseNewLines = function _ref17() {\n            if (declaration.params.length === 0) return false;\n            return getUseNewlinesForNodes([getFirstAngleBracketTokenBefore(declaration.params[0], context), declaration.params[0]]);\n          };\n\n          parseParameterList = function _ref16() {\n            var params, _loop, i;\n\n            return _regeneratorRuntime.wrap(function parseParameterList$(_context33) {\n              while (1) {\n                switch (_context33.prev = _context33.next) {\n                  case 0:\n                    params = declaration.params;\n                    _loop =\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _loop(i) {\n                      var param;\n                      return _regeneratorRuntime.wrap(function _loop$(_context32) {\n                        while (1) {\n                          switch (_context32.prev = _context32.next) {\n                            case 0:\n                              param = params[i];\n\n                              if (!(i > 0)) {\n                                _context32.next = 9;\n                                break;\n                              }\n\n                              if (!useNewLines) {\n                                _context32.next = 7;\n                                break;\n                              }\n\n                              _context32.next = 5;\n                              return core.Signal.NewLine;\n\n                            case 5:\n                              _context32.next = 9;\n                              break;\n\n                            case 7:\n                              _context32.next = 9;\n                              return core.Signal.SpaceOrNewLine;\n\n                            case 9:\n                              return _context32.delegateYield(core.conditions.indentIfStartOfLine(newlineGroup(parseNode(param, context, {\n                                innerParse:\n                                /*#__PURE__*/\n                                _regeneratorRuntime.mark(function innerParse(iterator) {\n                                  return _regeneratorRuntime.wrap(function innerParse$(_context31) {\n                                    while (1) {\n                                      switch (_context31.prev = _context31.next) {\n                                        case 0:\n                                          return _context31.delegateYield(iterator, \"t0\", 1);\n\n                                        case 1:\n                                          if (!(i < params.length - 1)) {\n                                            _context31.next = 4;\n                                            break;\n                                          }\n\n                                          _context31.next = 4;\n                                          return \",\";\n\n                                        case 4:\n                                        case \"end\":\n                                          return _context31.stop();\n                                      }\n                                    }\n                                  }, innerParse);\n                                })\n                              }))), \"t0\", 10);\n\n                            case 10:\n                            case \"end\":\n                              return _context32.stop();\n                          }\n                        }\n                      }, _loop);\n                    });\n                    i = 0;\n\n                  case 3:\n                    if (!(i < params.length)) {\n                      _context33.next = 8;\n                      break;\n                    }\n\n                    return _context33.delegateYield(_loop(i), \"t0\", 5);\n\n                  case 5:\n                    i++;\n                    _context33.next = 3;\n                    break;\n\n                  case 8:\n                  case \"end\":\n                    return _context33.stop();\n                }\n              }\n            }, _marked28);\n          };\n\n          parseItems = function _ref15() {\n            return _regeneratorRuntime.wrap(function parseItems$(_context30) {\n              while (1) {\n                switch (_context30.prev = _context30.next) {\n                  case 0:\n                    _context30.next = 2;\n                    return \"<\";\n\n                  case 2:\n                    if (!useNewLines) {\n                      _context30.next = 6;\n                      break;\n                    }\n\n                    return _context30.delegateYield(surroundWithNewLines(parseParameterList()), \"t0\", 4);\n\n                  case 4:\n                    _context30.next = 7;\n                    break;\n\n                  case 6:\n                    return _context30.delegateYield(parseParameterList(), \"t1\", 7);\n\n                  case 7:\n                    _context30.next = 9;\n                    return \">\";\n\n                  case 9:\n                  case \"end\":\n                    return _context30.stop();\n                }\n              }\n            }, _marked27);\n          };\n\n          _marked27 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseItems), _marked28 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseParameterList);\n          useNewLines = getUseNewLines();\n          return _context34.delegateYield(parseItems(), \"t0\", 6);\n\n        case 6:\n        case \"end\":\n          return _context34.stop();\n      }\n    }\n  }, _marked29);\n}\n\nfunction parseVariableDeclaration(node, context) {\n  var _marked30, parseDeclarators, requiresSemiColon;\n\n  return _regeneratorRuntime.wrap(function parseVariableDeclaration$(_context36) {\n    while (1) {\n      switch (_context36.prev = _context36.next) {\n        case 0:\n          requiresSemiColon = function _ref19() {\n            if (context.parent.type === \"ForOfStatement\" || context.parent.type === \"ForInStatement\") return context.parent.left !== node;\n            return context.config[\"variableStatement.semiColon\"] || context.parent.type === \"ForStatement\";\n          };\n\n          parseDeclarators = function _ref18() {\n            var i;\n            return _regeneratorRuntime.wrap(function parseDeclarators$(_context35) {\n              while (1) {\n                switch (_context35.prev = _context35.next) {\n                  case 0:\n                    i = 0;\n\n                  case 1:\n                    if (!(i < node.declarations.length)) {\n                      _context35.next = 11;\n                      break;\n                    }\n\n                    if (!(i > 0)) {\n                      _context35.next = 7;\n                      break;\n                    }\n\n                    _context35.next = 5;\n                    return \",\";\n\n                  case 5:\n                    _context35.next = 7;\n                    return core.Signal.SpaceOrNewLine;\n\n                  case 7:\n                    return _context35.delegateYield(core.conditions.indentIfStartOfLine(newlineGroup(parseNode(node.declarations[i], context))), \"t0\", 8);\n\n                  case 8:\n                    i++;\n                    _context35.next = 1;\n                    break;\n\n                  case 11:\n                  case \"end\":\n                    return _context35.stop();\n                }\n              }\n            }, _marked30);\n          };\n\n          _marked30 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseDeclarators);\n\n          if (!node.declare) {\n            _context36.next = 6;\n            break;\n          }\n\n          _context36.next = 6;\n          return \"declare \";\n\n        case 6:\n          _context36.next = 8;\n          return node.kind + \" \";\n\n        case 8:\n          return _context36.delegateYield(parseDeclarators(), \"t0\", 9);\n\n        case 9:\n          if (!requiresSemiColon()) {\n            _context36.next = 12;\n            break;\n          }\n\n          _context36.next = 12;\n          return \";\";\n\n        case 12:\n        case \"end\":\n          return _context36.stop();\n      }\n    }\n  }, _marked31);\n}\n\nfunction parseVariableDeclarator(node, context) {\n  return _regeneratorRuntime.wrap(function parseVariableDeclarator$(_context37) {\n    while (1) {\n      switch (_context37.prev = _context37.next) {\n        case 0:\n          return _context37.delegateYield(parseNode(node.id, context), \"t0\", 1);\n\n        case 1:\n          if (!node.init) {\n            _context37.next = 5;\n            break;\n          }\n\n          _context37.next = 4;\n          return \" = \";\n\n        case 4:\n          return _context37.delegateYield(parseNode(node.init, context), \"t1\", 5);\n\n        case 5:\n        case \"end\":\n          return _context37.stop();\n      }\n    }\n  }, _marked32);\n}\n\nfunction parseClassBody(node, context) {\n  var startHeaderInfo = context.bag.take(BAG_KEYS.ClassStartHeaderInfo);\n  var bracePosition = context.parent.type === \"ClassDeclaration\" ? context.config[\"classDeclaration.bracePosition\"] : context.config[\"classExpression.bracePosition\"];\n  return parseMemberedBody({\n    bracePosition: bracePosition,\n    context: context,\n    members: node.body,\n    node: node,\n    startHeaderInfo: startHeaderInfo,\n    shouldUseBlankLine: function shouldUseBlankLine(previousMember, nextMember) {\n      return hasSeparatingBlankLine(previousMember, nextMember);\n    }\n  });\n}\n\nfunction parseClassOrObjectMethod(node, context) {\n  var startHeaderInfo, getForceMultiLineParameters, getUseSpaceBeforeParens, getBracePosition, getUseSemiColon;\n  return _regeneratorRuntime.wrap(function parseClassOrObjectMethod$(_context38) {\n    while (1) {\n      switch (_context38.prev = _context38.next) {\n        case 0:\n          getUseSemiColon = function _ref23() {\n            switch (node.kind) {\n              case \"constructor\":\n                return context.config[\"constructor.semiColon\"];\n\n              case \"get\":\n                return context.config[\"getAccessor.semiColon\"];\n\n              case \"set\":\n                return context.config[\"setAccessor.semiColon\"];\n\n              case \"method\":\n                return context.config[\"method.semiColon\"];\n\n              default:\n                return assertNever(node);\n            }\n          };\n\n          getBracePosition = function _ref22() {\n            switch (node.kind) {\n              case \"constructor\":\n                return context.config[\"constructor.bracePosition\"];\n\n              case \"get\":\n                return context.config[\"getAccessor.bracePosition\"];\n\n              case \"set\":\n                return context.config[\"setAccessor.bracePosition\"];\n\n              case \"method\":\n                return context.config[\"method.bracePosition\"];\n\n              default:\n                return assertNever(node);\n            }\n          };\n\n          getUseSpaceBeforeParens = function _ref21() {\n            switch (node.kind) {\n              case \"constructor\":\n                return context.config[\"constructor.spaceBeforeParentheses\"];\n\n              case \"get\":\n                return context.config[\"getAccessor.spaceBeforeParentheses\"];\n\n              case \"set\":\n                return context.config[\"setAccessor.spaceBeforeParentheses\"];\n\n              case \"method\":\n                return context.config[\"method.spaceBeforeParentheses\"];\n\n              default:\n                return assertNever(node);\n            }\n          };\n\n          getForceMultiLineParameters = function _ref20() {\n            switch (node.kind) {\n              case \"constructor\":\n                return context.config[\"constructor.forceMultiLineParameters\"];\n\n              case \"get\":\n                return context.config[\"getAccessor.forceMultiLineParameters\"];\n\n              case \"set\":\n                return context.config[\"setAccessor.forceMultiLineParameters\"];\n\n              case \"method\":\n                return context.config[\"method.forceMultiLineParameters\"];\n\n              default:\n                return assertNever(node);\n            }\n          };\n\n          if (!(node.type !== \"ObjectMethod\")) {\n            _context38.next = 6;\n            break;\n          }\n\n          return _context38.delegateYield(parseDecorators(node, context), \"t0\", 6);\n\n        case 6:\n          startHeaderInfo = createInfo(\"methodStartHeaderInfo\");\n          _context38.next = 9;\n          return startHeaderInfo;\n\n        case 9:\n          if (!(node.type !== \"ObjectMethod\")) {\n            _context38.next = 16;\n            break;\n          }\n\n          if (!node.accessibility) {\n            _context38.next = 13;\n            break;\n          }\n\n          _context38.next = 13;\n          return node.accessibility + \" \";\n\n        case 13:\n          if (!node.static) {\n            _context38.next = 16;\n            break;\n          }\n\n          _context38.next = 16;\n          return \"static \";\n\n        case 16:\n          if (!node.async) {\n            _context38.next = 19;\n            break;\n          }\n\n          _context38.next = 19;\n          return \"async \";\n\n        case 19:\n          if (!(node.type !== \"ObjectMethod\" && node.abstract)) {\n            _context38.next = 22;\n            break;\n          }\n\n          _context38.next = 22;\n          return \"abstract \";\n\n        case 22:\n          if (!(node.kind === \"get\")) {\n            _context38.next = 27;\n            break;\n          }\n\n          _context38.next = 25;\n          return \"get \";\n\n        case 25:\n          _context38.next = 30;\n          break;\n\n        case 27:\n          if (!(node.kind === \"set\")) {\n            _context38.next = 30;\n            break;\n          }\n\n          _context38.next = 30;\n          return \"set \";\n\n        case 30:\n          if (!node.generator) {\n            _context38.next = 33;\n            break;\n          }\n\n          _context38.next = 33;\n          return \"*\";\n\n        case 33:\n          if (!node.computed) {\n            _context38.next = 36;\n            break;\n          }\n\n          _context38.next = 36;\n          return \"[\";\n\n        case 36:\n          return _context38.delegateYield(parseNode(node.key, context), \"t1\", 37);\n\n        case 37:\n          if (!node.computed) {\n            _context38.next = 40;\n            break;\n          }\n\n          _context38.next = 40;\n          return \"]\";\n\n        case 40:\n          if (!(node.type !== \"ObjectMethod\" && node.optional)) {\n            _context38.next = 43;\n            break;\n          }\n\n          _context38.next = 43;\n          return \"?\";\n\n        case 43:\n          if (!node.typeParameters) {\n            _context38.next = 45;\n            break;\n          }\n\n          return _context38.delegateYield(parseNode(node.typeParameters, context), \"t2\", 45);\n\n        case 45:\n          if (!getUseSpaceBeforeParens()) {\n            _context38.next = 48;\n            break;\n          }\n\n          _context38.next = 48;\n          return \" \";\n\n        case 48:\n          return _context38.delegateYield(parseParametersOrArguments({\n            nodes: node.params,\n            context: context,\n            forceMultiLineWhenMultipleLines: getForceMultiLineParameters(),\n            customCloseParen: parseCloseParenWithType({\n              context: context,\n              startInfo: startHeaderInfo,\n              typeNode: node.returnType\n            })\n          }), \"t3\", 49);\n\n        case 49:\n          if (!(node.type !== \"TSDeclareMethod\")) {\n            _context38.next = 54;\n            break;\n          }\n\n          return _context38.delegateYield(parseBraceSeparator({\n            bracePosition: getBracePosition(),\n            bodyNode: node.body,\n            startHeaderInfo: startHeaderInfo,\n            context: context\n          }), \"t4\", 51);\n\n        case 51:\n          return _context38.delegateYield(parseNode(node.body, context), \"t5\", 52);\n\n        case 52:\n          _context38.next = 57;\n          break;\n\n        case 54:\n          if (!getUseSemiColon()) {\n            _context38.next = 57;\n            break;\n          }\n\n          _context38.next = 57;\n          return \";\";\n\n        case 57:\n        case \"end\":\n          return _context38.stop();\n      }\n    }\n  }, _marked33);\n}\n\nfunction parseClassProperty(node, context) {\n  return _regeneratorRuntime.wrap(function parseClassProperty$(_context39) {\n    while (1) {\n      switch (_context39.prev = _context39.next) {\n        case 0:\n          return _context39.delegateYield(parseDecorators(node, context), \"t0\", 1);\n\n        case 1:\n          if (!node.accessibility) {\n            _context39.next = 4;\n            break;\n          }\n\n          _context39.next = 4;\n          return node.accessibility + \" \";\n\n        case 4:\n          if (!node.static) {\n            _context39.next = 7;\n            break;\n          }\n\n          _context39.next = 7;\n          return \"static \";\n\n        case 7:\n          if (!node.abstract) {\n            _context39.next = 10;\n            break;\n          }\n\n          _context39.next = 10;\n          return \"abstract \";\n\n        case 10:\n          if (!node.readonly) {\n            _context39.next = 13;\n            break;\n          }\n\n          _context39.next = 13;\n          return \"readonly \";\n\n        case 13:\n          if (!node.computed) {\n            _context39.next = 16;\n            break;\n          }\n\n          _context39.next = 16;\n          return \"[\";\n\n        case 16:\n          return _context39.delegateYield(parseNode(node.key, context), \"t1\", 17);\n\n        case 17:\n          if (!node.computed) {\n            _context39.next = 20;\n            break;\n          }\n\n          _context39.next = 20;\n          return \"]\";\n\n        case 20:\n          if (!node.optional) {\n            _context39.next = 23;\n            break;\n          }\n\n          _context39.next = 23;\n          return \"?\";\n\n        case 23:\n          if (!node.definite) {\n            _context39.next = 26;\n            break;\n          }\n\n          _context39.next = 26;\n          return \"!\";\n\n        case 26:\n          return _context39.delegateYield(parseTypeAnnotationWithColonIfExists(node.typeAnnotation, context), \"t2\", 27);\n\n        case 27:\n          if (!node.value) {\n            _context39.next = 31;\n            break;\n          }\n\n          _context39.next = 30;\n          return \" = \";\n\n        case 30:\n          return _context39.delegateYield(parseNode(node.value, context), \"t3\", 31);\n\n        case 31:\n          if (!context.config[\"classProperty.semiColon\"]) {\n            _context39.next = 34;\n            break;\n          }\n\n          _context39.next = 34;\n          return \";\";\n\n        case 34:\n        case \"end\":\n          return _context39.stop();\n      }\n    }\n  }, _marked34);\n}\n\nfunction parseDecorator(node, context) {\n  return _regeneratorRuntime.wrap(function parseDecorator$(_context40) {\n    while (1) {\n      switch (_context40.prev = _context40.next) {\n        case 0:\n          _context40.next = 2;\n          return \"@\";\n\n        case 2:\n          return _context40.delegateYield(parseNode(node.expression, context), \"t0\", 3);\n\n        case 3:\n        case \"end\":\n          return _context40.stop();\n      }\n    }\n  }, _marked35);\n}\n\nfunction parseParameterProperty(node, context) {\n  return _regeneratorRuntime.wrap(function parseParameterProperty$(_context41) {\n    while (1) {\n      switch (_context41.prev = _context41.next) {\n        case 0:\n          if (!node.accessibility) {\n            _context41.next = 3;\n            break;\n          }\n\n          _context41.next = 3;\n          return node.accessibility + \" \";\n\n        case 3:\n          if (!node.readonly) {\n            _context41.next = 6;\n            break;\n          }\n\n          _context41.next = 6;\n          return \"readonly \";\n\n        case 6:\n          return _context41.delegateYield(parseNode(node.parameter, context), \"t0\", 7);\n\n        case 7:\n        case \"end\":\n          return _context41.stop();\n      }\n    }\n  }, _marked36);\n}\n\nfunction parseCallSignatureDeclaration(node, context) {\n  var startInfo;\n  return _regeneratorRuntime.wrap(function parseCallSignatureDeclaration$(_context42) {\n    while (1) {\n      switch (_context42.prev = _context42.next) {\n        case 0:\n          startInfo = createInfo(\"startConstructSignature\");\n          _context42.next = 3;\n          return startInfo;\n\n        case 3:\n          return _context42.delegateYield(parseNode(node.typeParameters, context), \"t0\", 4);\n\n        case 4:\n          return _context42.delegateYield(parseParametersOrArguments({\n            nodes: node.parameters,\n            context: context,\n            forceMultiLineWhenMultipleLines: context.config[\"callSignature.forceMultiLineParameters\"],\n            customCloseParen: parseCloseParenWithType({\n              context: context,\n              startInfo: startInfo,\n              typeNode: node.typeAnnotation\n            })\n          }), \"t1\", 5);\n\n        case 5:\n          if (!context.config[\"callSignature.semiColon\"]) {\n            _context42.next = 8;\n            break;\n          }\n\n          _context42.next = 8;\n          return \";\";\n\n        case 8:\n        case \"end\":\n          return _context42.stop();\n      }\n    }\n  }, _marked37);\n}\n\nfunction parseConstructSignatureDeclaration(node, context) {\n  var startInfo;\n  return _regeneratorRuntime.wrap(function parseConstructSignatureDeclaration$(_context43) {\n    while (1) {\n      switch (_context43.prev = _context43.next) {\n        case 0:\n          startInfo = createInfo(\"startConstructSignature\");\n          _context43.next = 3;\n          return startInfo;\n\n        case 3:\n          _context43.next = 5;\n          return \"new\";\n\n        case 5:\n          if (!context.config[\"constructSignature.spaceAfterNewKeyword\"]) {\n            _context43.next = 8;\n            break;\n          }\n\n          _context43.next = 8;\n          return \" \";\n\n        case 8:\n          return _context43.delegateYield(parseNode(node.typeParameters, context), \"t0\", 9);\n\n        case 9:\n          return _context43.delegateYield(parseParametersOrArguments({\n            nodes: node.parameters,\n            context: context,\n            forceMultiLineWhenMultipleLines: context.config[\"constructSignature.forceMultiLineParameters\"],\n            customCloseParen: parseCloseParenWithType({\n              context: context,\n              startInfo: startInfo,\n              typeNode: node.typeAnnotation\n            })\n          }), \"t1\", 10);\n\n        case 10:\n          if (!context.config[\"constructSignature.semiColon\"]) {\n            _context43.next = 13;\n            break;\n          }\n\n          _context43.next = 13;\n          return \";\";\n\n        case 13:\n        case \"end\":\n          return _context43.stop();\n      }\n    }\n  }, _marked38);\n}\n\nfunction parseIndexSignature(node, context) {\n  return _regeneratorRuntime.wrap(function parseIndexSignature$(_context44) {\n    while (1) {\n      switch (_context44.prev = _context44.next) {\n        case 0:\n          if (!node.readonly) {\n            _context44.next = 3;\n            break;\n          }\n\n          _context44.next = 3;\n          return \"readonly \";\n\n        case 3:\n          _context44.next = 5;\n          return \"[\";\n\n        case 5:\n          return _context44.delegateYield(parseNode(node.parameters[0], context), \"t0\", 6);\n\n        case 6:\n          _context44.next = 8;\n          return \"]\";\n\n        case 8:\n          return _context44.delegateYield(parseTypeAnnotationWithColonIfExists(node.typeAnnotation, context), \"t1\", 9);\n\n        case 9:\n          if (!context.config[\"indexSignature.semiColon\"]) {\n            _context44.next = 12;\n            break;\n          }\n\n          _context44.next = 12;\n          return \";\";\n\n        case 12:\n        case \"end\":\n          return _context44.stop();\n      }\n    }\n  }, _marked39);\n}\n\nfunction parseInterfaceBody(node, context) {\n  var startHeaderInfo = context.bag.take(BAG_KEYS.InterfaceDeclarationStartHeaderInfo);\n  return parseMemberedBody({\n    bracePosition: context.config[\"interfaceDeclaration.bracePosition\"],\n    context: context,\n    members: node.body,\n    node: node,\n    startHeaderInfo: startHeaderInfo,\n    shouldUseBlankLine: function shouldUseBlankLine(previousMember, nextMember) {\n      return hasSeparatingBlankLine(previousMember, nextMember);\n    }\n  });\n}\n\nfunction parseMethodSignature(node, context) {\n  var startInfo;\n  return _regeneratorRuntime.wrap(function parseMethodSignature$(_context45) {\n    while (1) {\n      switch (_context45.prev = _context45.next) {\n        case 0:\n          startInfo = createInfo(\"startConstructSignature\");\n          _context45.next = 3;\n          return startInfo;\n\n        case 3:\n          if (!node.computed) {\n            _context45.next = 6;\n            break;\n          }\n\n          _context45.next = 6;\n          return \"[\";\n\n        case 6:\n          return _context45.delegateYield(parseNode(node.key, context), \"t0\", 7);\n\n        case 7:\n          if (!node.computed) {\n            _context45.next = 10;\n            break;\n          }\n\n          _context45.next = 10;\n          return \"]\";\n\n        case 10:\n          if (!node.optional) {\n            _context45.next = 13;\n            break;\n          }\n\n          _context45.next = 13;\n          return \"?\";\n\n        case 13:\n          return _context45.delegateYield(parseNode(node.typeParameters, context), \"t1\", 14);\n\n        case 14:\n          return _context45.delegateYield(parseParametersOrArguments({\n            nodes: node.parameters,\n            context: context,\n            forceMultiLineWhenMultipleLines: context.config[\"methodSignature.forceMultiLineParameters\"],\n            customCloseParen: parseCloseParenWithType({\n              context: context,\n              startInfo: startInfo,\n              typeNode: node.typeAnnotation\n            })\n          }), \"t2\", 15);\n\n        case 15:\n          if (!context.config[\"methodSignature.semiColon\"]) {\n            _context45.next = 18;\n            break;\n          }\n\n          _context45.next = 18;\n          return \";\";\n\n        case 18:\n        case \"end\":\n          return _context45.stop();\n      }\n    }\n  }, _marked40);\n}\n\nfunction parsePropertySignature(node, context) {\n  return _regeneratorRuntime.wrap(function parsePropertySignature$(_context47) {\n    while (1) {\n      switch (_context47.prev = _context47.next) {\n        case 0:\n          if (!node.readonly) {\n            _context47.next = 3;\n            break;\n          }\n\n          _context47.next = 3;\n          return \"readonly \";\n\n        case 3:\n          if (!node.computed) {\n            _context47.next = 6;\n            break;\n          }\n\n          _context47.next = 6;\n          return \"[\";\n\n        case 6:\n          return _context47.delegateYield(parseNode(node.key, context), \"t0\", 7);\n\n        case 7:\n          if (!node.computed) {\n            _context47.next = 10;\n            break;\n          }\n\n          _context47.next = 10;\n          return \"]\";\n\n        case 10:\n          if (!node.optional) {\n            _context47.next = 13;\n            break;\n          }\n\n          _context47.next = 13;\n          return \"?\";\n\n        case 13:\n          return _context47.delegateYield(parseTypeAnnotationWithColonIfExists(node.typeAnnotation, context), \"t1\", 14);\n\n        case 14:\n          if (!node.initializer) {\n            _context47.next = 18;\n            break;\n          }\n\n          _context47.next = 17;\n          return core.Signal.SpaceOrNewLine;\n\n        case 17:\n          return _context47.delegateYield(core.conditions.indentIfStartOfLine(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee4() {\n            return _regeneratorRuntime.wrap(function _callee4$(_context46) {\n              while (1) {\n                switch (_context46.prev = _context46.next) {\n                  case 0:\n                    _context46.next = 2;\n                    return \"= \";\n\n                  case 2:\n                    return _context46.delegateYield(parseNode(node.initializer, context), \"t0\", 3);\n\n                  case 3:\n                  case \"end\":\n                    return _context46.stop();\n                }\n              }\n            }, _callee4);\n          })()), \"t2\", 18);\n\n        case 18:\n          if (!context.config[\"propertySignature.semiColon\"]) {\n            _context47.next = 21;\n            break;\n          }\n\n          _context47.next = 21;\n          return \";\";\n\n        case 21:\n        case \"end\":\n          return _context47.stop();\n      }\n    }\n  }, _marked41);\n}\n\nfunction parseModuleBlock(node, context) {\n  var startHeaderInfo = context.bag.take(BAG_KEYS.ModuleDeclarationStartHeaderInfo);\n  return parseMemberedBody({\n    bracePosition: context.config[\"moduleDeclaration.bracePosition\"],\n    context: context,\n    members: node.body,\n    node: node,\n    startHeaderInfo: startHeaderInfo,\n    shouldUseBlankLine: function shouldUseBlankLine(previousMember, nextMember) {\n      return hasSeparatingBlankLine(previousMember, nextMember);\n    }\n  });\n}\n\nfunction parseBreakStatement(node, context) {\n  return _regeneratorRuntime.wrap(function parseBreakStatement$(_context48) {\n    while (1) {\n      switch (_context48.prev = _context48.next) {\n        case 0:\n          _context48.next = 2;\n          return \"break\";\n\n        case 2:\n          if (!(node.label != null)) {\n            _context48.next = 6;\n            break;\n          }\n\n          _context48.next = 5;\n          return \" \";\n\n        case 5:\n          return _context48.delegateYield(parseNode(node.label, context), \"t0\", 6);\n\n        case 6:\n          if (!context.config[\"breakStatement.semiColon\"]) {\n            _context48.next = 9;\n            break;\n          }\n\n          _context48.next = 9;\n          return \";\";\n\n        case 9:\n        case \"end\":\n          return _context48.stop();\n      }\n    }\n  }, _marked42);\n}\n\nfunction parseContinueStatement(node, context) {\n  return _regeneratorRuntime.wrap(function parseContinueStatement$(_context49) {\n    while (1) {\n      switch (_context49.prev = _context49.next) {\n        case 0:\n          _context49.next = 2;\n          return \"continue\";\n\n        case 2:\n          if (!(node.label != null)) {\n            _context49.next = 6;\n            break;\n          }\n\n          _context49.next = 5;\n          return \" \";\n\n        case 5:\n          return _context49.delegateYield(parseNode(node.label, context), \"t0\", 6);\n\n        case 6:\n          if (!context.config[\"continueStatement.semiColon\"]) {\n            _context49.next = 9;\n            break;\n          }\n\n          _context49.next = 9;\n          return \";\";\n\n        case 9:\n        case \"end\":\n          return _context49.stop();\n      }\n    }\n  }, _marked43);\n}\n\nfunction parseDebuggerStatement(node, context) {\n  return _regeneratorRuntime.wrap(function parseDebuggerStatement$(_context50) {\n    while (1) {\n      switch (_context50.prev = _context50.next) {\n        case 0:\n          _context50.next = 2;\n          return \"debugger\";\n\n        case 2:\n          if (!context.config[\"debuggerStatement.semiColon\"]) {\n            _context50.next = 5;\n            break;\n          }\n\n          _context50.next = 5;\n          return \";\";\n\n        case 5:\n        case \"end\":\n          return _context50.stop();\n      }\n    }\n  }, _marked44);\n}\n\nfunction parseDirective(node, context) {\n  return _regeneratorRuntime.wrap(function parseDirective$(_context51) {\n    while (1) {\n      switch (_context51.prev = _context51.next) {\n        case 0:\n          return _context51.delegateYield(parseNode(node.value, context), \"t0\", 1);\n\n        case 1:\n          if (!context.config[\"directive.semiColon\"]) {\n            _context51.next = 4;\n            break;\n          }\n\n          _context51.next = 4;\n          return \";\";\n\n        case 4:\n        case \"end\":\n          return _context51.stop();\n      }\n    }\n  }, _marked45);\n}\n\nfunction parseDoWhileStatement(node, context) {\n  return _regeneratorRuntime.wrap(function parseDoWhileStatement$(_context52) {\n    while (1) {\n      switch (_context52.prev = _context52.next) {\n        case 0:\n          _context52.next = 2;\n          return \"do\";\n\n        case 2:\n          return _context52.delegateYield(parseBraceSeparator({\n            bracePosition: context.config[\"doWhileStatement.bracePosition\"],\n            bodyNode: node.body,\n            startHeaderInfo: undefined,\n            context: context\n          }), \"t0\", 3);\n\n        case 3:\n          return _context52.delegateYield(parseNode(node.body, context), \"t1\", 4);\n\n        case 4:\n          _context52.next = 6;\n          return \" while\";\n\n        case 6:\n          if (!context.config[\"doWhileStatement.spaceAfterWhileKeyword\"]) {\n            _context52.next = 9;\n            break;\n          }\n\n          _context52.next = 9;\n          return \" \";\n\n        case 9:\n          return _context52.delegateYield(parseNodeInParens({\n            firstInnerNode: node.test,\n            innerIterable: parseNode(node.test, context),\n            context: context\n          }), \"t2\", 10);\n\n        case 10:\n          if (!context.config[\"doWhileStatement.semiColon\"]) {\n            _context52.next = 13;\n            break;\n          }\n\n          _context52.next = 13;\n          return \";\";\n\n        case 13:\n        case \"end\":\n          return _context52.stop();\n      }\n    }\n  }, _marked46);\n}\n\nfunction parseEmptyStatement(node, context) {\n  return _regeneratorRuntime.wrap(function parseEmptyStatement$(_context53) {\n    while (1) {\n      switch (_context53.prev = _context53.next) {\n        case 0:\n          _context53.next = 2;\n          return \";\";\n\n        case 2:\n        case \"end\":\n          return _context53.stop();\n      }\n    }\n  }, _marked47);\n}\n\nfunction parseExportAssignment(node, context) {\n  return _regeneratorRuntime.wrap(function parseExportAssignment$(_context54) {\n    while (1) {\n      switch (_context54.prev = _context54.next) {\n        case 0:\n          _context54.next = 2;\n          return \"export = \";\n\n        case 2:\n          return _context54.delegateYield(parseNode(node.expression, context), \"t0\", 3);\n\n        case 3:\n          if (!context.config[\"exportAssignment.semiColon\"]) {\n            _context54.next = 6;\n            break;\n          }\n\n          _context54.next = 6;\n          return \";\";\n\n        case 6:\n        case \"end\":\n          return _context54.stop();\n      }\n    }\n  }, _marked48);\n}\n\nfunction parseExpressionStatement(node, context) {\n  var _marked49, _marked50, parseInner, parseForPrefixSemiColonInsertion;\n\n  return _regeneratorRuntime.wrap(function parseExpressionStatement$(_context57) {\n    while (1) {\n      switch (_context57.prev = _context57.next) {\n        case 0:\n          parseForPrefixSemiColonInsertion = function _ref28() {\n            var parsedNode, checkIterable, checkString, checkCondition;\n            return _regeneratorRuntime.wrap(function parseForPrefixSemiColonInsertion$(_context56) {\n              while (1) {\n                switch (_context56.prev = _context56.next) {\n                  case 0:\n                    checkCondition = function _ref26(condition) {\n                      if (condition.true) {\n                        condition.true = core.makeIterableRepeatable(condition.true);\n                        var result = checkIterable(condition.true);\n                        if (result != null) return result;\n                      }\n\n                      if (condition.false) {\n                        condition.false = core.makeIterableRepeatable(condition.false);\n\n                        var _result = checkIterable(condition.false);\n\n                        if (_result != null) return _result;\n                      }\n\n                      return undefined;\n                    };\n\n                    checkString = function _ref25(item) {\n                      return isPrefixSemiColonInsertionChar(item[0]);\n                    };\n\n                    checkIterable = function _ref24(iterable) {\n                      var _iteratorNormalCompletion5 = true;\n                      var _didIteratorError5 = false;\n                      var _iteratorError5 = undefined;\n\n                      try {\n                        for (var _iterator5 = iterable[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                          var item = _step5.value;\n                          if (typeof item === \"string\") return checkString(item);else if (typeof item === \"number\") continue;else if (item.kind === core.PrintItemKind.Condition) {\n                            var result = checkCondition(item);\n                            if (result != null) return result;\n                          } else if (item.kind === core.PrintItemKind.RawString) return checkString(item.text);else if (item.kind === core.PrintItemKind.Info) continue;else assertNever(item);\n                        }\n                      } catch (err) {\n                        _didIteratorError5 = true;\n                        _iteratorError5 = err;\n                      } finally {\n                        try {\n                          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n                            _iterator5.return();\n                          }\n                        } finally {\n                          if (_didIteratorError5) {\n                            throw _iteratorError5;\n                          }\n                        }\n                      }\n\n                      return undefined;\n                    };\n\n                    parsedNode = core.makeIterableRepeatable(parseInner());\n\n                    if (!checkIterable(parsedNode)) {\n                      _context56.next = 7;\n                      break;\n                    }\n\n                    _context56.next = 7;\n                    return \";\";\n\n                  case 7:\n                    return _context56.delegateYield(parsedNode, \"t0\", 8);\n\n                  case 8:\n                  case \"end\":\n                    return _context56.stop();\n                }\n              }\n            }, _marked50);\n          };\n\n          parseInner = function _ref27() {\n            return _regeneratorRuntime.wrap(function parseInner$(_context55) {\n              while (1) {\n                switch (_context55.prev = _context55.next) {\n                  case 0:\n                    return _context55.delegateYield(parseNode(node.expression, context), \"t0\", 1);\n\n                  case 1:\n                    if (!context.config[\"expressionStatement.semiColon\"]) {\n                      _context55.next = 4;\n                      break;\n                    }\n\n                    _context55.next = 4;\n                    return \";\";\n\n                  case 4:\n                  case \"end\":\n                    return _context55.stop();\n                }\n              }\n            }, _marked49);\n          };\n\n          _marked49 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseInner), _marked50 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseForPrefixSemiColonInsertion);\n\n          if (!context.config[\"expressionStatement.semiColon\"]) {\n            _context57.next = 7;\n            break;\n          }\n\n          return _context57.delegateYield(parseInner(), \"t0\", 5);\n\n        case 5:\n          _context57.next = 8;\n          break;\n\n        case 7:\n          return _context57.delegateYield(parseForPrefixSemiColonInsertion(), \"t1\", 8);\n\n        case 8:\n        case \"end\":\n          return _context57.stop();\n      }\n    }\n  }, _marked51);\n}\n\nfunction parseForInStatement(node, context) {\n  var _marked52, startHeaderInfo, endHeaderInfo, parseInnerHeader;\n\n  return _regeneratorRuntime.wrap(function parseForInStatement$(_context60) {\n    while (1) {\n      switch (_context60.prev = _context60.next) {\n        case 0:\n          parseInnerHeader = function _ref29() {\n            return _regeneratorRuntime.wrap(function parseInnerHeader$(_context59) {\n              while (1) {\n                switch (_context59.prev = _context59.next) {\n                  case 0:\n                    return _context59.delegateYield(parseNode(node.left, context), \"t0\", 1);\n\n                  case 1:\n                    _context59.next = 3;\n                    return core.Signal.SpaceOrNewLine;\n\n                  case 3:\n                    return _context59.delegateYield(core.conditions.indentIfStartOfLine(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee5() {\n                      return _regeneratorRuntime.wrap(function _callee5$(_context58) {\n                        while (1) {\n                          switch (_context58.prev = _context58.next) {\n                            case 0:\n                              _context58.next = 2;\n                              return \"in \";\n\n                            case 2:\n                              return _context58.delegateYield(parseNode(node.right, context), \"t0\", 3);\n\n                            case 3:\n                            case \"end\":\n                              return _context58.stop();\n                          }\n                        }\n                      }, _callee5);\n                    })()), \"t1\", 4);\n\n                  case 4:\n                  case \"end\":\n                    return _context59.stop();\n                }\n              }\n            }, _marked52);\n          };\n\n          _marked52 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseInnerHeader);\n          startHeaderInfo = createInfo(\"startHeader\");\n          endHeaderInfo = createInfo(\"endHeader\");\n          _context60.next = 6;\n          return startHeaderInfo;\n\n        case 6:\n          _context60.next = 8;\n          return \"for\";\n\n        case 8:\n          if (!context.config[\"forInStatement.spaceAfterForKeyword\"]) {\n            _context60.next = 11;\n            break;\n          }\n\n          _context60.next = 11;\n          return \" \";\n\n        case 11:\n          return _context60.delegateYield(parseNodeInParens({\n            firstInnerNode: node.left,\n            innerIterable: parseInnerHeader(),\n            context: context\n          }), \"t0\", 12);\n\n        case 12:\n          _context60.next = 14;\n          return endHeaderInfo;\n\n        case 14:\n          return _context60.delegateYield(parseConditionalBraceBody({\n            context: context,\n            parent: node,\n            bodyNode: node.body,\n            useBraces: context.config[\"forInStatement.useBraces\"],\n            bracePosition: context.config[\"forInStatement.bracePosition\"],\n            singleBodyPosition: context.config[\"forInStatement.singleBodyPosition\"],\n            requiresBracesCondition: undefined,\n            startHeaderInfo: startHeaderInfo,\n            endHeaderInfo: endHeaderInfo\n          }).iterator, \"t1\", 15);\n\n        case 15:\n        case \"end\":\n          return _context60.stop();\n      }\n    }\n  }, _marked53);\n}\n\nfunction parseForOfStatement(node, context) {\n  var _marked54, startHeaderInfo, endHeaderInfo, parseInnerHeader;\n\n  return _regeneratorRuntime.wrap(function parseForOfStatement$(_context63) {\n    while (1) {\n      switch (_context63.prev = _context63.next) {\n        case 0:\n          parseInnerHeader = function _ref30() {\n            return _regeneratorRuntime.wrap(function parseInnerHeader$(_context62) {\n              while (1) {\n                switch (_context62.prev = _context62.next) {\n                  case 0:\n                    return _context62.delegateYield(parseNode(node.left, context), \"t0\", 1);\n\n                  case 1:\n                    _context62.next = 3;\n                    return core.Signal.SpaceOrNewLine;\n\n                  case 3:\n                    return _context62.delegateYield(core.conditions.indentIfStartOfLine(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee6() {\n                      return _regeneratorRuntime.wrap(function _callee6$(_context61) {\n                        while (1) {\n                          switch (_context61.prev = _context61.next) {\n                            case 0:\n                              _context61.next = 2;\n                              return \"of \";\n\n                            case 2:\n                              return _context61.delegateYield(parseNode(node.right, context), \"t0\", 3);\n\n                            case 3:\n                            case \"end\":\n                              return _context61.stop();\n                          }\n                        }\n                      }, _callee6);\n                    })()), \"t1\", 4);\n\n                  case 4:\n                  case \"end\":\n                    return _context62.stop();\n                }\n              }\n            }, _marked54);\n          };\n\n          _marked54 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseInnerHeader);\n          startHeaderInfo = createInfo(\"startHeader\");\n          endHeaderInfo = createInfo(\"endHeader\");\n          _context63.next = 6;\n          return startHeaderInfo;\n\n        case 6:\n          _context63.next = 8;\n          return \"for\";\n\n        case 8:\n          if (!context.config[\"forOfStatement.spaceAfterForKeyword\"]) {\n            _context63.next = 11;\n            break;\n          }\n\n          _context63.next = 11;\n          return \" \";\n\n        case 11:\n          if (!node.await) {\n            _context63.next = 14;\n            break;\n          }\n\n          _context63.next = 14;\n          return \"await \";\n\n        case 14:\n          return _context63.delegateYield(parseNodeInParens({\n            firstInnerNode: node.left,\n            innerIterable: parseInnerHeader(),\n            context: context\n          }), \"t0\", 15);\n\n        case 15:\n          _context63.next = 17;\n          return endHeaderInfo;\n\n        case 17:\n          return _context63.delegateYield(parseConditionalBraceBody({\n            context: context,\n            parent: node,\n            bodyNode: node.body,\n            useBraces: context.config[\"forOfStatement.useBraces\"],\n            bracePosition: context.config[\"forOfStatement.bracePosition\"],\n            singleBodyPosition: context.config[\"forOfStatement.singleBodyPosition\"],\n            requiresBracesCondition: undefined,\n            startHeaderInfo: startHeaderInfo,\n            endHeaderInfo: endHeaderInfo\n          }).iterator, \"t1\", 18);\n\n        case 18:\n        case \"end\":\n          return _context63.stop();\n      }\n    }\n  }, _marked55);\n}\n\nfunction parseForStatement(node, context) {\n  var _marked56, startHeaderInfo, endHeaderInfo, parseInnerHeader;\n\n  return _regeneratorRuntime.wrap(function parseForStatement$(_context67) {\n    while (1) {\n      switch (_context67.prev = _context67.next) {\n        case 0:\n          parseInnerHeader = function _ref32() {\n            var separatorAfterSemiColons, getSeparatorAfterSemiColons;\n            return _regeneratorRuntime.wrap(function parseInnerHeader$(_context66) {\n              while (1) {\n                switch (_context66.prev = _context66.next) {\n                  case 0:\n                    getSeparatorAfterSemiColons = function _ref31() {\n                      return context.config[\"forStatement.spaceAfterSemiColons\"] ? core.Signal.SpaceOrNewLine : core.Signal.PossibleNewLine;\n                    };\n\n                    separatorAfterSemiColons = getSeparatorAfterSemiColons();\n                    return _context66.delegateYield(newlineGroup(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee7() {\n                      return _regeneratorRuntime.wrap(function _callee7$(_context64) {\n                        while (1) {\n                          switch (_context64.prev = _context64.next) {\n                            case 0:\n                              return _context64.delegateYield(parseNode(node.init, context), \"t0\", 1);\n\n                            case 1:\n                              if (!(!node.init || node.init.type !== \"VariableDeclaration\")) {\n                                _context64.next = 4;\n                                break;\n                              }\n\n                              _context64.next = 4;\n                              return \";\";\n\n                            case 4:\n                            case \"end\":\n                              return _context64.stop();\n                          }\n                        }\n                      }, _callee7);\n                    })()), \"t0\", 3);\n\n                  case 3:\n                    _context66.next = 5;\n                    return separatorAfterSemiColons;\n\n                  case 5:\n                    return _context66.delegateYield(core.conditions.indentIfStartOfLine(newlineGroup(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee8() {\n                      return _regeneratorRuntime.wrap(function _callee8$(_context65) {\n                        while (1) {\n                          switch (_context65.prev = _context65.next) {\n                            case 0:\n                              return _context65.delegateYield(parseNode(node.test, context), \"t0\", 1);\n\n                            case 1:\n                              _context65.next = 3;\n                              return \";\";\n\n                            case 3:\n                            case \"end\":\n                              return _context65.stop();\n                          }\n                        }\n                      }, _callee8);\n                    })())), \"t1\", 6);\n\n                  case 6:\n                    _context66.next = 8;\n                    return separatorAfterSemiColons;\n\n                  case 8:\n                    return _context66.delegateYield(core.conditions.indentIfStartOfLine(newlineGroup(parseNode(node.update, context))), \"t2\", 9);\n\n                  case 9:\n                  case \"end\":\n                    return _context66.stop();\n                }\n              }\n            }, _marked56);\n          };\n\n          _marked56 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseInnerHeader);\n          startHeaderInfo = createInfo(\"startHeader\");\n          endHeaderInfo = createInfo(\"endHeader\");\n          _context67.next = 6;\n          return startHeaderInfo;\n\n        case 6:\n          _context67.next = 8;\n          return \"for\";\n\n        case 8:\n          if (!context.config[\"forStatement.spaceAfterForKeyword\"]) {\n            _context67.next = 11;\n            break;\n          }\n\n          _context67.next = 11;\n          return \" \";\n\n        case 11:\n          return _context67.delegateYield(parseNodeInParens({\n            firstInnerNode: node.init || context.tokenFinder.getFirstTokenWithin(node, \";\"),\n            innerIterable: parseInnerHeader(),\n            context: context\n          }), \"t0\", 12);\n\n        case 12:\n          _context67.next = 14;\n          return endHeaderInfo;\n\n        case 14:\n          return _context67.delegateYield(parseConditionalBraceBody({\n            context: context,\n            parent: node,\n            bodyNode: node.body,\n            useBraces: context.config[\"forStatement.useBraces\"],\n            bracePosition: context.config[\"forStatement.bracePosition\"],\n            singleBodyPosition: context.config[\"forStatement.singleBodyPosition\"],\n            requiresBracesCondition: undefined,\n            startHeaderInfo: startHeaderInfo,\n            endHeaderInfo: endHeaderInfo\n          }).iterator, \"t1\", 15);\n\n        case 15:\n        case \"end\":\n          return _context67.stop();\n      }\n    }\n  }, _marked57);\n}\n\nfunction parseIfStatement(node, context) {\n  var _marked58, result, startElseHeaderInfo, _parseHeader;\n\n  return _regeneratorRuntime.wrap(function parseIfStatement$(_context69) {\n    while (1) {\n      switch (_context69.prev = _context69.next) {\n        case 0:\n          _parseHeader = function _ref33(ifStatement) {\n            return _regeneratorRuntime.wrap(function _parseHeader$(_context68) {\n              while (1) {\n                switch (_context68.prev = _context68.next) {\n                  case 0:\n                    _context68.next = 2;\n                    return \"if\";\n\n                  case 2:\n                    if (!context.config[\"ifStatement.spaceAfterIfKeyword\"]) {\n                      _context68.next = 5;\n                      break;\n                    }\n\n                    _context68.next = 5;\n                    return \" \";\n\n                  case 5:\n                    return _context68.delegateYield(parseNodeInParens({\n                      firstInnerNode: ifStatement.test,\n                      innerIterable: parseNode(ifStatement.test, context),\n                      context: context\n                    }), \"t0\", 6);\n\n                  case 6:\n                  case \"end\":\n                    return _context68.stop();\n                }\n              }\n            }, _marked58);\n          };\n\n          _marked58 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(_parseHeader);\n          result = parseHeaderWithConditionalBraceBody({\n            parseHeader: function parseHeader() {\n              return _parseHeader(node);\n            },\n            parent: node,\n            bodyNode: node.consequent,\n            context: context,\n            useBraces: context.config[\"ifStatement.useBraces\"],\n            bracePosition: context.config[\"ifStatement.bracePosition\"],\n            singleBodyPosition: context.config[\"ifStatement.singleBodyPosition\"],\n            requiresBracesCondition: context.bag.take(BAG_KEYS.IfStatementLastBraceCondition)\n          });\n          return _context69.delegateYield(result.iterator, \"t0\", 4);\n\n        case 4:\n          if (!node.alternate) {\n            _context69.next = 20;\n            break;\n          }\n\n          if (node.alternate.type === \"IfStatement\" && node.alternate.alternate == null) context.bag.put(BAG_KEYS.IfStatementLastBraceCondition, result.braceCondition);\n          return _context69.delegateYield(parseControlFlowSeparator(context.config[\"ifStatement.nextControlFlowPosition\"], node.alternate, \"else\", context), \"t1\", 7);\n\n        case 7:\n          return _context69.delegateYield(parseLeadingComments(node.alternate, context), \"t2\", 8);\n\n        case 8:\n          startElseHeaderInfo = createInfo(\"startElseHeader\");\n          _context69.next = 11;\n          return startElseHeaderInfo;\n\n        case 11:\n          _context69.next = 13;\n          return \"else\";\n\n        case 13:\n          if (!(node.alternate.type === \"IfStatement\")) {\n            _context69.next = 19;\n            break;\n          }\n\n          _context69.next = 16;\n          return \" \";\n\n        case 16:\n          return _context69.delegateYield(parseNode(node.alternate, context), \"t3\", 17);\n\n        case 17:\n          _context69.next = 20;\n          break;\n\n        case 19:\n          return _context69.delegateYield(parseConditionalBraceBody({\n            parent: node,\n            bodyNode: node.alternate,\n            context: context,\n            startHeaderInfo: startElseHeaderInfo,\n            useBraces: context.config[\"ifStatement.useBraces\"],\n            bracePosition: context.config[\"ifStatement.bracePosition\"],\n            singleBodyPosition: context.config[\"ifStatement.singleBodyPosition\"],\n            headerStartToken: context.tokenFinder.getFirstTokenBefore(node.alternate, \"else\"),\n            requiresBracesCondition: result.braceCondition\n          }).iterator, \"t4\", 20);\n\n        case 20:\n        case \"end\":\n          return _context69.stop();\n      }\n    }\n  }, _marked59);\n}\n\nfunction parseInterpreterDirective(node, context) {\n  return _regeneratorRuntime.wrap(function parseInterpreterDirective$(_context70) {\n    while (1) {\n      switch (_context70.prev = _context70.next) {\n        case 0:\n          _context70.next = 2;\n          return \"#!\";\n\n        case 2:\n          _context70.next = 4;\n          return node.value;\n\n        case 4:\n        case \"end\":\n          return _context70.stop();\n      }\n    }\n  }, _marked60);\n}\n\nfunction parseLabeledStatement(node, context) {\n  return _regeneratorRuntime.wrap(function parseLabeledStatement$(_context71) {\n    while (1) {\n      switch (_context71.prev = _context71.next) {\n        case 0:\n          return _context71.delegateYield(parseNode(node.label, context), \"t0\", 1);\n\n        case 1:\n          _context71.next = 3;\n          return \":\";\n\n        case 3:\n          if (!(node.body.type === \"BlockStatement\")) {\n            _context71.next = 8;\n            break;\n          }\n\n          _context71.next = 6;\n          return \" \";\n\n        case 6:\n          _context71.next = 10;\n          break;\n\n        case 8:\n          _context71.next = 10;\n          return core.Signal.NewLine;\n\n        case 10:\n          return _context71.delegateYield(parseNode(node.body, context), \"t1\", 11);\n\n        case 11:\n        case \"end\":\n          return _context71.stop();\n      }\n    }\n  }, _marked61);\n}\n\nfunction parseReturnStatement(node, context) {\n  return _regeneratorRuntime.wrap(function parseReturnStatement$(_context72) {\n    while (1) {\n      switch (_context72.prev = _context72.next) {\n        case 0:\n          _context72.next = 2;\n          return \"return\";\n\n        case 2:\n          if (!node.argument) {\n            _context72.next = 6;\n            break;\n          }\n\n          _context72.next = 5;\n          return \" \";\n\n        case 5:\n          return _context72.delegateYield(parseNode(node.argument, context), \"t0\", 6);\n\n        case 6:\n          if (!context.config[\"returnStatement.semiColon\"]) {\n            _context72.next = 9;\n            break;\n          }\n\n          _context72.next = 9;\n          return \";\";\n\n        case 9:\n        case \"end\":\n          return _context72.stop();\n      }\n    }\n  }, _marked62);\n}\n\nfunction parseSwitchCase(node, context) {\n  var _marked63, startHeaderInfo, blockStatementBody, parseTrailingCommentStatements, getBlockStatementBody;\n\n  return _regeneratorRuntime.wrap(function parseSwitchCase$(_context74) {\n    while (1) {\n      switch (_context74.prev = _context74.next) {\n        case 0:\n          getBlockStatementBody = function _ref35() {\n            if (node.consequent.length === 1 && node.consequent[0].type === \"BlockStatement\") return node.consequent[0];\n            return undefined;\n          };\n\n          parseTrailingCommentStatements = function _ref34() {\n            var trailingComments, parentCases, isLastSwitchCase, isEqualIndent, lastNode, _i2, _trailingComments, comment, parsedCommentNode;\n\n            return _regeneratorRuntime.wrap(function parseTrailingCommentStatements$(_context73) {\n              while (1) {\n                switch (_context73.prev = _context73.next) {\n                  case 0:\n                    trailingComments = Array.from(getTrailingCommentsAsStatements(node, context));\n\n                    if (!(trailingComments.length === 0)) {\n                      _context73.next = 3;\n                      break;\n                    }\n\n                    return _context73.abrupt(\"return\");\n\n                  case 3:\n                    parentCases = context.parent.cases;\n                    isLastSwitchCase = parentCases[parentCases.length - 1] === node;\n                    isEqualIndent = getBlockStatementBody() != null;\n                    lastNode = node;\n                    _i2 = 0, _trailingComments = trailingComments;\n\n                  case 8:\n                    if (!(_i2 < _trailingComments.length)) {\n                      _context73.next = 21;\n                      break;\n                    }\n\n                    comment = _trailingComments[_i2];\n                    isEqualIndent = isEqualIndent || comment.loc.start.column <= lastNode.loc.start.column;\n                    parsedCommentNode = parseCommentBasedOnLastNode(comment, lastNode, context);\n\n                    if (!(!isLastSwitchCase && isEqualIndent)) {\n                      _context73.next = 16;\n                      break;\n                    }\n\n                    return _context73.delegateYield(parsedCommentNode, \"t0\", 14);\n\n                  case 14:\n                    _context73.next = 17;\n                    break;\n\n                  case 16:\n                    return _context73.delegateYield(withIndent(parsedCommentNode), \"t1\", 17);\n\n                  case 17:\n                    lastNode = comment;\n\n                  case 18:\n                    _i2++;\n                    _context73.next = 8;\n                    break;\n\n                  case 21:\n                  case \"end\":\n                    return _context73.stop();\n                }\n              }\n            }, _marked63);\n          };\n\n          _marked63 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseTrailingCommentStatements);\n          startHeaderInfo = createInfo(\"switchCaseStartHeader\");\n          _context74.next = 6;\n          return startHeaderInfo;\n\n        case 6:\n          if (!(node.test == null)) {\n            _context74.next = 11;\n            break;\n          }\n\n          _context74.next = 9;\n          return \"default:\";\n\n        case 9:\n          _context74.next = 16;\n          break;\n\n        case 11:\n          _context74.next = 13;\n          return \"case \";\n\n        case 13:\n          return _context74.delegateYield(parseNode(node.test, context), \"t0\", 14);\n\n        case 14:\n          _context74.next = 16;\n          return \":\";\n\n        case 16:\n          return _context74.delegateYield(parseFirstLineTrailingComments(node, node.consequent, context), \"t1\", 17);\n\n        case 17:\n          if (!(node.consequent.length > 0)) {\n            _context74.next = 27;\n            break;\n          }\n\n          blockStatementBody = getBlockStatementBody();\n\n          if (!blockStatementBody) {\n            _context74.next = 24;\n            break;\n          }\n\n          return _context74.delegateYield(parseBraceSeparator({\n            bracePosition: context.config[\"switchCase.bracePosition\"],\n            bodyNode: blockStatementBody,\n            startHeaderInfo: startHeaderInfo,\n            context: context\n          }), \"t2\", 21);\n\n        case 21:\n          return _context74.delegateYield(parseNode(blockStatementBody, context), \"t3\", 22);\n\n        case 22:\n          _context74.next = 27;\n          break;\n\n        case 24:\n          _context74.next = 26;\n          return core.Signal.NewLine;\n\n        case 26:\n          return _context74.delegateYield(withIndent(parseStatementOrMembers({\n            items: node.consequent,\n            innerComments: node.innerComments,\n            lastNode: undefined,\n            context: context,\n            shouldUseBlankLine: function shouldUseBlankLine(previousNode, nextNode) {\n              return hasSeparatingBlankLine(previousNode, nextNode);\n            }\n          })), \"t4\", 27);\n\n        case 27:\n          return _context74.delegateYield(parseTrailingCommentStatements(), \"t5\", 28);\n\n        case 28:\n        case \"end\":\n          return _context74.stop();\n      }\n    }\n  }, _marked64);\n}\n\nfunction parseSwitchStatement(node, context) {\n  var startHeaderInfo;\n  return _regeneratorRuntime.wrap(function parseSwitchStatement$(_context75) {\n    while (1) {\n      switch (_context75.prev = _context75.next) {\n        case 0:\n          startHeaderInfo = createInfo(\"startHeader\");\n          _context75.next = 3;\n          return startHeaderInfo;\n\n        case 3:\n          _context75.next = 5;\n          return \"switch \";\n\n        case 5:\n          return _context75.delegateYield(parseNodeInParens({\n            firstInnerNode: node.discriminant,\n            innerIterable: parseNode(node.discriminant, context),\n            context: context\n          }), \"t0\", 6);\n\n        case 6:\n          return _context75.delegateYield(parseMemberedBody({\n            bracePosition: context.config[\"switchStatement.bracePosition\"],\n            context: context,\n            node: node,\n            members: node.cases,\n            startHeaderInfo: startHeaderInfo,\n            shouldUseBlankLine: function shouldUseBlankLine() {\n              return false;\n            }\n          }), \"t1\", 7);\n\n        case 7:\n        case \"end\":\n          return _context75.stop();\n      }\n    }\n  }, _marked65);\n}\n\nfunction parseThrowStatement(node, context) {\n  return _regeneratorRuntime.wrap(function parseThrowStatement$(_context76) {\n    while (1) {\n      switch (_context76.prev = _context76.next) {\n        case 0:\n          _context76.next = 2;\n          return \"throw \";\n\n        case 2:\n          return _context76.delegateYield(parseNode(node.argument, context), \"t0\", 3);\n\n        case 3:\n          if (!context.config[\"throwStatement.semiColon\"]) {\n            _context76.next = 6;\n            break;\n          }\n\n          _context76.next = 6;\n          return \";\";\n\n        case 6:\n        case \"end\":\n          return _context76.stop();\n      }\n    }\n  }, _marked66);\n}\n\nfunction parseTryStatement(node, context) {\n  return _regeneratorRuntime.wrap(function parseTryStatement$(_context77) {\n    while (1) {\n      switch (_context77.prev = _context77.next) {\n        case 0:\n          _context77.next = 2;\n          return \"try\";\n\n        case 2:\n          return _context77.delegateYield(parseBraceSeparator({\n            bracePosition: context.config[\"tryStatement.bracePosition\"],\n            bodyNode: node.block,\n            startHeaderInfo: undefined,\n            context: context\n          }), \"t0\", 3);\n\n        case 3:\n          return _context77.delegateYield(parseNode(node.block, context), \"t1\", 4);\n\n        case 4:\n          if (!(node.handler != null)) {\n            _context77.next = 7;\n            break;\n          }\n\n          return _context77.delegateYield(parseControlFlowSeparator(context.config[\"tryStatement.nextControlFlowPosition\"], node.handler, \"catch\", context), \"t2\", 6);\n\n        case 6:\n          return _context77.delegateYield(parseNode(node.handler, context), \"t3\", 7);\n\n        case 7:\n          if (!(node.finalizer != null)) {\n            _context77.next = 13;\n            break;\n          }\n\n          return _context77.delegateYield(parseControlFlowSeparator(context.config[\"tryStatement.nextControlFlowPosition\"], node.finalizer, \"finally\", context), \"t4\", 9);\n\n        case 9:\n          _context77.next = 11;\n          return \"finally\";\n\n        case 11:\n          return _context77.delegateYield(parseBraceSeparator({\n            bracePosition: context.config[\"tryStatement.bracePosition\"],\n            bodyNode: node.finalizer,\n            startHeaderInfo: undefined,\n            context: context\n          }), \"t5\", 12);\n\n        case 12:\n          return _context77.delegateYield(parseNode(node.finalizer, context), \"t6\", 13);\n\n        case 13:\n        case \"end\":\n          return _context77.stop();\n      }\n    }\n  }, _marked67);\n}\n\nfunction parseWhileStatement(node, context) {\n  var startHeaderInfo, endHeaderInfo;\n  return _regeneratorRuntime.wrap(function parseWhileStatement$(_context78) {\n    while (1) {\n      switch (_context78.prev = _context78.next) {\n        case 0:\n          startHeaderInfo = createInfo(\"startHeader\");\n          endHeaderInfo = createInfo(\"endHeader\");\n          _context78.next = 4;\n          return startHeaderInfo;\n\n        case 4:\n          _context78.next = 6;\n          return \"while\";\n\n        case 6:\n          if (!context.config[\"whileStatement.spaceAfterWhileKeyword\"]) {\n            _context78.next = 9;\n            break;\n          }\n\n          _context78.next = 9;\n          return \" \";\n\n        case 9:\n          return _context78.delegateYield(parseNodeInParens({\n            firstInnerNode: node.test,\n            innerIterable: parseNode(node.test, context),\n            context: context\n          }), \"t0\", 10);\n\n        case 10:\n          _context78.next = 12;\n          return endHeaderInfo;\n\n        case 12:\n          return _context78.delegateYield(parseConditionalBraceBody({\n            context: context,\n            parent: node,\n            bodyNode: node.body,\n            useBraces: context.config[\"whileStatement.useBraces\"],\n            bracePosition: context.config[\"whileStatement.bracePosition\"],\n            singleBodyPosition: context.config[\"whileStatement.singleBodyPosition\"],\n            requiresBracesCondition: undefined,\n            startHeaderInfo: startHeaderInfo,\n            endHeaderInfo: endHeaderInfo\n          }).iterator, \"t1\", 13);\n\n        case 13:\n        case \"end\":\n          return _context78.stop();\n      }\n    }\n  }, _marked68);\n}\n\nfunction parseCatchClause(node, context) {\n  var startHeaderInfo, endHeaderInfo;\n  return _regeneratorRuntime.wrap(function parseCatchClause$(_context79) {\n    while (1) {\n      switch (_context79.prev = _context79.next) {\n        case 0:\n          startHeaderInfo = createInfo(\"catchClauseHeaderStart\");\n          endHeaderInfo = createInfo(\"catchClauseHeaderEnd\");\n          _context79.next = 4;\n          return startHeaderInfo;\n\n        case 4:\n          _context79.next = 6;\n          return \"catch\";\n\n        case 6:\n          if (!(node.param != null)) {\n            _context79.next = 12;\n            break;\n          }\n\n          _context79.next = 9;\n          return \" (\";\n\n        case 9:\n          return _context79.delegateYield(parseNode(node.param, context), \"t0\", 10);\n\n        case 10:\n          _context79.next = 12;\n          return \")\";\n\n        case 12:\n          return _context79.delegateYield(parseConditionalBraceBody({\n            context: context,\n            parent: node,\n            bodyNode: node.body,\n            useBraces: \"always\",\n            requiresBracesCondition: undefined,\n            bracePosition: context.config[\"tryStatement.bracePosition\"],\n            startHeaderInfo: startHeaderInfo,\n            endHeaderInfo: endHeaderInfo\n          }).iterator, \"t1\", 13);\n\n        case 13:\n        case \"end\":\n          return _context79.stop();\n      }\n    }\n  }, _marked69);\n}\n\nfunction parseHeaderWithConditionalBraceBody(opts) {\n  var _marked70 =\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(parseHeader);\n\n  var context = opts.context,\n      parent = opts.parent,\n      bodyNode = opts.bodyNode,\n      requiresBracesCondition = opts.requiresBracesCondition,\n      useBraces = opts.useBraces,\n      bracePosition = opts.bracePosition,\n      singleBodyPosition = opts.singleBodyPosition;\n  var startHeaderInfo = createInfo(\"startHeader\");\n  var endHeaderInfo = createInfo(\"endHeader\");\n  var result = parseConditionalBraceBody({\n    context: context,\n    parent: parent,\n    bodyNode: bodyNode,\n    requiresBracesCondition: requiresBracesCondition,\n    useBraces: useBraces,\n    bracePosition: bracePosition,\n    singleBodyPosition: singleBodyPosition,\n    startHeaderInfo: startHeaderInfo,\n    endHeaderInfo: endHeaderInfo\n  });\n  return {\n    iterator:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee9() {\n      return _regeneratorRuntime.wrap(function _callee9$(_context80) {\n        while (1) {\n          switch (_context80.prev = _context80.next) {\n            case 0:\n              return _context80.delegateYield(parseHeader(), \"t0\", 1);\n\n            case 1:\n              return _context80.delegateYield(result.iterator, \"t1\", 2);\n\n            case 2:\n            case \"end\":\n              return _context80.stop();\n          }\n        }\n      }, _callee9);\n    })(),\n    braceCondition: result.braceCondition\n  };\n\n  function parseHeader() {\n    return _regeneratorRuntime.wrap(function parseHeader$(_context81) {\n      while (1) {\n        switch (_context81.prev = _context81.next) {\n          case 0:\n            _context81.next = 2;\n            return startHeaderInfo;\n\n          case 2:\n            return _context81.delegateYield(opts.parseHeader(), \"t0\", 3);\n\n          case 3:\n            _context81.next = 5;\n            return endHeaderInfo;\n\n          case 5:\n          case \"end\":\n            return _context81.stop();\n        }\n      }\n    }, _marked70);\n  }\n}\n\nfunction parseConditionalBraceBody(opts) {\n  var _marked72 =\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(parseBody),\n      _marked74 =\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(getHeaderTrailingComments);\n\n  var startHeaderInfo = opts.startHeaderInfo,\n      endHeaderInfo = opts.endHeaderInfo,\n      parent = opts.parent,\n      bodyNode = opts.bodyNode,\n      context = opts.context,\n      requiresBracesCondition = opts.requiresBracesCondition,\n      useBraces = opts.useBraces,\n      bracePosition = opts.bracePosition,\n      singleBodyPosition = opts.singleBodyPosition,\n      headerStartToken = opts.headerStartToken;\n  var startStatementsInfo = createInfo(\"startStatements\");\n  var endStatementsInfo = createInfo(\"endStatements\");\n  var headerTrailingComments = Array.from(getHeaderTrailingComments());\n  var openBraceCondition = {\n    kind: core.PrintItemKind.Condition,\n    name: \"openBrace\",\n    condition: function condition(conditionContext) {\n      if (useBraces === \"whenNotSingleLine\") return conditionContext.getResolvedCondition(newlineOrSpaceCondition);else if (useBraces === \"maintain\") return bodyNode.type === \"BlockStatement\";else if (useBraces === \"always\") return true;else if (useBraces === \"preferNone\") {\n        return bodyShouldBeMultiLine() || startHeaderInfo && endHeaderInfo && core.conditionResolvers.isMultipleLines(conditionContext, startHeaderInfo, endHeaderInfo, false) || core.conditionResolvers.isMultipleLines(conditionContext, startStatementsInfo, endStatementsInfo, false) || requiresBracesCondition && conditionContext.getResolvedCondition(requiresBracesCondition);\n      } else {\n        return assertNever(useBraces);\n      }\n    },\n    true:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee10() {\n      return _regeneratorRuntime.wrap(function _callee10$(_context82) {\n        while (1) {\n          switch (_context82.prev = _context82.next) {\n            case 0:\n              return _context82.delegateYield(parseBraceSeparator({\n                bracePosition: bracePosition,\n                bodyNode: bodyNode,\n                startHeaderInfo: startHeaderInfo,\n                context: context\n              }), \"t0\", 1);\n\n            case 1:\n              _context82.next = 3;\n              return \"{\";\n\n            case 3:\n            case \"end\":\n              return _context82.stop();\n          }\n        }\n      }, _callee10);\n    })()\n  };\n  var newlineOrSpaceCondition = {\n    kind: core.PrintItemKind.Condition,\n    name: \"newlineOrSpaceCondition\",\n    condition: function condition(conditionContext) {\n      if (shouldUseNewline()) return true;\n      if (startHeaderInfo == null) return throwError(\"Expected start header info in this scenario.\");\n      var resolvedStartInfo = conditionContext.getResolvedInfo(startHeaderInfo);\n      if (resolvedStartInfo.lineNumber < conditionContext.writerInfo.lineNumber) return true;\n      var resolvedEndStatementsInfo = conditionContext.getResolvedInfo(endStatementsInfo);\n      if (resolvedEndStatementsInfo == null) return undefined;\n      return resolvedEndStatementsInfo.lineNumber > resolvedStartInfo.lineNumber;\n\n      function shouldUseNewline() {\n        if (bodyShouldBeMultiLine()) return true;\n        if (singleBodyPosition == null) return true;\n\n        switch (singleBodyPosition) {\n          case \"maintain\":\n            return getBodyStatementStartLine() > getHeaderStartLine();\n\n          case \"nextLine\":\n            return true;\n\n          case \"sameLine\":\n            if (bodyNode.type === \"BlockStatement\") {\n              if (bodyNode.body.length !== 1) return true;\n              return getBodyStatementStartLine() > getHeaderStartLine();\n            }\n\n            return false;\n\n          default:\n            return assertNever(singleBodyPosition);\n        }\n\n        function getHeaderStartLine() {\n          return (headerStartToken || parent).loc.start.line;\n        }\n\n        function getBodyStatementStartLine() {\n          if (bodyNode.type === \"BlockStatement\") {\n            var firstStatement = bodyNode.body[0];\n            if (firstStatement) return firstStatement && firstStatement.loc.start.line;\n          }\n\n          return bodyNode.loc.start.line;\n        }\n      }\n    },\n    true: [core.Signal.NewLine],\n    false: [\" \"]\n  };\n  return {\n    braceCondition: openBraceCondition,\n    iterator: parseBody()\n  };\n\n  function parseBody() {\n    var _marked71, parseHeaderTrailingComment;\n\n    return _regeneratorRuntime.wrap(function parseBody$(_context86) {\n      while (1) {\n        switch (_context86.prev = _context86.next) {\n          case 0:\n            parseHeaderTrailingComment = function _ref36() {\n              var result;\n              return _regeneratorRuntime.wrap(function parseHeaderTrailingComment$(_context85) {\n                while (1) {\n                  switch (_context85.prev = _context85.next) {\n                    case 0:\n                      result = parseCommentCollection(headerTrailingComments, undefined, context);\n                      return _context85.delegateYield(prependToIterableIfHasItems(result, \" \"), \"t0\", 2);\n\n                    case 2:\n                    case \"end\":\n                      return _context85.stop();\n                  }\n                }\n              }, _marked71);\n            };\n\n            _marked71 =\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(parseHeaderTrailingComment);\n            _context86.next = 4;\n            return openBraceCondition;\n\n          case 4:\n            return _context86.delegateYield(parseHeaderTrailingComment(), \"t0\", 5);\n\n          case 5:\n            _context86.next = 7;\n            return newlineOrSpaceCondition;\n\n          case 7:\n            _context86.next = 9;\n            return startStatementsInfo;\n\n          case 9:\n            if (!(bodyNode.type === \"BlockStatement\")) {\n              _context86.next = 14;\n              break;\n            }\n\n            return _context86.delegateYield(withIndent(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee11() {\n              return _regeneratorRuntime.wrap(function _callee11$(_context83) {\n                while (1) {\n                  switch (_context83.prev = _context83.next) {\n                    case 0:\n                      return _context83.delegateYield(parseLeadingComments(bodyNode, context), \"t0\", 1);\n\n                    case 1:\n                      return _context83.delegateYield(parseStatements(bodyNode, context), \"t1\", 2);\n\n                    case 2:\n                    case \"end\":\n                      return _context83.stop();\n                  }\n                }\n              }, _callee11);\n            })()), \"t1\", 11);\n\n          case 11:\n            return _context86.delegateYield(parseTrailingComments(bodyNode, context), \"t2\", 12);\n\n          case 12:\n            _context86.next = 15;\n            break;\n\n          case 14:\n            return _context86.delegateYield(withIndent(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee12() {\n              return _regeneratorRuntime.wrap(function _callee12$(_context84) {\n                while (1) {\n                  switch (_context84.prev = _context84.next) {\n                    case 0:\n                      return _context84.delegateYield(parseNode(bodyNode, context), \"t0\", 1);\n\n                    case 1:\n                      if (!(bodyNode.end === parent.end)) {\n                        _context84.next = 3;\n                        break;\n                      }\n\n                      return _context84.delegateYield(parseTrailingComments(parent, context), \"t1\", 3);\n\n                    case 3:\n                    case \"end\":\n                      return _context84.stop();\n                  }\n                }\n              }, _callee12);\n            })()), \"t3\", 15);\n\n          case 15:\n            _context86.next = 17;\n            return endStatementsInfo;\n\n          case 17:\n            _context86.next = 19;\n            return {\n              kind: core.PrintItemKind.Condition,\n              name: \"closeBrace\",\n              condition: openBraceCondition,\n              true: [{\n                kind: core.PrintItemKind.Condition,\n                name: \"closeBraceNewLine\",\n                condition: function condition(conditionContext) {\n                  if (!conditionContext.getResolvedCondition(newlineOrSpaceCondition)) return false;\n                  return !core.conditionResolvers.areInfoEqual(conditionContext, startStatementsInfo, endStatementsInfo, false);\n                },\n                true: [core.Signal.NewLine],\n                false: [{\n                  kind: core.PrintItemKind.Condition,\n                  name: \"closeBraceSpace\",\n                  condition: function condition(conditionContext) {\n                    return !conditionContext.getResolvedCondition(newlineOrSpaceCondition);\n                  },\n                  true: \" \"\n                }]\n              }, \"}\"]\n            };\n\n          case 19:\n          case \"end\":\n            return _context86.stop();\n        }\n      }\n    }, _marked72);\n  }\n\n  function bodyShouldBeMultiLine() {\n    if (bodyNode.type === \"BlockStatement\") {\n      if (bodyNode.body.length === 1 && !hasLeadingCommentOnDifferentLine(bodyNode.body[0], headerTrailingComments)) return false;\n      return true;\n    }\n\n    return hasLeadingCommentOnDifferentLine(bodyNode, headerTrailingComments);\n  }\n\n  function getHeaderTrailingComments() {\n    var _marked73, commentLine, lastHeaderToken, _iteratorNormalCompletion6, _didIteratorError6, _iteratorError6, _iterator6, _step6, comment, checkComments;\n\n    return _regeneratorRuntime.wrap(function getHeaderTrailingComments$(_context88) {\n      while (1) {\n        switch (_context88.prev = _context88.next) {\n          case 0:\n            checkComments = function _ref37(comments) {\n              var _iteratorNormalCompletion7, _didIteratorError7, _iteratorError7, _iterator7, _step7, _comment;\n\n              return _regeneratorRuntime.wrap(function checkComments$(_context87) {\n                while (1) {\n                  switch (_context87.prev = _context87.next) {\n                    case 0:\n                      if (!(comments == null)) {\n                        _context87.next = 2;\n                        break;\n                      }\n\n                      return _context87.abrupt(\"return\");\n\n                    case 2:\n                      _iteratorNormalCompletion7 = true;\n                      _didIteratorError7 = false;\n                      _iteratorError7 = undefined;\n                      _context87.prev = 5;\n                      _iterator7 = comments[Symbol.iterator]();\n\n                    case 7:\n                      if (_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done) {\n                        _context87.next = 15;\n                        break;\n                      }\n\n                      _comment = _step7.value;\n\n                      if (!(_comment.loc.start.line === bodyNode.loc.start.line)) {\n                        _context87.next = 12;\n                        break;\n                      }\n\n                      _context87.next = 12;\n                      return _comment;\n\n                    case 12:\n                      _iteratorNormalCompletion7 = true;\n                      _context87.next = 7;\n                      break;\n\n                    case 15:\n                      _context87.next = 21;\n                      break;\n\n                    case 17:\n                      _context87.prev = 17;\n                      _context87.t0 = _context87[\"catch\"](5);\n                      _didIteratorError7 = true;\n                      _iteratorError7 = _context87.t0;\n\n                    case 21:\n                      _context87.prev = 21;\n                      _context87.prev = 22;\n\n                      if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n                        _iterator7.return();\n                      }\n\n                    case 24:\n                      _context87.prev = 24;\n\n                      if (!_didIteratorError7) {\n                        _context87.next = 27;\n                        break;\n                      }\n\n                      throw _iteratorError7;\n\n                    case 27:\n                      return _context87.finish(24);\n\n                    case 28:\n                      return _context87.finish(21);\n\n                    case 29:\n                    case \"end\":\n                      return _context87.stop();\n                  }\n                }\n              }, _marked73, null, [[5, 17, 21, 29], [22,, 24, 28]]);\n            };\n\n            _marked73 =\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(checkComments);\n\n            if (!(bodyNode.type === \"BlockStatement\")) {\n              _context88.next = 17;\n              break;\n            }\n\n            if (!(bodyNode.leadingComments != null)) {\n              _context88.next = 9;\n              break;\n            }\n\n            commentLine = bodyNode.leadingComments.find(function (c) {\n              return c.type === \"CommentLine\";\n            });\n\n            if (!commentLine) {\n              _context88.next = 9;\n              break;\n            }\n\n            _context88.next = 8;\n            return commentLine;\n\n          case 8:\n            return _context88.abrupt(\"return\");\n\n          case 9:\n            if (!(bodyNode.body.length > 0)) {\n              _context88.next = 13;\n              break;\n            }\n\n            return _context88.delegateYield(checkComments(bodyNode.body[0].leadingComments), \"t0\", 11);\n\n          case 11:\n            _context88.next = 15;\n            break;\n\n          case 13:\n            if (!bodyNode.innerComments) {\n              _context88.next = 15;\n              break;\n            }\n\n            return _context88.delegateYield(checkComments(bodyNode.innerComments), \"t1\", 15);\n\n          case 15:\n            _context88.next = 46;\n            break;\n\n          case 17:\n            if (!(bodyNode.leadingComments && bodyNode.leadingComments.length > 0)) {\n              _context88.next = 46;\n              break;\n            }\n\n            lastHeaderToken = getFirstNonCommentTokenBefore(bodyNode, context);\n            _iteratorNormalCompletion6 = true;\n            _didIteratorError6 = false;\n            _iteratorError6 = undefined;\n            _context88.prev = 22;\n            _iterator6 = bodyNode.leadingComments[Symbol.iterator]();\n\n          case 24:\n            if (_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done) {\n              _context88.next = 32;\n              break;\n            }\n\n            comment = _step6.value;\n\n            if (!(comment.loc.start.line <= lastHeaderToken.loc.end.line)) {\n              _context88.next = 29;\n              break;\n            }\n\n            _context88.next = 29;\n            return comment;\n\n          case 29:\n            _iteratorNormalCompletion6 = true;\n            _context88.next = 24;\n            break;\n\n          case 32:\n            _context88.next = 38;\n            break;\n\n          case 34:\n            _context88.prev = 34;\n            _context88.t2 = _context88[\"catch\"](22);\n            _didIteratorError6 = true;\n            _iteratorError6 = _context88.t2;\n\n          case 38:\n            _context88.prev = 38;\n            _context88.prev = 39;\n\n            if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n              _iterator6.return();\n            }\n\n          case 41:\n            _context88.prev = 41;\n\n            if (!_didIteratorError6) {\n              _context88.next = 44;\n              break;\n            }\n\n            throw _iteratorError6;\n\n          case 44:\n            return _context88.finish(41);\n\n          case 45:\n            return _context88.finish(38);\n\n          case 46:\n          case \"end\":\n            return _context88.stop();\n        }\n      }\n    }, _marked74, null, [[22, 34, 38, 46], [39,, 41, 45]]);\n  }\n}\n\nfunction parseArrayPattern(node, context) {\n  return _regeneratorRuntime.wrap(function parseArrayPattern$(_context89) {\n    while (1) {\n      switch (_context89.prev = _context89.next) {\n        case 0:\n          return _context89.delegateYield(parseArrayLikeNodes({\n            node: node,\n            elements: node.elements,\n            trailingCommas: context.config[\"arrayPattern.trailingCommas\"],\n            context: context\n          }), \"t0\", 1);\n\n        case 1:\n          return _context89.delegateYield(parseTypeAnnotationWithColonIfExists(node.typeAnnotation, context), \"t1\", 2);\n\n        case 2:\n        case \"end\":\n          return _context89.stop();\n      }\n    }\n  }, _marked75);\n}\n\nfunction parseArrayExpression(node, context) {\n  return _regeneratorRuntime.wrap(function parseArrayExpression$(_context90) {\n    while (1) {\n      switch (_context90.prev = _context90.next) {\n        case 0:\n          return _context90.delegateYield(parseArrayLikeNodes({\n            node: node,\n            elements: node.elements,\n            trailingCommas: context.config[\"arrayExpression.trailingCommas\"],\n            context: context\n          }), \"t0\", 1);\n\n        case 1:\n        case \"end\":\n          return _context90.stop();\n      }\n    }\n  }, _marked76);\n}\n\nfunction parseArrowFunctionExpression(node, context) {\n  var headerStartInfo, shouldUseParens, hasParentheses;\n  return _regeneratorRuntime.wrap(function parseArrowFunctionExpression$(_context91) {\n    while (1) {\n      switch (_context91.prev = _context91.next) {\n        case 0:\n          hasParentheses = function _ref39() {\n            if (node.params.length !== 1) return true;\n            return context.tokenFinder.isFirstTokenInNodeMatch(node, \"(\");\n          };\n\n          shouldUseParens = function _ref38() {\n            var firstParam = node.params[0];\n            var requiresParens = node.params.length !== 1 || node.returnType || firstParam.type !== \"Identifier\" || firstParam.typeAnnotation != null;\n            if (requiresParens) return true;\n            var configSetting = context.config[\"arrowFunctionExpression.useParentheses\"];\n            if (configSetting === \"force\") return true;else if (configSetting === \"maintain\") return hasParentheses();else if (configSetting === \"preferNone\") return false;else return assertNever(configSetting);\n          };\n\n          headerStartInfo = createInfo(\"functionExpressionHeaderStart\");\n          _context91.next = 5;\n          return headerStartInfo;\n\n        case 5:\n          if (!node.async) {\n            _context91.next = 8;\n            break;\n          }\n\n          _context91.next = 8;\n          return \"async \";\n\n        case 8:\n          return _context91.delegateYield(parseNode(node.typeParameters, context), \"t0\", 9);\n\n        case 9:\n          if (!shouldUseParens()) {\n            _context91.next = 13;\n            break;\n          }\n\n          return _context91.delegateYield(parseParametersOrArguments({\n            nodes: node.params,\n            context: context,\n            forceMultiLineWhenMultipleLines: context.config[\"arrowFunctionExpression.forceMultiLineParameters\"],\n            customCloseParen: parseCloseParenWithType({\n              context: context,\n              startInfo: headerStartInfo,\n              typeNode: node.returnType\n            })\n          }), \"t1\", 11);\n\n        case 11:\n          _context91.next = 14;\n          break;\n\n        case 13:\n          return _context91.delegateYield(parseNode(node.params[0], context), \"t2\", 14);\n\n        case 14:\n          _context91.next = 16;\n          return \" =>\";\n\n        case 16:\n          return _context91.delegateYield(parseBraceSeparator({\n            bracePosition: context.config[\"arrowFunctionExpression.bracePosition\"],\n            bodyNode: node.body,\n            startHeaderInfo: headerStartInfo,\n            context: context\n          }), \"t3\", 17);\n\n        case 17:\n          return _context91.delegateYield(parseNode(node.body, context), \"t4\", 18);\n\n        case 18:\n        case \"end\":\n          return _context91.stop();\n      }\n    }\n  }, _marked77);\n}\n\nfunction parseAsExpression(node, context) {\n  return _regeneratorRuntime.wrap(function parseAsExpression$(_context92) {\n    while (1) {\n      switch (_context92.prev = _context92.next) {\n        case 0:\n          return _context92.delegateYield(parseNode(node.expression, context), \"t0\", 1);\n\n        case 1:\n          _context92.next = 3;\n          return \" as \";\n\n        case 3:\n          return _context92.delegateYield(core.conditions.withIndentIfStartOfLineIndented(parseNode(node.typeAnnotation, context)), \"t1\", 4);\n\n        case 4:\n        case \"end\":\n          return _context92.stop();\n      }\n    }\n  }, _marked78);\n}\n\nfunction parseAssignmentExpression(node, context) {\n  return _regeneratorRuntime.wrap(function parseAssignmentExpression$(_context93) {\n    while (1) {\n      switch (_context93.prev = _context93.next) {\n        case 0:\n          return _context93.delegateYield(parseNode(node.left, context), \"t0\", 1);\n\n        case 1:\n          _context93.next = 3;\n          return \" \".concat(node.operator, \" \");\n\n        case 3:\n          return _context93.delegateYield(core.conditions.withIndentIfStartOfLineIndented(parseNode(node.right, context)), \"t1\", 4);\n\n        case 4:\n        case \"end\":\n          return _context93.stop();\n      }\n    }\n  }, _marked79);\n}\n\nfunction parseAssignmentPattern(node, context) {\n  return _regeneratorRuntime.wrap(function parseAssignmentPattern$(_context96) {\n    while (1) {\n      switch (_context96.prev = _context96.next) {\n        case 0:\n          return _context96.delegateYield(newlineGroup(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee14() {\n            return _regeneratorRuntime.wrap(function _callee14$(_context95) {\n              while (1) {\n                switch (_context95.prev = _context95.next) {\n                  case 0:\n                    return _context95.delegateYield(parseNode(node.left, context), \"t0\", 1);\n\n                  case 1:\n                    _context95.next = 3;\n                    return core.Signal.SpaceOrNewLine;\n\n                  case 3:\n                    return _context95.delegateYield(core.conditions.indentIfStartOfLine(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee13() {\n                      return _regeneratorRuntime.wrap(function _callee13$(_context94) {\n                        while (1) {\n                          switch (_context94.prev = _context94.next) {\n                            case 0:\n                              _context94.next = 2;\n                              return \"= \";\n\n                            case 2:\n                              return _context94.delegateYield(parseNode(node.right, context), \"t0\", 3);\n\n                            case 3:\n                            case \"end\":\n                              return _context94.stop();\n                          }\n                        }\n                      }, _callee13);\n                    })()), \"t1\", 4);\n\n                  case 4:\n                  case \"end\":\n                    return _context95.stop();\n                }\n              }\n            }, _callee14);\n          })()), \"t0\", 1);\n\n        case 1:\n        case \"end\":\n          return _context96.stop();\n      }\n    }\n  }, _marked80);\n}\n\nfunction parseAwaitExpression(node, context) {\n  return _regeneratorRuntime.wrap(function parseAwaitExpression$(_context97) {\n    while (1) {\n      switch (_context97.prev = _context97.next) {\n        case 0:\n          _context97.next = 2;\n          return \"await \";\n\n        case 2:\n          return _context97.delegateYield(parseNode(node.argument, context), \"t0\", 3);\n\n        case 3:\n        case \"end\":\n          return _context97.stop();\n      }\n    }\n  }, _marked81);\n}\n\nfunction parseBinaryOrLogicalExpression(node, context) {\n  var _marked83, useSpaceSurroundingOperator, topMostExpr, isTopMost, topMostInfo, innerParse, indentIfNecessary, getTopMostBinaryOrLogicalExpression, getOrSetTopMostInfo, isBinaryOrLogicalExpression, isExpressionBreakable, getUseSpaceSurroundingOperator;\n\n  return _regeneratorRuntime.wrap(function parseBinaryOrLogicalExpression$(_context103) {\n    while (1) {\n      switch (_context103.prev = _context103.next) {\n        case 0:\n          getUseSpaceSurroundingOperator = function _ref49() {\n            switch (node.type) {\n              case \"BinaryExpression\":\n                return context.config[\"binaryExpression.spaceSurroundingOperator\"];\n\n              case \"LogicalExpression\":\n                return true;\n\n              default:\n                return assertNever(node);\n            }\n          };\n\n          isExpressionBreakable = function _ref48(expr) {\n            switch (expr.operator) {\n              case \"&&\":\n              case \"||\":\n              case \"+\":\n              case \"-\":\n              case \"*\":\n              case \"/\":\n                return true;\n\n              default:\n                return false;\n            }\n          };\n\n          isBinaryOrLogicalExpression = function _ref47(node) {\n            return node.type === \"BinaryExpression\" || node.type === \"LogicalExpression\";\n          };\n\n          getOrSetTopMostInfo = function _ref46() {\n            if (isTopMost) {\n              var allowIndent = context.bag.take(BAG_KEYS.DisableIndentBool) == null;\n              var info = allowIndent ? createInfo(\"topBinaryOrLogicalExpressionStart\") : false;\n              context.topBinaryOrLogicalExpressionInfos.set(topMostExpr, info);\n              return info;\n            } else {\n              return context.topBinaryOrLogicalExpressionInfos.get(topMostExpr);\n            }\n          };\n\n          getTopMostBinaryOrLogicalExpression = function _ref45() {\n            var topMost = node;\n\n            for (var i = context.parentStack.length - 1; i >= 0; i--) {\n              if (hasParentheses(topMost)) break;\n              var ancestor = context.parentStack[i];\n              if (!isBinaryOrLogicalExpression(ancestor)) break;\n              topMost = ancestor;\n            }\n\n            return topMost;\n          };\n\n          indentIfNecessary = function _ref44(currentNode, iterable) {\n            iterable = core.makeIterableRepeatable(iterable);\n            return {\n              kind: core.PrintItemKind.Condition,\n              name: \"indentIfNecessaryForBinaryAndLogicalExpressions\",\n              condition: function condition(conditionContext) {\n                if (topMostInfo === false) return false;\n                if (getStartOrParenStart(topMostExpr) === getStartOrParenStart(currentNode)) return false;\n                var resolvedTopMostInfo = conditionContext.getResolvedInfo(topMostInfo);\n                var isSameIndent = resolvedTopMostInfo.indentLevel === conditionContext.writerInfo.indentLevel;\n                return isSameIndent && core.conditionResolvers.isStartOfNewLine(conditionContext);\n              },\n              true: withIndent(iterable),\n              false: iterable\n            };\n          };\n\n          innerParse = function _ref43() {\n            var _marked82, operatorPosition, useNewLines, getUseNewLines, newlineGroupIfNecessary, getOperatorPosition;\n\n            return _regeneratorRuntime.wrap(function innerParse$(_context102) {\n              while (1) {\n                switch (_context102.prev = _context102.next) {\n                  case 0:\n                    getOperatorPosition = function _ref42() {\n                      var configValue = getConfigValue();\n\n                      switch (configValue) {\n                        case \"nextLine\":\n                        case \"sameLine\":\n                          return configValue;\n\n                        case \"maintain\":\n                          var operatorToken = context.tokenFinder.getFirstTokenAfter(node.left, node.operator);\n                          return node.left.loc.end.line === operatorToken.loc.start.line ? \"sameLine\" : \"nextLine\";\n\n                        default:\n                          return assertNever(configValue);\n                      }\n\n                      function getConfigValue() {\n                        switch (node.type) {\n                          case \"BinaryExpression\":\n                            return context.config[\"binaryExpression.operatorPosition\"];\n\n                          case \"LogicalExpression\":\n                            return context.config[\"logicalExpression.operatorPosition\"];\n\n                          default:\n                            return assertNever(node);\n                        }\n                      }\n                    };\n\n                    newlineGroupIfNecessary = function _ref41(expression, iterable) {\n                      return _regeneratorRuntime.wrap(function newlineGroupIfNecessary$(_context101) {\n                        while (1) {\n                          switch (_context101.prev = _context101.next) {\n                            case 0:\n                              if (isBinaryOrLogicalExpression(expression)) {\n                                _context101.next = 4;\n                                break;\n                              }\n\n                              return _context101.delegateYield(newlineGroup(iterable), \"t0\", 2);\n\n                            case 2:\n                              _context101.next = 5;\n                              break;\n\n                            case 4:\n                              return _context101.delegateYield(iterable, \"t1\", 5);\n\n                            case 5:\n                            case \"end\":\n                              return _context101.stop();\n                          }\n                        }\n                      }, _marked82);\n                    };\n\n                    getUseNewLines = function _ref40() {\n                      return getUseNewlinesForNodes([getLeftNode(), getRightNode()]);\n\n                      function getLeftNode() {\n                        var hasParentheses$1 = hasParentheses(node.left);\n                        return hasParentheses$1 ? getFirstCloseParenTokenAfter(node.left, context) : node.left;\n                      }\n\n                      function getRightNode() {\n                        var hasParentheses$1 = hasParentheses(node.right);\n                        return hasParentheses$1 ? getFirstOpenParenTokenBefore(node.right, context) : node.right;\n                      }\n                    };\n\n                    _marked82 =\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(newlineGroupIfNecessary);\n                    operatorPosition = getOperatorPosition();\n                    useNewLines = getUseNewLines();\n                    _context102.next = 8;\n                    return indentIfNecessary(node.left, newlineGroupIfNecessary(node.left, parseNode(node.left, context, {\n                      innerParse:\n                      /*#__PURE__*/\n                      _regeneratorRuntime.mark(function innerParse(iterable) {\n                        return _regeneratorRuntime.wrap(function innerParse$(_context98) {\n                          while (1) {\n                            switch (_context98.prev = _context98.next) {\n                              case 0:\n                                return _context98.delegateYield(iterable, \"t0\", 1);\n\n                              case 1:\n                                if (!(operatorPosition === \"sameLine\")) {\n                                  _context98.next = 7;\n                                  break;\n                                }\n\n                                if (!useSpaceSurroundingOperator) {\n                                  _context98.next = 5;\n                                  break;\n                                }\n\n                                _context98.next = 5;\n                                return \" \";\n\n                              case 5:\n                                _context98.next = 7;\n                                return node.operator;\n\n                              case 7:\n                              case \"end\":\n                                return _context98.stop();\n                            }\n                          }\n                        }, innerParse);\n                      })\n                    })));\n\n                  case 8:\n                    return _context102.delegateYield(parseCommentsAsTrailing(node.left, node.right.leadingComments, context), \"t0\", 9);\n\n                  case 9:\n                    if (!useNewLines) {\n                      _context102.next = 14;\n                      break;\n                    }\n\n                    _context102.next = 12;\n                    return core.Signal.NewLine;\n\n                  case 12:\n                    _context102.next = 21;\n                    break;\n\n                  case 14:\n                    if (!useSpaceSurroundingOperator) {\n                      _context102.next = 19;\n                      break;\n                    }\n\n                    _context102.next = 17;\n                    return core.Signal.SpaceOrNewLine;\n\n                  case 17:\n                    _context102.next = 21;\n                    break;\n\n                  case 19:\n                    _context102.next = 21;\n                    return core.Signal.PossibleNewLine;\n\n                  case 21:\n                    _context102.next = 23;\n                    return indentIfNecessary(node.right,\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee15() {\n                      return _regeneratorRuntime.wrap(function _callee15$(_context100) {\n                        while (1) {\n                          switch (_context100.prev = _context100.next) {\n                            case 0:\n                              return _context100.delegateYield(parseCommentsAsLeading(node, node.left.trailingComments, context), \"t0\", 1);\n\n                            case 1:\n                              return _context100.delegateYield(parseNode(node.right, context, {\n                                innerParse:\n                                /*#__PURE__*/\n                                _regeneratorRuntime.mark(function innerParse(iterable) {\n                                  return _regeneratorRuntime.wrap(function innerParse$(_context99) {\n                                    while (1) {\n                                      switch (_context99.prev = _context99.next) {\n                                        case 0:\n                                          if (!(operatorPosition === \"nextLine\")) {\n                                            _context99.next = 6;\n                                            break;\n                                          }\n\n                                          _context99.next = 3;\n                                          return node.operator;\n\n                                        case 3:\n                                          if (!useSpaceSurroundingOperator) {\n                                            _context99.next = 6;\n                                            break;\n                                          }\n\n                                          _context99.next = 6;\n                                          return \" \";\n\n                                        case 6:\n                                          return _context99.delegateYield(newlineGroupIfNecessary(node.right, iterable), \"t0\", 7);\n\n                                        case 7:\n                                        case \"end\":\n                                          return _context99.stop();\n                                      }\n                                    }\n                                  }, innerParse);\n                                })\n                              }), \"t1\", 2);\n\n                            case 2:\n                            case \"end\":\n                              return _context100.stop();\n                          }\n                        }\n                      }, _callee15);\n                    })());\n\n                  case 23:\n                  case \"end\":\n                    return _context102.stop();\n                }\n              }\n            }, _marked83);\n          };\n\n          _marked83 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(innerParse);\n          useSpaceSurroundingOperator = getUseSpaceSurroundingOperator();\n          topMostExpr = getTopMostBinaryOrLogicalExpression();\n          isTopMost = topMostExpr === node;\n          topMostInfo = getOrSetTopMostInfo();\n\n          if (!(isTopMost && topMostInfo !== false)) {\n            _context103.next = 15;\n            break;\n          }\n\n          _context103.next = 15;\n          return topMostInfo;\n\n        case 15:\n          return _context103.delegateYield(isExpressionBreakable(node) ? innerParse() : newlineGroup(innerParse()), \"t0\", 16);\n\n        case 16:\n        case \"end\":\n          return _context103.stop();\n      }\n    }\n  }, _marked84);\n}\n\nfunction parseExpressionWithTypeArguments(node, context) {\n  return _regeneratorRuntime.wrap(function parseExpressionWithTypeArguments$(_context104) {\n    while (1) {\n      switch (_context104.prev = _context104.next) {\n        case 0:\n          return _context104.delegateYield(parseNode(node.expression, context), \"t0\", 1);\n\n        case 1:\n          return _context104.delegateYield(parseNode(node.typeParameters, context), \"t1\", 2);\n\n        case 2:\n        case \"end\":\n          return _context104.stop();\n      }\n    }\n  }, _marked85);\n}\n\nfunction parseExternalModuleReference(node, context) {\n  return _regeneratorRuntime.wrap(function parseExternalModuleReference$(_context105) {\n    while (1) {\n      switch (_context105.prev = _context105.next) {\n        case 0:\n          _context105.next = 2;\n          return \"require(\";\n\n        case 2:\n          return _context105.delegateYield(parseNode(node.expression, context), \"t0\", 3);\n\n        case 3:\n          _context105.next = 5;\n          return \")\";\n\n        case 5:\n        case \"end\":\n          return _context105.stop();\n      }\n    }\n  }, _marked86);\n}\n\nfunction parseCallExpression(node, context) {\n  var _marked87, _marked91, innerParseCallExpression, parseTestLibraryCallExpression, isTestLibraryCallExpression;\n\n  return _regeneratorRuntime.wrap(function parseCallExpression$(_context112) {\n    while (1) {\n      switch (_context112.prev = _context112.next) {\n        case 0:\n          isTestLibraryCallExpression = function _ref55() {\n            if (node.arguments.length !== 2 || node.typeArguments != null || node.optional) return false;\n            if (!isValidCallee()) return false;\n            if (node.arguments[0].type !== \"StringLiteral\" && node.arguments[0].type !== \"TemplateLiteral\") return false;\n            if (node.arguments[1].type !== \"FunctionExpression\" && node.arguments[1].type !== \"ArrowFunctionExpression\") return false;\n            return node.loc.start.line === node.arguments[1].loc.start.line;\n\n            function isValidCallee() {\n              var identifier = getIdentifier();\n              if (identifier == null) return false;\n\n              switch (identifier.name) {\n                case \"it\":\n                case \"describe\":\n                  return true;\n\n                default:\n                  return false;\n              }\n\n              function getIdentifier() {\n                if (node.callee.type === \"Identifier\") return node.callee;\n\n                if (node.callee.type === \"MemberExpression\" && node.callee.object.type === \"Identifier\" && node.callee.property.type === \"Identifier\") {\n                  return node.callee.object;\n                }\n\n                return undefined;\n              }\n            }\n          };\n\n          parseTestLibraryCallExpression = function _ref54() {\n            var _marked88, _marked89, _marked90, parseTestLibraryCallee, parseTestLibraryArguments, stripSignals;\n\n            return _regeneratorRuntime.wrap(function parseTestLibraryCallExpression$(_context111) {\n              while (1) {\n                switch (_context111.prev = _context111.next) {\n                  case 0:\n                    stripSignals = function _ref52(iterator) {\n                      var _iteratorNormalCompletion8, _didIteratorError8, _iteratorError8, _iterator8, _step8, item;\n\n                      return _regeneratorRuntime.wrap(function stripSignals$(_context110) {\n                        while (1) {\n                          switch (_context110.prev = _context110.next) {\n                            case 0:\n                              _iteratorNormalCompletion8 = true;\n                              _didIteratorError8 = false;\n                              _iteratorError8 = undefined;\n                              _context110.prev = 3;\n                              _iterator8 = iterator[Symbol.iterator]();\n\n                            case 5:\n                              if (_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done) {\n                                _context110.next = 13;\n                                break;\n                              }\n\n                              item = _step8.value;\n\n                              if (!(typeof item !== \"number\")) {\n                                _context110.next = 10;\n                                break;\n                              }\n\n                              _context110.next = 10;\n                              return item;\n\n                            case 10:\n                              _iteratorNormalCompletion8 = true;\n                              _context110.next = 5;\n                              break;\n\n                            case 13:\n                              _context110.next = 19;\n                              break;\n\n                            case 15:\n                              _context110.prev = 15;\n                              _context110.t0 = _context110[\"catch\"](3);\n                              _didIteratorError8 = true;\n                              _iteratorError8 = _context110.t0;\n\n                            case 19:\n                              _context110.prev = 19;\n                              _context110.prev = 20;\n\n                              if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n                                _iterator8.return();\n                              }\n\n                            case 22:\n                              _context110.prev = 22;\n\n                              if (!_didIteratorError8) {\n                                _context110.next = 25;\n                                break;\n                              }\n\n                              throw _iteratorError8;\n\n                            case 25:\n                              return _context110.finish(22);\n\n                            case 26:\n                              return _context110.finish(19);\n\n                            case 27:\n                            case \"end\":\n                              return _context110.stop();\n                          }\n                        }\n                      }, _marked90, null, [[3, 15, 19, 27], [20,, 22, 26]]);\n                    };\n\n                    parseTestLibraryArguments = function _ref51() {\n                      return _regeneratorRuntime.wrap(function parseTestLibraryArguments$(_context109) {\n                        while (1) {\n                          switch (_context109.prev = _context109.next) {\n                            case 0:\n                              _context109.next = 2;\n                              return \"(\";\n\n                            case 2:\n                              return _context109.delegateYield(parseNode(node.arguments[0], context, {\n                                innerParse:\n                                /*#__PURE__*/\n                                _regeneratorRuntime.mark(function innerParse(iterator) {\n                                  return _regeneratorRuntime.wrap(function innerParse$(_context108) {\n                                    while (1) {\n                                      switch (_context108.prev = _context108.next) {\n                                        case 0:\n                                          return _context108.delegateYield(stripSignals(iterator), \"t0\", 1);\n\n                                        case 1:\n                                          _context108.next = 3;\n                                          return \",\";\n\n                                        case 3:\n                                        case \"end\":\n                                          return _context108.stop();\n                                      }\n                                    }\n                                  }, innerParse);\n                                })\n                              }), \"t0\", 3);\n\n                            case 3:\n                              _context109.next = 5;\n                              return \" \";\n\n                            case 5:\n                              return _context109.delegateYield(parseNode(node.arguments[1], context), \"t1\", 6);\n\n                            case 6:\n                              _context109.next = 8;\n                              return \")\";\n\n                            case 8:\n                            case \"end\":\n                              return _context109.stop();\n                          }\n                        }\n                      }, _marked89);\n                    };\n\n                    parseTestLibraryCallee = function _ref50() {\n                      return _regeneratorRuntime.wrap(function parseTestLibraryCallee$(_context107) {\n                        while (1) {\n                          switch (_context107.prev = _context107.next) {\n                            case 0:\n                              if (!(node.callee.type === \"MemberExpression\")) {\n                                _context107.next = 7;\n                                break;\n                              }\n\n                              return _context107.delegateYield(parseNode(node.callee.object, context), \"t0\", 2);\n\n                            case 2:\n                              _context107.next = 4;\n                              return \".\";\n\n                            case 4:\n                              return _context107.delegateYield(parseNode(node.callee.property, context), \"t1\", 5);\n\n                            case 5:\n                              _context107.next = 8;\n                              break;\n\n                            case 7:\n                              return _context107.delegateYield(parseNode(node.callee, context), \"t2\", 8);\n\n                            case 8:\n                            case \"end\":\n                              return _context107.stop();\n                          }\n                        }\n                      }, _marked88);\n                    };\n\n                    _marked88 =\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(parseTestLibraryCallee), _marked89 =\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(parseTestLibraryArguments), _marked90 =\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(stripSignals);\n                    return _context111.delegateYield(parseTestLibraryCallee(), \"t0\", 5);\n\n                  case 5:\n                    return _context111.delegateYield(parseTestLibraryArguments(), \"t1\", 6);\n\n                  case 6:\n                  case \"end\":\n                    return _context111.stop();\n                }\n              }\n            }, _marked91);\n          };\n\n          innerParseCallExpression = function _ref53() {\n            return _regeneratorRuntime.wrap(function innerParseCallExpression$(_context106) {\n              while (1) {\n                switch (_context106.prev = _context106.next) {\n                  case 0:\n                    return _context106.delegateYield(parseNode(node.callee, context), \"t0\", 1);\n\n                  case 1:\n                    if (!node.typeParameters) {\n                      _context106.next = 3;\n                      break;\n                    }\n\n                    return _context106.delegateYield(parseNode(node.typeParameters, context), \"t1\", 3);\n\n                  case 3:\n                    if (!node.optional) {\n                      _context106.next = 6;\n                      break;\n                    }\n\n                    _context106.next = 6;\n                    return \"?.\";\n\n                  case 6:\n                    return _context106.delegateYield(core.conditions.withIndentIfStartOfLineIndented(parseParametersOrArguments({\n                      nodes: node.arguments,\n                      context: context,\n                      forceMultiLineWhenMultipleLines: context.config[\"callExpression.forceMultiLineArguments\"]\n                    })), \"t2\", 7);\n\n                  case 7:\n                  case \"end\":\n                    return _context106.stop();\n                }\n              }\n            }, _marked87);\n          };\n\n          _marked87 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(innerParseCallExpression), _marked91 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseTestLibraryCallExpression);\n\n          if (!isTestLibraryCallExpression()) {\n            _context112.next = 8;\n            break;\n          }\n\n          return _context112.delegateYield(parseTestLibraryCallExpression(), \"t0\", 6);\n\n        case 6:\n          _context112.next = 9;\n          break;\n\n        case 8:\n          return _context112.delegateYield(innerParseCallExpression(), \"t1\", 9);\n\n        case 9:\n        case \"end\":\n          return _context112.stop();\n      }\n    }\n  }, _marked92);\n}\n\nfunction parseConditionalExpression(node, context) {\n  var _marked93, useNewlines, operatorPosition, startInfo, beforeAlternateInfo, endInfo, parseConsequentAndAlternate, getOperatorPosition;\n\n  return _regeneratorRuntime.wrap(function parseConditionalExpression$(_context118) {\n    while (1) {\n      switch (_context118.prev = _context118.next) {\n        case 0:\n          getOperatorPosition = function _ref57() {\n            var configValue = context.config[\"conditionalExpression.operatorPosition\"];\n\n            switch (configValue) {\n              case \"nextLine\":\n              case \"sameLine\":\n                return configValue;\n\n              case \"maintain\":\n                var operatorToken = context.tokenFinder.getFirstTokenAfter(node.test, \"?\");\n                return node.test.loc.end.line === operatorToken.loc.start.line ? \"sameLine\" : \"nextLine\";\n\n              default:\n                return assertNever(configValue);\n            }\n          };\n\n          parseConsequentAndAlternate = function _ref56() {\n            return _regeneratorRuntime.wrap(function parseConsequentAndAlternate$(_context117) {\n              while (1) {\n                switch (_context117.prev = _context117.next) {\n                  case 0:\n                    _context117.next = 2;\n                    return core.conditions.forceReevaluationOnceResolved(context.endStatementOrMemberInfo.peek() || endInfo);\n\n                  case 2:\n                    if (!useNewlines) {\n                      _context117.next = 7;\n                      break;\n                    }\n\n                    _context117.next = 5;\n                    return core.Signal.NewLine;\n\n                  case 5:\n                    _context117.next = 9;\n                    break;\n\n                  case 7:\n                    _context117.next = 9;\n                    return core.conditions.newlineIfMultipleLinesSpaceOrNewlineOtherwise({\n                      startInfo: startInfo,\n                      endInfo: beforeAlternateInfo\n                    });\n\n                  case 9:\n                    return _context117.delegateYield(core.conditions.indentIfStartOfLine(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee16() {\n                      return _regeneratorRuntime.wrap(function _callee16$(_context115) {\n                        while (1) {\n                          switch (_context115.prev = _context115.next) {\n                            case 0:\n                              if (!(operatorPosition === \"nextLine\")) {\n                                _context115.next = 3;\n                                break;\n                              }\n\n                              _context115.next = 3;\n                              return \"? \";\n\n                            case 3:\n                              return _context115.delegateYield(newlineGroup(parseNode(node.consequent, context, {\n                                innerParse:\n                                /*#__PURE__*/\n                                _regeneratorRuntime.mark(function innerParse(iterator) {\n                                  return _regeneratorRuntime.wrap(function innerParse$(_context114) {\n                                    while (1) {\n                                      switch (_context114.prev = _context114.next) {\n                                        case 0:\n                                          return _context114.delegateYield(iterator, \"t0\", 1);\n\n                                        case 1:\n                                          if (!(operatorPosition === \"sameLine\")) {\n                                            _context114.next = 4;\n                                            break;\n                                          }\n\n                                          _context114.next = 4;\n                                          return \" :\";\n\n                                        case 4:\n                                        case \"end\":\n                                          return _context114.stop();\n                                      }\n                                    }\n                                  }, innerParse);\n                                })\n                              })), \"t0\", 4);\n\n                            case 4:\n                            case \"end\":\n                              return _context115.stop();\n                          }\n                        }\n                      }, _callee16);\n                    })()), \"t0\", 10);\n\n                  case 10:\n                    if (!useNewlines) {\n                      _context117.next = 15;\n                      break;\n                    }\n\n                    _context117.next = 13;\n                    return core.Signal.NewLine;\n\n                  case 13:\n                    _context117.next = 17;\n                    break;\n\n                  case 15:\n                    _context117.next = 17;\n                    return core.conditions.newlineIfMultipleLinesSpaceOrNewlineOtherwise({\n                      startInfo: startInfo,\n                      endInfo: beforeAlternateInfo\n                    });\n\n                  case 17:\n                    return _context117.delegateYield(core.conditions.indentIfStartOfLine(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee17() {\n                      return _regeneratorRuntime.wrap(function _callee17$(_context116) {\n                        while (1) {\n                          switch (_context116.prev = _context116.next) {\n                            case 0:\n                              if (!(operatorPosition === \"nextLine\")) {\n                                _context116.next = 3;\n                                break;\n                              }\n\n                              _context116.next = 3;\n                              return \": \";\n\n                            case 3:\n                              _context116.next = 5;\n                              return beforeAlternateInfo;\n\n                            case 5:\n                              return _context116.delegateYield(newlineGroup(parseNode(node.alternate, context)), \"t0\", 6);\n\n                            case 6:\n                              _context116.next = 8;\n                              return endInfo;\n\n                            case 8:\n                            case \"end\":\n                              return _context116.stop();\n                          }\n                        }\n                      }, _callee17);\n                    })()), \"t1\", 18);\n\n                  case 18:\n                  case \"end\":\n                    return _context117.stop();\n                }\n              }\n            }, _marked93);\n          };\n\n          _marked93 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseConsequentAndAlternate);\n          useNewlines = getUseNewlinesForNodes([node.test, node.consequent]) || getUseNewlinesForNodes([node.consequent, node.alternate]);\n          operatorPosition = getOperatorPosition();\n          startInfo = createInfo(\"startConditionalExpression\");\n          beforeAlternateInfo = createInfo(\"afterAlternateColon\");\n          endInfo = createInfo(\"endConditionalExpression\");\n          _context118.next = 10;\n          return startInfo;\n\n        case 10:\n          return _context118.delegateYield(newlineGroup(parseNode(node.test, context, {\n            innerParse:\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function innerParse(iterator) {\n              return _regeneratorRuntime.wrap(function innerParse$(_context113) {\n                while (1) {\n                  switch (_context113.prev = _context113.next) {\n                    case 0:\n                      return _context113.delegateYield(iterator, \"t0\", 1);\n\n                    case 1:\n                      if (!(operatorPosition === \"sameLine\")) {\n                        _context113.next = 4;\n                        break;\n                      }\n\n                      _context113.next = 4;\n                      return \" ?\";\n\n                    case 4:\n                    case \"end\":\n                      return _context113.stop();\n                  }\n                }\n              }, innerParse);\n            })\n          })), \"t0\", 11);\n\n        case 11:\n          return _context118.delegateYield(parseConsequentAndAlternate(), \"t1\", 12);\n\n        case 12:\n        case \"end\":\n          return _context118.stop();\n      }\n    }\n  }, _marked94);\n}\n\nfunction parseMemberExpression(node, context) {\n  return _regeneratorRuntime.wrap(function parseMemberExpression$(_context119) {\n    while (1) {\n      switch (_context119.prev = _context119.next) {\n        case 0:\n          return _context119.delegateYield(parseForMemberLikeExpression(node, node.object, node.property, node.computed, context), \"t0\", 1);\n\n        case 1:\n        case \"end\":\n          return _context119.stop();\n      }\n    }\n  }, _marked95);\n}\n\nfunction parseMetaProperty(node, context) {\n  return _regeneratorRuntime.wrap(function parseMetaProperty$(_context120) {\n    while (1) {\n      switch (_context120.prev = _context120.next) {\n        case 0:\n          return _context120.delegateYield(parseForMemberLikeExpression(node, node.meta, node.property, false, context), \"t0\", 1);\n\n        case 1:\n        case \"end\":\n          return _context120.stop();\n      }\n    }\n  }, _marked96);\n}\n\nfunction parseNewExpression(node, context) {\n  return _regeneratorRuntime.wrap(function parseNewExpression$(_context121) {\n    while (1) {\n      switch (_context121.prev = _context121.next) {\n        case 0:\n          _context121.next = 2;\n          return \"new \";\n\n        case 2:\n          return _context121.delegateYield(parseNode(node.callee, context), \"t0\", 3);\n\n        case 3:\n          return _context121.delegateYield(parseNode(node.typeParameters, context), \"t1\", 4);\n\n        case 4:\n          return _context121.delegateYield(parseParametersOrArguments({\n            nodes: node.arguments,\n            context: context,\n            forceMultiLineWhenMultipleLines: context.config[\"newExpression.forceMultiLineArguments\"]\n          }), \"t2\", 5);\n\n        case 5:\n        case \"end\":\n          return _context121.stop();\n      }\n    }\n  }, _marked97);\n}\n\nfunction parseNonNullExpression(node, context) {\n  return _regeneratorRuntime.wrap(function parseNonNullExpression$(_context122) {\n    while (1) {\n      switch (_context122.prev = _context122.next) {\n        case 0:\n          return _context122.delegateYield(parseNode(node.expression, context), \"t0\", 1);\n\n        case 1:\n          _context122.next = 3;\n          return \"!\";\n\n        case 3:\n        case \"end\":\n          return _context122.stop();\n      }\n    }\n  }, _marked98);\n}\n\nfunction parseObjectExpression(node, context) {\n  return _regeneratorRuntime.wrap(function parseObjectExpression$(_context123) {\n    while (1) {\n      switch (_context123.prev = _context123.next) {\n        case 0:\n          return _context123.delegateYield(parseObjectLikeNode({\n            node: node,\n            members: node.properties,\n            context: context,\n            trailingCommas: context.config[\"objectExpression.trailingCommas\"]\n          }), \"t0\", 1);\n\n        case 1:\n        case \"end\":\n          return _context123.stop();\n      }\n    }\n  }, _marked99);\n}\n\nfunction parseObjectPattern(node, context) {\n  return _regeneratorRuntime.wrap(function parseObjectPattern$(_context124) {\n    while (1) {\n      switch (_context124.prev = _context124.next) {\n        case 0:\n          return _context124.delegateYield(parseObjectLikeNode({\n            node: node,\n            members: node.properties,\n            context: context,\n            trailingCommas: \"never\"\n          }), \"t0\", 1);\n\n        case 1:\n          return _context124.delegateYield(parseTypeAnnotationWithColonIfExists(node.typeAnnotation, context), \"t1\", 2);\n\n        case 2:\n        case \"end\":\n          return _context124.stop();\n      }\n    }\n  }, _marked100);\n}\n\nfunction parseObjectProperty(node, context) {\n  return _regeneratorRuntime.wrap(function parseObjectProperty$(_context125) {\n    while (1) {\n      switch (_context125.prev = _context125.next) {\n        case 0:\n          if (node.shorthand) {\n            _context125.next = 8;\n            break;\n          }\n\n          if (!node.computed) {\n            _context125.next = 4;\n            break;\n          }\n\n          _context125.next = 4;\n          return \"[\";\n\n        case 4:\n          return _context125.delegateYield(parseNode(node.key, context), \"t0\", 5);\n\n        case 5:\n          if (!node.computed) {\n            _context125.next = 8;\n            break;\n          }\n\n          _context125.next = 8;\n          return \"]\";\n\n        case 8:\n          if (!node.value) {\n            _context125.next = 14;\n            break;\n          }\n\n          if (!node.shorthand) {\n            _context125.next = 13;\n            break;\n          }\n\n          return _context125.delegateYield(parseNode(node.value, context), \"t1\", 11);\n\n        case 11:\n          _context125.next = 14;\n          break;\n\n        case 13:\n          return _context125.delegateYield(parseNodeWithPreceedingColon(node.value, context), \"t2\", 14);\n\n        case 14:\n        case \"end\":\n          return _context125.stop();\n      }\n    }\n  }, _marked101);\n}\n\nfunction parseRestElement(node, context) {\n  return _regeneratorRuntime.wrap(function parseRestElement$(_context126) {\n    while (1) {\n      switch (_context126.prev = _context126.next) {\n        case 0:\n          _context126.next = 2;\n          return \"...\";\n\n        case 2:\n          return _context126.delegateYield(parseNode(node.argument, context), \"t0\", 3);\n\n        case 3:\n          return _context126.delegateYield(parseTypeAnnotationWithColonIfExists(node.typeAnnotation, context), \"t1\", 4);\n\n        case 4:\n        case \"end\":\n          return _context126.stop();\n      }\n    }\n  }, _marked102);\n}\n\nfunction parseSequenceExpression(node, context) {\n  return _regeneratorRuntime.wrap(function parseSequenceExpression$(_context127) {\n    while (1) {\n      switch (_context127.prev = _context127.next) {\n        case 0:\n          return _context127.delegateYield(parseCommaSeparatedValues({\n            values: node.expressions,\n            context: context,\n            multiLineOrHangingConditionResolver: function multiLineOrHangingConditionResolver() {\n              return false;\n            }\n          }), \"t0\", 1);\n\n        case 1:\n        case \"end\":\n          return _context127.stop();\n      }\n    }\n  }, _marked103);\n}\n\nfunction parseSpreadElement(node, context) {\n  return _regeneratorRuntime.wrap(function parseSpreadElement$(_context128) {\n    while (1) {\n      switch (_context128.prev = _context128.next) {\n        case 0:\n          _context128.next = 2;\n          return \"...\";\n\n        case 2:\n          return _context128.delegateYield(parseNode(node.argument, context), \"t0\", 3);\n\n        case 3:\n        case \"end\":\n          return _context128.stop();\n      }\n    }\n  }, _marked104);\n}\n\nfunction parseTaggedTemplateExpression(node, context) {\n  return _regeneratorRuntime.wrap(function parseTaggedTemplateExpression$(_context129) {\n    while (1) {\n      switch (_context129.prev = _context129.next) {\n        case 0:\n          return _context129.delegateYield(parseNode(node.tag, context), \"t0\", 1);\n\n        case 1:\n          return _context129.delegateYield(parseNode(node.typeParameters, context), \"t1\", 2);\n\n        case 2:\n          _context129.next = 4;\n          return core.Signal.SpaceOrNewLine;\n\n        case 4:\n          return _context129.delegateYield(core.conditions.indentIfStartOfLine(parseNode(node.quasi, context)), \"t2\", 5);\n\n        case 5:\n        case \"end\":\n          return _context129.stop();\n      }\n    }\n  }, _marked105);\n}\n\nfunction parseTypeAssertion(node, context) {\n  return _regeneratorRuntime.wrap(function parseTypeAssertion$(_context130) {\n    while (1) {\n      switch (_context130.prev = _context130.next) {\n        case 0:\n          _context130.next = 2;\n          return \"<\";\n\n        case 2:\n          return _context130.delegateYield(parseNode(node.typeAnnotation, context), \"t0\", 3);\n\n        case 3:\n          _context130.next = 5;\n          return \">\";\n\n        case 5:\n          if (!context.config[\"typeAssertion.spaceBeforeExpression\"]) {\n            _context130.next = 8;\n            break;\n          }\n\n          _context130.next = 8;\n          return \" \";\n\n        case 8:\n          return _context130.delegateYield(parseNode(node.expression, context), \"t1\", 9);\n\n        case 9:\n        case \"end\":\n          return _context130.stop();\n      }\n    }\n  }, _marked106);\n}\n\nfunction parseUnaryExpression(node, context) {\n  var operator, getOperator;\n  return _regeneratorRuntime.wrap(function parseUnaryExpression$(_context131) {\n    while (1) {\n      switch (_context131.prev = _context131.next) {\n        case 0:\n          getOperator = function _ref58() {\n            switch (node.operator) {\n              case \"void\":\n              case \"typeof\":\n              case \"throw\":\n              case \"delete\":\n                return \"\".concat(node.operator, \" \");\n\n              case \"!\":\n              case \"+\":\n              case \"-\":\n              case \"~\":\n                return node.operator;\n\n              default:\n                var _assertNever = node.operator;\n                return node.operator;\n            }\n          };\n\n          operator = getOperator();\n\n          if (!node.prefix) {\n            _context131.next = 5;\n            break;\n          }\n\n          _context131.next = 5;\n          return operator;\n\n        case 5:\n          return _context131.delegateYield(parseNode(node.argument, context), \"t0\", 6);\n\n        case 6:\n          if (node.prefix) {\n            _context131.next = 9;\n            break;\n          }\n\n          _context131.next = 9;\n          return operator;\n\n        case 9:\n        case \"end\":\n          return _context131.stop();\n      }\n    }\n  }, _marked107);\n}\n\nfunction parseUpdateExpression(node, context) {\n  return _regeneratorRuntime.wrap(function parseUpdateExpression$(_context132) {\n    while (1) {\n      switch (_context132.prev = _context132.next) {\n        case 0:\n          if (!node.prefix) {\n            _context132.next = 3;\n            break;\n          }\n\n          _context132.next = 3;\n          return node.operator;\n\n        case 3:\n          return _context132.delegateYield(parseNode(node.argument, context), \"t0\", 4);\n\n        case 4:\n          if (node.prefix) {\n            _context132.next = 7;\n            break;\n          }\n\n          _context132.next = 7;\n          return node.operator;\n\n        case 7:\n        case \"end\":\n          return _context132.stop();\n      }\n    }\n  }, _marked108);\n}\n\nfunction parseYieldExpression(node, context) {\n  return _regeneratorRuntime.wrap(function parseYieldExpression$(_context133) {\n    while (1) {\n      switch (_context133.prev = _context133.next) {\n        case 0:\n          _context133.next = 2;\n          return \"yield\";\n\n        case 2:\n          if (!node.delegate) {\n            _context133.next = 5;\n            break;\n          }\n\n          _context133.next = 5;\n          return \"*\";\n\n        case 5:\n          _context133.next = 7;\n          return \" \";\n\n        case 7:\n          return _context133.delegateYield(parseNode(node.argument, context), \"t0\", 8);\n\n        case 8:\n        case \"end\":\n          return _context133.stop();\n      }\n    }\n  }, _marked109);\n}\n\nfunction parseImportDefaultSpecifier(node, context) {\n  return parseNode(node.local, context);\n}\n\nfunction parseImportNamespaceSpecifier(node, context) {\n  return _regeneratorRuntime.wrap(function parseImportNamespaceSpecifier$(_context134) {\n    while (1) {\n      switch (_context134.prev = _context134.next) {\n        case 0:\n          _context134.next = 2;\n          return \"* as \";\n\n        case 2:\n          return _context134.delegateYield(parseNode(node.local, context), \"t0\", 3);\n\n        case 3:\n        case \"end\":\n          return _context134.stop();\n      }\n    }\n  }, _marked110);\n}\n\nfunction parseImportSpecifier(node, context) {\n  return _regeneratorRuntime.wrap(function parseImportSpecifier$(_context136) {\n    while (1) {\n      switch (_context136.prev = _context136.next) {\n        case 0:\n          if (!(node.imported.start === node.local.start)) {\n            _context136.next = 3;\n            break;\n          }\n\n          return _context136.delegateYield(parseNode(node.imported, context), \"t0\", 2);\n\n        case 2:\n          return _context136.abrupt(\"return\");\n\n        case 3:\n          return _context136.delegateYield(parseNode(node.imported, context), \"t1\", 4);\n\n        case 4:\n          _context136.next = 6;\n          return core.Signal.SpaceOrNewLine;\n\n        case 6:\n          return _context136.delegateYield(core.conditions.indentIfStartOfLine(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee18() {\n            return _regeneratorRuntime.wrap(function _callee18$(_context135) {\n              while (1) {\n                switch (_context135.prev = _context135.next) {\n                  case 0:\n                    _context135.next = 2;\n                    return \"as \";\n\n                  case 2:\n                    return _context135.delegateYield(parseNode(node.local, context), \"t0\", 3);\n\n                  case 3:\n                  case \"end\":\n                    return _context135.stop();\n                }\n              }\n            }, _callee18);\n          })()), \"t2\", 7);\n\n        case 7:\n        case \"end\":\n          return _context136.stop();\n      }\n    }\n  }, _marked111);\n}\n\nfunction parseExportDefaultSpecifier(node, context) {\n  return _regeneratorRuntime.wrap(function parseExportDefaultSpecifier$(_context137) {\n    while (1) {\n      switch (_context137.prev = _context137.next) {\n        case 0:\n          _context137.next = 2;\n          return \"default \";\n\n        case 2:\n          return _context137.delegateYield(parseNode(node.exported, context), \"t0\", 3);\n\n        case 3:\n        case \"end\":\n          return _context137.stop();\n      }\n    }\n  }, _marked112);\n}\n\nfunction parseExportNamespaceSpecifier(node, context) {\n  return _regeneratorRuntime.wrap(function parseExportNamespaceSpecifier$(_context138) {\n    while (1) {\n      switch (_context138.prev = _context138.next) {\n        case 0:\n          _context138.next = 2;\n          return \"* as \";\n\n        case 2:\n          return _context138.delegateYield(parseNode(node.exported, context), \"t0\", 3);\n\n        case 3:\n        case \"end\":\n          return _context138.stop();\n      }\n    }\n  }, _marked113);\n}\n\nfunction parseExportSpecifier(node, context) {\n  return _regeneratorRuntime.wrap(function parseExportSpecifier$(_context140) {\n    while (1) {\n      switch (_context140.prev = _context140.next) {\n        case 0:\n          if (!(node.local.start === node.exported.start)) {\n            _context140.next = 3;\n            break;\n          }\n\n          return _context140.delegateYield(parseNode(node.local, context), \"t0\", 2);\n\n        case 2:\n          return _context140.abrupt(\"return\");\n\n        case 3:\n          return _context140.delegateYield(parseNode(node.local, context), \"t1\", 4);\n\n        case 4:\n          _context140.next = 6;\n          return core.Signal.SpaceOrNewLine;\n\n        case 6:\n          return _context140.delegateYield(core.conditions.indentIfStartOfLine(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee19() {\n            return _regeneratorRuntime.wrap(function _callee19$(_context139) {\n              while (1) {\n                switch (_context139.prev = _context139.next) {\n                  case 0:\n                    _context139.next = 2;\n                    return \"as \";\n\n                  case 2:\n                    return _context139.delegateYield(parseNode(node.exported, context), \"t0\", 3);\n\n                  case 3:\n                  case \"end\":\n                    return _context139.stop();\n                }\n              }\n            }, _callee19);\n          })()), \"t2\", 7);\n\n        case 7:\n        case \"end\":\n          return _context140.stop();\n      }\n    }\n  }, _marked114);\n}\n\nfunction parseBigIntLiteral(node, context) {\n  return _regeneratorRuntime.wrap(function parseBigIntLiteral$(_context141) {\n    while (1) {\n      switch (_context141.prev = _context141.next) {\n        case 0:\n          _context141.next = 2;\n          return node.value + \"n\";\n\n        case 2:\n        case \"end\":\n          return _context141.stop();\n      }\n    }\n  }, _marked115);\n}\n\nfunction parseBooleanLiteral(node, context) {\n  return _regeneratorRuntime.wrap(function parseBooleanLiteral$(_context142) {\n    while (1) {\n      switch (_context142.prev = _context142.next) {\n        case 0:\n          _context142.next = 2;\n          return node.value ? \"true\" : \"false\";\n\n        case 2:\n        case \"end\":\n          return _context142.stop();\n      }\n    }\n  }, _marked116);\n}\n\nfunction parseNumericLiteral(node, context) {\n  return _regeneratorRuntime.wrap(function parseNumericLiteral$(_context143) {\n    while (1) {\n      switch (_context143.prev = _context143.next) {\n        case 0:\n          _context143.next = 2;\n          return context.fileText.substring(node.start, node.end);\n\n        case 2:\n        case \"end\":\n          return _context143.stop();\n      }\n    }\n  }, _marked117);\n}\n\nfunction parseStringOrDirectiveLiteral(node, context) {\n  var getStringLiteralText;\n  return _regeneratorRuntime.wrap(function parseStringOrDirectiveLiteral$(_context144) {\n    while (1) {\n      switch (_context144.prev = _context144.next) {\n        case 0:\n          getStringLiteralText = function _ref59() {\n            var stringValue = getStringValue();\n            if (context.config.singleQuotes) return \"'\".concat(stringValue.replace(/'/g, \"\\\\'\"), \"'\");else return \"\\\"\".concat(stringValue.replace(/\"/g, \"\\\\\\\"\"), \"\\\"\");\n\n            function getStringValue() {\n              var rawStringValue = context.fileText.substring(node.start + 1, node.end - 1);\n              var isDoubleQuote = context.fileText[node.start] === \"\\\"\";\n              if (isDoubleQuote) return rawStringValue.replace(/\\\\\"/g, \"\\\"\");else return rawStringValue.replace(/\\\\'/g, \"'\");\n            }\n          };\n\n          _context144.next = 3;\n          return {\n            kind: core.PrintItemKind.RawString,\n            text: getStringLiteralText()\n          };\n\n        case 3:\n        case \"end\":\n          return _context144.stop();\n      }\n    }\n  }, _marked118);\n}\n\nfunction parseRegExpLiteral(node, context) {\n  return _regeneratorRuntime.wrap(function parseRegExpLiteral$(_context145) {\n    while (1) {\n      switch (_context145.prev = _context145.next) {\n        case 0:\n          _context145.next = 2;\n          return \"/\";\n\n        case 2:\n          _context145.next = 4;\n          return node.pattern;\n\n        case 4:\n          _context145.next = 6;\n          return \"/\";\n\n        case 6:\n          _context145.next = 8;\n          return node.flags;\n\n        case 8:\n        case \"end\":\n          return _context145.stop();\n      }\n    }\n  }, _marked119);\n}\n\nfunction parseTemplateElement(node, context) {\n  return _regeneratorRuntime.wrap(function parseTemplateElement$(_context146) {\n    while (1) {\n      switch (_context146.prev = _context146.next) {\n        case 0:\n          _context146.next = 2;\n          return {\n            kind: core.PrintItemKind.RawString,\n            text: context.fileText.substring(node.start, node.end)\n          };\n\n        case 2:\n        case \"end\":\n          return _context146.stop();\n      }\n    }\n  }, _marked120);\n}\n\nfunction parseTemplateLiteral(node, context) {\n  var _marked121, getItems;\n\n  return _regeneratorRuntime.wrap(function parseTemplateLiteral$(_context150) {\n    while (1) {\n      switch (_context150.prev = _context150.next) {\n        case 0:\n          getItems = function _ref62() {\n            var quasisIndex, expressionsIndex, _loop2, _ret;\n\n            return _regeneratorRuntime.wrap(function getItems$(_context149) {\n              while (1) {\n                switch (_context149.prev = _context149.next) {\n                  case 0:\n                    quasisIndex = 0;\n                    expressionsIndex = 0;\n                    _loop2 =\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _loop2() {\n                      var currentQuasis, currentExpression, moveNextQuasis, moveNextExpression;\n                      return _regeneratorRuntime.wrap(function _loop2$(_context148) {\n                        while (1) {\n                          switch (_context148.prev = _context148.next) {\n                            case 0:\n                              moveNextExpression = function _ref61() {\n                                expressionsIndex++;\n                                return currentExpression;\n                              };\n\n                              moveNextQuasis = function _ref60() {\n                                quasisIndex++;\n                                return currentQuasis;\n                              };\n\n                              currentQuasis = node.quasis[quasisIndex];\n                              currentExpression = node.expressions[expressionsIndex];\n\n                              if (!(currentQuasis != null)) {\n                                _context148.next = 19;\n                                break;\n                              }\n\n                              if (!(currentExpression != null)) {\n                                _context148.next = 15;\n                                break;\n                              }\n\n                              if (!(currentQuasis.start < currentExpression.start)) {\n                                _context148.next = 11;\n                                break;\n                              }\n\n                              _context148.next = 9;\n                              return moveNextQuasis();\n\n                            case 9:\n                              _context148.next = 13;\n                              break;\n\n                            case 11:\n                              _context148.next = 13;\n                              return moveNextExpression();\n\n                            case 13:\n                              _context148.next = 17;\n                              break;\n\n                            case 15:\n                              _context148.next = 17;\n                              return moveNextQuasis();\n\n                            case 17:\n                              _context148.next = 25;\n                              break;\n\n                            case 19:\n                              if (!(currentExpression != null)) {\n                                _context148.next = 24;\n                                break;\n                              }\n\n                              _context148.next = 22;\n                              return moveNextExpression();\n\n                            case 22:\n                              _context148.next = 25;\n                              break;\n\n                            case 24:\n                              return _context148.abrupt(\"return\", {\n                                v: void 0\n                              });\n\n                            case 25:\n                            case \"end\":\n                              return _context148.stop();\n                          }\n                        }\n                      }, _loop2);\n                    });\n\n                  case 3:\n                    if (!true) {\n                      _context149.next = 10;\n                      break;\n                    }\n\n                    return _context149.delegateYield(_loop2(), \"t0\", 5);\n\n                  case 5:\n                    _ret = _context149.t0;\n\n                    if (!(typeof _ret === \"object\")) {\n                      _context149.next = 8;\n                      break;\n                    }\n\n                    return _context149.abrupt(\"return\", _ret.v);\n\n                  case 8:\n                    _context149.next = 3;\n                    break;\n\n                  case 10:\n                  case \"end\":\n                    return _context149.stop();\n                }\n              }\n            }, _marked121);\n          };\n\n          _marked121 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(getItems);\n          return _context150.delegateYield(newlineGroup(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee20() {\n            var _iteratorNormalCompletion9, _didIteratorError9, _iteratorError9, _iterator9, _step9, item;\n\n            return _regeneratorRuntime.wrap(function _callee20$(_context147) {\n              while (1) {\n                switch (_context147.prev = _context147.next) {\n                  case 0:\n                    _context147.next = 2;\n                    return \"`\";\n\n                  case 2:\n                    _context147.next = 4;\n                    return core.Signal.StartIgnoringIndent;\n\n                  case 4:\n                    _iteratorNormalCompletion9 = true;\n                    _didIteratorError9 = false;\n                    _iteratorError9 = undefined;\n                    _context147.prev = 7;\n                    _iterator9 = getItems()[Symbol.iterator]();\n\n                  case 9:\n                    if (_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done) {\n                      _context147.next = 35;\n                      break;\n                    }\n\n                    item = _step9.value;\n\n                    if (!(item.type === \"TemplateElement\")) {\n                      _context147.next = 15;\n                      break;\n                    }\n\n                    return _context147.delegateYield(parseNode(item, context), \"t0\", 13);\n\n                  case 13:\n                    _context147.next = 32;\n                    break;\n\n                  case 15:\n                    _context147.next = 17;\n                    return \"${\";\n\n                  case 17:\n                    _context147.next = 19;\n                    return core.Signal.FinishIgnoringIndent;\n\n                  case 19:\n                    _context147.next = 21;\n                    return core.Signal.PossibleNewLine;\n\n                  case 21:\n                    _context147.next = 23;\n                    return core.conditions.singleIndentIfStartOfLine();\n\n                  case 23:\n                    return _context147.delegateYield(parseNode(item, context), \"t1\", 24);\n\n                  case 24:\n                    _context147.next = 26;\n                    return core.Signal.PossibleNewLine;\n\n                  case 26:\n                    _context147.next = 28;\n                    return core.conditions.singleIndentIfStartOfLine();\n\n                  case 28:\n                    _context147.next = 30;\n                    return \"}\";\n\n                  case 30:\n                    _context147.next = 32;\n                    return core.Signal.StartIgnoringIndent;\n\n                  case 32:\n                    _iteratorNormalCompletion9 = true;\n                    _context147.next = 9;\n                    break;\n\n                  case 35:\n                    _context147.next = 41;\n                    break;\n\n                  case 37:\n                    _context147.prev = 37;\n                    _context147.t2 = _context147[\"catch\"](7);\n                    _didIteratorError9 = true;\n                    _iteratorError9 = _context147.t2;\n\n                  case 41:\n                    _context147.prev = 41;\n                    _context147.prev = 42;\n\n                    if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n                      _iterator9.return();\n                    }\n\n                  case 44:\n                    _context147.prev = 44;\n\n                    if (!_didIteratorError9) {\n                      _context147.next = 47;\n                      break;\n                    }\n\n                    throw _iteratorError9;\n\n                  case 47:\n                    return _context147.finish(44);\n\n                  case 48:\n                    return _context147.finish(41);\n\n                  case 49:\n                    _context147.next = 51;\n                    return \"`\";\n\n                  case 51:\n                    _context147.next = 53;\n                    return core.Signal.FinishIgnoringIndent;\n\n                  case 53:\n                  case \"end\":\n                    return _context147.stop();\n                }\n              }\n            }, _callee20, null, [[7, 37, 41, 49], [42,, 44, 48]]);\n          })()), \"t0\", 3);\n\n        case 3:\n        case \"end\":\n          return _context150.stop();\n      }\n    }\n  }, _marked122);\n}\n\nfunction parseNotSupportedFlowNode(node, context) {\n  return toPrintItemIterable(parseUnknownNodeWithMessage(node, context, \"Flow node types are not supported\"));\n}\n\nfunction parseUnknownNode(node, context) {\n  return toPrintItemIterable(parseUnknownNodeWithMessage(node, context, \"Not implemented node type\"));\n}\n\nfunction parseUnknownNodeWithMessage(node, context, message) {\n  var rawString = parseNodeAsRawString(node, context);\n  context.log(\"\".concat(message, \": \").concat(node.type, \" (\").concat(rawString.text.substring(0, 100), \")\"));\n  return rawString;\n}\n\nfunction parseNodeAsRawString(node, context) {\n  var nodeText = context.fileText.substring(node.start, node.end);\n  return {\n    kind: core.PrintItemKind.RawString,\n    text: nodeText\n  };\n}\n\nfunction parseArrayType(node, context) {\n  return _regeneratorRuntime.wrap(function parseArrayType$(_context151) {\n    while (1) {\n      switch (_context151.prev = _context151.next) {\n        case 0:\n          return _context151.delegateYield(parseNode(node.elementType, context), \"t0\", 1);\n\n        case 1:\n          _context151.next = 3;\n          return \"[]\";\n\n        case 3:\n        case \"end\":\n          return _context151.stop();\n      }\n    }\n  }, _marked123);\n}\n\nfunction parseConditionalType(node, context) {\n  var _marked124, _marked126, useNewlines, isParentConditionalType, parseMainArea, parseFalseType;\n\n  return _regeneratorRuntime.wrap(function parseConditionalType$(_context157) {\n    while (1) {\n      switch (_context157.prev = _context157.next) {\n        case 0:\n          parseFalseType = function _ref65() {\n            var _marked125, parseInner;\n\n            return _regeneratorRuntime.wrap(function parseFalseType$(_context156) {\n              while (1) {\n                switch (_context156.prev = _context156.next) {\n                  case 0:\n                    parseInner = function _ref63() {\n                      return _regeneratorRuntime.wrap(function parseInner$(_context155) {\n                        while (1) {\n                          switch (_context155.prev = _context155.next) {\n                            case 0:\n                              _context155.next = 2;\n                              return \": \";\n\n                            case 2:\n                              return _context155.delegateYield(newlineGroup(parseNode(node.falseType, context)), \"t0\", 3);\n\n                            case 3:\n                            case \"end\":\n                              return _context155.stop();\n                          }\n                        }\n                      }, _marked125);\n                    };\n\n                    _marked125 =\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(parseInner);\n\n                    if (!useNewlines) {\n                      _context156.next = 7;\n                      break;\n                    }\n\n                    _context156.next = 5;\n                    return core.Signal.NewLine;\n\n                  case 5:\n                    _context156.next = 9;\n                    break;\n\n                  case 7:\n                    _context156.next = 9;\n                    return core.Signal.SpaceOrNewLine;\n\n                  case 9:\n                    if (!isParentConditionalType) {\n                      _context156.next = 13;\n                      break;\n                    }\n\n                    return _context156.delegateYield(parseInner(), \"t0\", 11);\n\n                  case 11:\n                    _context156.next = 14;\n                    break;\n\n                  case 13:\n                    return _context156.delegateYield(core.conditions.indentIfStartOfLine(parseInner()), \"t1\", 14);\n\n                  case 14:\n                  case \"end\":\n                    return _context156.stop();\n                }\n              }\n            }, _marked126);\n          };\n\n          parseMainArea = function _ref64() {\n            return _regeneratorRuntime.wrap(function parseMainArea$(_context154) {\n              while (1) {\n                switch (_context154.prev = _context154.next) {\n                  case 0:\n                    return _context154.delegateYield(newlineGroup(parseNode(node.checkType, context)), \"t0\", 1);\n\n                  case 1:\n                    _context154.next = 3;\n                    return core.Signal.SpaceOrNewLine;\n\n                  case 3:\n                    return _context154.delegateYield(core.conditions.indentIfStartOfLine(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee21() {\n                      return _regeneratorRuntime.wrap(function _callee21$(_context152) {\n                        while (1) {\n                          switch (_context152.prev = _context152.next) {\n                            case 0:\n                              _context152.next = 2;\n                              return \"extends \";\n\n                            case 2:\n                              return _context152.delegateYield(newlineGroup(parseNode(node.extendsType, context)), \"t0\", 3);\n\n                            case 3:\n                            case \"end\":\n                              return _context152.stop();\n                          }\n                        }\n                      }, _callee21);\n                    })()), \"t1\", 4);\n\n                  case 4:\n                    _context154.next = 6;\n                    return core.Signal.SpaceOrNewLine;\n\n                  case 6:\n                    return _context154.delegateYield(core.conditions.indentIfStartOfLine(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee22() {\n                      return _regeneratorRuntime.wrap(function _callee22$(_context153) {\n                        while (1) {\n                          switch (_context153.prev = _context153.next) {\n                            case 0:\n                              _context153.next = 2;\n                              return \"? \";\n\n                            case 2:\n                              return _context153.delegateYield(newlineGroup(parseNode(node.trueType, context)), \"t0\", 3);\n\n                            case 3:\n                            case \"end\":\n                              return _context153.stop();\n                          }\n                        }\n                      }, _callee22);\n                    })()), \"t2\", 7);\n\n                  case 7:\n                  case \"end\":\n                    return _context154.stop();\n                }\n              }\n            }, _marked124);\n          };\n\n          _marked124 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseMainArea), _marked126 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseFalseType);\n          useNewlines = getUseNewlinesForNodes([node.checkType, node.falseType]);\n          isParentConditionalType = context.parent.type === \"TSConditionalType\";\n          return _context157.delegateYield(parseMainArea(), \"t0\", 6);\n\n        case 6:\n          return _context157.delegateYield(parseFalseType(), \"t1\", 7);\n\n        case 7:\n        case \"end\":\n          return _context157.stop();\n      }\n    }\n  }, _marked127);\n}\n\nfunction parseConstructorType(node, context) {\n  var startInfo;\n  return _regeneratorRuntime.wrap(function parseConstructorType$(_context159) {\n    while (1) {\n      switch (_context159.prev = _context159.next) {\n        case 0:\n          startInfo = createInfo(\"startConstructorType\");\n          _context159.next = 3;\n          return startInfo;\n\n        case 3:\n          _context159.next = 5;\n          return \"new\";\n\n        case 5:\n          if (!context.config[\"constructorType.spaceAfterNewKeyword\"]) {\n            _context159.next = 8;\n            break;\n          }\n\n          _context159.next = 8;\n          return \" \";\n\n        case 8:\n          return _context159.delegateYield(parseNode(node.typeParameters, context), \"t0\", 9);\n\n        case 9:\n          return _context159.delegateYield(parseParametersOrArguments({\n            nodes: node.parameters,\n            context: context,\n            forceMultiLineWhenMultipleLines: context.config[\"constructorType.forceMultiLineParameters\"],\n            customCloseParen: parseCloseParenWithType({\n              context: context,\n              startInfo: startInfo,\n              typeNode: node.typeAnnotation,\n              typeNodeSeparator:\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee23() {\n                return _regeneratorRuntime.wrap(function _callee23$(_context158) {\n                  while (1) {\n                    switch (_context158.prev = _context158.next) {\n                      case 0:\n                        _context158.next = 2;\n                        return core.Signal.SpaceOrNewLine;\n\n                      case 2:\n                        _context158.next = 4;\n                        return \"=> \";\n\n                      case 4:\n                      case \"end\":\n                        return _context158.stop();\n                    }\n                  }\n                }, _callee23);\n              })()\n            })\n          }), \"t1\", 10);\n\n        case 10:\n        case \"end\":\n          return _context159.stop();\n      }\n    }\n  }, _marked128);\n}\n\nfunction parseFunctionType(node, context) {\n  var startInfo;\n  return _regeneratorRuntime.wrap(function parseFunctionType$(_context161) {\n    while (1) {\n      switch (_context161.prev = _context161.next) {\n        case 0:\n          startInfo = createInfo(\"startFunctionType\");\n          _context161.next = 3;\n          return startInfo;\n\n        case 3:\n          return _context161.delegateYield(parseNode(node.typeParameters, context), \"t0\", 4);\n\n        case 4:\n          return _context161.delegateYield(parseParametersOrArguments({\n            nodes: node.parameters,\n            context: context,\n            forceMultiLineWhenMultipleLines: context.config[\"functionType.forceMultiLineParameters\"],\n            customCloseParen: parseCloseParenWithType({\n              context: context,\n              startInfo: startInfo,\n              typeNode: node.typeAnnotation,\n              typeNodeSeparator:\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee24() {\n                return _regeneratorRuntime.wrap(function _callee24$(_context160) {\n                  while (1) {\n                    switch (_context160.prev = _context160.next) {\n                      case 0:\n                        _context160.next = 2;\n                        return core.Signal.SpaceOrNewLine;\n\n                      case 2:\n                        _context160.next = 4;\n                        return \"=> \";\n\n                      case 4:\n                      case \"end\":\n                        return _context160.stop();\n                    }\n                  }\n                }, _callee24);\n              })()\n            })\n          }), \"t1\", 5);\n\n        case 5:\n        case \"end\":\n          return _context161.stop();\n      }\n    }\n  }, _marked129);\n}\n\nfunction parseImportType(node, context) {\n  return _regeneratorRuntime.wrap(function parseImportType$(_context162) {\n    while (1) {\n      switch (_context162.prev = _context162.next) {\n        case 0:\n          _context162.next = 2;\n          return \"import(\";\n\n        case 2:\n          return _context162.delegateYield(parseNode(node.argument, context), \"t0\", 3);\n\n        case 3:\n          _context162.next = 5;\n          return \")\";\n\n        case 5:\n          if (!node.qualifier) {\n            _context162.next = 9;\n            break;\n          }\n\n          _context162.next = 8;\n          return \".\";\n\n        case 8:\n          return _context162.delegateYield(parseNode(node.qualifier, context), \"t1\", 9);\n\n        case 9:\n          return _context162.delegateYield(parseNode(node.typeParameters, context), \"t2\", 10);\n\n        case 10:\n        case \"end\":\n          return _context162.stop();\n      }\n    }\n  }, _marked130);\n}\n\nfunction parseIndexedAccessType(node, context) {\n  return _regeneratorRuntime.wrap(function parseIndexedAccessType$(_context163) {\n    while (1) {\n      switch (_context163.prev = _context163.next) {\n        case 0:\n          return _context163.delegateYield(parseNode(node.objectType, context), \"t0\", 1);\n\n        case 1:\n          _context163.next = 3;\n          return \"[\";\n\n        case 3:\n          return _context163.delegateYield(parseNode(node.indexType, context), \"t1\", 4);\n\n        case 4:\n          _context163.next = 6;\n          return \"]\";\n\n        case 6:\n        case \"end\":\n          return _context163.stop();\n      }\n    }\n  }, _marked131);\n}\n\nfunction parseInferType(node, context) {\n  return _regeneratorRuntime.wrap(function parseInferType$(_context164) {\n    while (1) {\n      switch (_context164.prev = _context164.next) {\n        case 0:\n          _context164.next = 2;\n          return \"infer \";\n\n        case 2:\n          return _context164.delegateYield(parseNode(node.typeParameter, context), \"t0\", 3);\n\n        case 3:\n        case \"end\":\n          return _context164.stop();\n      }\n    }\n  }, _marked132);\n}\n\nfunction parseLiteralType(node, context) {\n  return _regeneratorRuntime.wrap(function parseLiteralType$(_context165) {\n    while (1) {\n      switch (_context165.prev = _context165.next) {\n        case 0:\n          return _context165.delegateYield(parseNode(node.literal, context), \"t0\", 1);\n\n        case 1:\n        case \"end\":\n          return _context165.stop();\n      }\n    }\n  }, _marked133);\n}\n\nfunction parseMappedType(node, context) {\n  var _marked134, _marked135, useNewLines, startInfo, parseLayout, parseBody;\n\n  return _regeneratorRuntime.wrap(function parseMappedType$(_context168) {\n    while (1) {\n      switch (_context168.prev = _context168.next) {\n        case 0:\n          parseBody = function _ref67() {\n            return _regeneratorRuntime.wrap(function parseBody$(_context167) {\n              while (1) {\n                switch (_context167.prev = _context167.next) {\n                  case 0:\n                    if (!node.readonly) {\n                      _context167.next = 3;\n                      break;\n                    }\n\n                    _context167.next = 3;\n                    return \"readonly \";\n\n                  case 3:\n                    _context167.next = 5;\n                    return \"[\";\n\n                  case 5:\n                    return _context167.delegateYield(parseNode(node.typeParameter, context), \"t0\", 6);\n\n                  case 6:\n                    _context167.next = 8;\n                    return \"]\";\n\n                  case 8:\n                    if (!node.optional) {\n                      _context167.next = 11;\n                      break;\n                    }\n\n                    _context167.next = 11;\n                    return \"?\";\n\n                  case 11:\n                    return _context167.delegateYield(parseTypeAnnotationWithColonIfExists(node.typeAnnotation, context), \"t1\", 12);\n\n                  case 12:\n                    if (!context.config[\"mappedType.semiColon\"]) {\n                      _context167.next = 15;\n                      break;\n                    }\n\n                    _context167.next = 15;\n                    return \";\";\n\n                  case 15:\n                  case \"end\":\n                    return _context167.stop();\n                }\n              }\n            }, _marked135);\n          };\n\n          parseLayout = function _ref66() {\n            return _regeneratorRuntime.wrap(function parseLayout$(_context166) {\n              while (1) {\n                switch (_context166.prev = _context166.next) {\n                  case 0:\n                    if (!useNewLines) {\n                      _context166.next = 5;\n                      break;\n                    }\n\n                    _context166.next = 3;\n                    return core.Signal.NewLine;\n\n                  case 3:\n                    _context166.next = 7;\n                    break;\n\n                  case 5:\n                    _context166.next = 7;\n                    return core.Signal.SpaceOrNewLine;\n\n                  case 7:\n                    return _context166.delegateYield(core.conditions.indentIfStartOfLine(newlineGroup(parseBody())), \"t0\", 8);\n\n                  case 8:\n                  case \"end\":\n                    return _context166.stop();\n                }\n              }\n            }, _marked134);\n          };\n\n          _marked134 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseLayout), _marked135 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseBody);\n          useNewLines = getUseNewlinesForNodes([getFirstOpenBraceTokenWithin(node, context), node.typeParameter]);\n          startInfo = createInfo(\"startMappedType\");\n          _context168.next = 7;\n          return startInfo;\n\n        case 7:\n          _context168.next = 9;\n          return \"{\";\n\n        case 9:\n          return _context168.delegateYield(parseLayout(), \"t0\", 10);\n\n        case 10:\n          _context168.next = 12;\n          return core.conditions.newlineIfMultipleLinesSpaceOrNewlineOtherwise({\n            startInfo: startInfo\n          });\n\n        case 12:\n          _context168.next = 14;\n          return \"}\";\n\n        case 14:\n        case \"end\":\n          return _context168.stop();\n      }\n    }\n  }, _marked136);\n}\n\nfunction parseOptionalType(node, context) {\n  return _regeneratorRuntime.wrap(function parseOptionalType$(_context169) {\n    while (1) {\n      switch (_context169.prev = _context169.next) {\n        case 0:\n          return _context169.delegateYield(parseNode(node.typeAnnotation, context), \"t0\", 1);\n\n        case 1:\n          _context169.next = 3;\n          return \"?\";\n\n        case 3:\n        case \"end\":\n          return _context169.stop();\n      }\n    }\n  }, _marked137);\n}\n\nfunction parseParenthesizedType(node, context) {\n  return _regeneratorRuntime.wrap(function parseParenthesizedType$(_context170) {\n    while (1) {\n      switch (_context170.prev = _context170.next) {\n        case 0:\n          return _context170.delegateYield(core.conditions.withIndentIfStartOfLineIndented(parseNodeInParens({\n            firstInnerNode: node.typeAnnotation,\n            innerIterable: parseNode(node.typeAnnotation, context),\n            context: context\n          })), \"t0\", 1);\n\n        case 1:\n        case \"end\":\n          return _context170.stop();\n      }\n    }\n  }, _marked138);\n}\n\nfunction parseQualifiedName(node, context) {\n  return _regeneratorRuntime.wrap(function parseQualifiedName$(_context171) {\n    while (1) {\n      switch (_context171.prev = _context171.next) {\n        case 0:\n          return _context171.delegateYield(parseNode(node.left, context), \"t0\", 1);\n\n        case 1:\n          _context171.next = 3;\n          return \".\";\n\n        case 3:\n          return _context171.delegateYield(parseNode(node.right, context), \"t1\", 4);\n\n        case 4:\n        case \"end\":\n          return _context171.stop();\n      }\n    }\n  }, _marked139);\n}\n\nfunction parseRestType(node, context) {\n  return _regeneratorRuntime.wrap(function parseRestType$(_context172) {\n    while (1) {\n      switch (_context172.prev = _context172.next) {\n        case 0:\n          _context172.next = 2;\n          return \"...\";\n\n        case 2:\n          return _context172.delegateYield(parseNode(node.typeAnnotation, context), \"t0\", 3);\n\n        case 3:\n        case \"end\":\n          return _context172.stop();\n      }\n    }\n  }, _marked140);\n}\n\nfunction parseTupleType(node, context) {\n  var _marked141, useNewlines, forceTrailingCommas, parseElements, getUseNewLines;\n\n  return _regeneratorRuntime.wrap(function parseTupleType$(_context176) {\n    while (1) {\n      switch (_context176.prev = _context176.next) {\n        case 0:\n          getUseNewLines = function _ref69() {\n            if (node.elementTypes.length === 0) return false;\n            return getUseNewlinesForNodes([getFirstOpenBracketTokenWithin(node, context), node.elementTypes[0]]);\n          };\n\n          parseElements = function _ref68() {\n            var _loop3, i;\n\n            return _regeneratorRuntime.wrap(function parseElements$(_context175) {\n              while (1) {\n                switch (_context175.prev = _context175.next) {\n                  case 0:\n                    if (!useNewlines) {\n                      _context175.next = 3;\n                      break;\n                    }\n\n                    _context175.next = 3;\n                    return core.Signal.NewLine;\n\n                  case 3:\n                    _loop3 =\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _loop3(i) {\n                      return _regeneratorRuntime.wrap(function _loop3$(_context174) {\n                        while (1) {\n                          switch (_context174.prev = _context174.next) {\n                            case 0:\n                              if (!(i > 0 && !useNewlines)) {\n                                _context174.next = 3;\n                                break;\n                              }\n\n                              _context174.next = 3;\n                              return core.Signal.SpaceOrNewLine;\n\n                            case 3:\n                              return _context174.delegateYield(core.conditions.indentIfStartOfLine(newlineGroup(parseNode(node.elementTypes[i], context, {\n                                innerParse:\n                                /*#__PURE__*/\n                                _regeneratorRuntime.mark(function innerParse(iterator) {\n                                  return _regeneratorRuntime.wrap(function innerParse$(_context173) {\n                                    while (1) {\n                                      switch (_context173.prev = _context173.next) {\n                                        case 0:\n                                          return _context173.delegateYield(iterator, \"t0\", 1);\n\n                                        case 1:\n                                          if (!(forceTrailingCommas || i < node.elementTypes.length - 1)) {\n                                            _context173.next = 4;\n                                            break;\n                                          }\n\n                                          _context173.next = 4;\n                                          return \",\";\n\n                                        case 4:\n                                        case \"end\":\n                                          return _context173.stop();\n                                      }\n                                    }\n                                  }, innerParse);\n                                })\n                              }))), \"t0\", 4);\n\n                            case 4:\n                              if (!useNewlines) {\n                                _context174.next = 7;\n                                break;\n                              }\n\n                              _context174.next = 7;\n                              return core.Signal.NewLine;\n\n                            case 7:\n                            case \"end\":\n                              return _context174.stop();\n                          }\n                        }\n                      }, _loop3);\n                    });\n                    i = 0;\n\n                  case 5:\n                    if (!(i < node.elementTypes.length)) {\n                      _context175.next = 10;\n                      break;\n                    }\n\n                    return _context175.delegateYield(_loop3(i), \"t0\", 7);\n\n                  case 7:\n                    i++;\n                    _context175.next = 5;\n                    break;\n\n                  case 10:\n                  case \"end\":\n                    return _context175.stop();\n                }\n              }\n            }, _marked141);\n          };\n\n          _marked141 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseElements);\n          useNewlines = getUseNewLines();\n          forceTrailingCommas = getForceTrailingCommas(context.config[\"tupleType.trailingCommas\"], useNewlines);\n          _context176.next = 7;\n          return \"[\";\n\n        case 7:\n          if (!(node.elementTypes.length > 0)) {\n            _context176.next = 9;\n            break;\n          }\n\n          return _context176.delegateYield(parseElements(), \"t0\", 9);\n\n        case 9:\n          _context176.next = 11;\n          return \"]\";\n\n        case 11:\n        case \"end\":\n          return _context176.stop();\n      }\n    }\n  }, _marked142);\n}\n\nfunction parseTypeAnnotation(node, context) {\n  return _regeneratorRuntime.wrap(function parseTypeAnnotation$(_context177) {\n    while (1) {\n      switch (_context177.prev = _context177.next) {\n        case 0:\n          return _context177.delegateYield(parseNode(node.typeAnnotation, context), \"t0\", 1);\n\n        case 1:\n        case \"end\":\n          return _context177.stop();\n      }\n    }\n  }, _marked143);\n}\n\nfunction parseTypeLiteral(node, context) {\n  return _regeneratorRuntime.wrap(function parseTypeLiteral$(_context178) {\n    while (1) {\n      switch (_context178.prev = _context178.next) {\n        case 0:\n          return _context178.delegateYield(parseObjectLikeNode({\n            node: node,\n            members: node.members,\n            context: context\n          }), \"t0\", 1);\n\n        case 1:\n        case \"end\":\n          return _context178.stop();\n      }\n    }\n  }, _marked144);\n}\n\nfunction parseTypeOperator(node, context) {\n  return _regeneratorRuntime.wrap(function parseTypeOperator$(_context179) {\n    while (1) {\n      switch (_context179.prev = _context179.next) {\n        case 0:\n          if (!node.operator) {\n            _context179.next = 3;\n            break;\n          }\n\n          _context179.next = 3;\n          return \"\".concat(node.operator, \" \");\n\n        case 3:\n          return _context179.delegateYield(parseNode(node.typeAnnotation, context), \"t0\", 4);\n\n        case 4:\n        case \"end\":\n          return _context179.stop();\n      }\n    }\n  }, _marked145);\n}\n\nfunction parseTypeParameter(node, context) {\n  return _regeneratorRuntime.wrap(function parseTypeParameter$(_context182) {\n    while (1) {\n      switch (_context182.prev = _context182.next) {\n        case 0:\n          _context182.next = 2;\n          return node.name;\n\n        case 2:\n          if (!node.constraint) {\n            _context182.next = 6;\n            break;\n          }\n\n          _context182.next = 5;\n          return core.Signal.SpaceOrNewLine;\n\n        case 5:\n          return _context182.delegateYield(core.conditions.indentIfStartOfLine(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee25() {\n            return _regeneratorRuntime.wrap(function _callee25$(_context180) {\n              while (1) {\n                switch (_context180.prev = _context180.next) {\n                  case 0:\n                    if (!(context.parent.type === \"TSMappedType\")) {\n                      _context180.next = 5;\n                      break;\n                    }\n\n                    _context180.next = 3;\n                    return \"in \";\n\n                  case 3:\n                    _context180.next = 7;\n                    break;\n\n                  case 5:\n                    _context180.next = 7;\n                    return \"extends \";\n\n                  case 7:\n                    return _context180.delegateYield(parseNode(node.constraint, context), \"t0\", 8);\n\n                  case 8:\n                  case \"end\":\n                    return _context180.stop();\n                }\n              }\n            }, _callee25);\n          })()), \"t0\", 6);\n\n        case 6:\n          if (!node.default) {\n            _context182.next = 10;\n            break;\n          }\n\n          _context182.next = 9;\n          return core.Signal.SpaceOrNewLine;\n\n        case 9:\n          return _context182.delegateYield(core.conditions.indentIfStartOfLine(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee26() {\n            return _regeneratorRuntime.wrap(function _callee26$(_context181) {\n              while (1) {\n                switch (_context181.prev = _context181.next) {\n                  case 0:\n                    _context181.next = 2;\n                    return \"= \";\n\n                  case 2:\n                    return _context181.delegateYield(parseNode(node.default, context), \"t0\", 3);\n\n                  case 3:\n                  case \"end\":\n                    return _context181.stop();\n                }\n              }\n            }, _callee26);\n          })()), \"t1\", 10);\n\n        case 10:\n        case \"end\":\n          return _context182.stop();\n      }\n    }\n  }, _marked146);\n}\n\nfunction parseTypePredicate(node, context) {\n  return _regeneratorRuntime.wrap(function parseTypePredicate$(_context183) {\n    while (1) {\n      switch (_context183.prev = _context183.next) {\n        case 0:\n          return _context183.delegateYield(parseNode(node.parameterName, context), \"t0\", 1);\n\n        case 1:\n          _context183.next = 3;\n          return \" is \";\n\n        case 3:\n          return _context183.delegateYield(parseNode(node.typeAnnotation, context), \"t1\", 4);\n\n        case 4:\n        case \"end\":\n          return _context183.stop();\n      }\n    }\n  }, _marked147);\n}\n\nfunction parseTypeQuery(node, context) {\n  return _regeneratorRuntime.wrap(function parseTypeQuery$(_context184) {\n    while (1) {\n      switch (_context184.prev = _context184.next) {\n        case 0:\n          _context184.next = 2;\n          return \"typeof \";\n\n        case 2:\n          return _context184.delegateYield(parseNode(node.exprName, context), \"t0\", 3);\n\n        case 3:\n        case \"end\":\n          return _context184.stop();\n      }\n    }\n  }, _marked148);\n}\n\nfunction parseTypeReference(node, context) {\n  return _regeneratorRuntime.wrap(function parseTypeReference$(_context185) {\n    while (1) {\n      switch (_context185.prev = _context185.next) {\n        case 0:\n          return _context185.delegateYield(parseNode(node.typeName, context), \"t0\", 1);\n\n        case 1:\n          return _context185.delegateYield(parseNode(node.typeParameters, context), \"t1\", 2);\n\n        case 2:\n        case \"end\":\n          return _context185.stop();\n      }\n    }\n  }, _marked149);\n}\n\nfunction parseUnionOrIntersectionType(node, context) {\n  var _marked150, useNewLines, separator, isAncestorParenthesizedType, isAncestorUnionOrIntersectionType, i, innerParse, getIsAncestorParenthesizedType;\n\n  return _regeneratorRuntime.wrap(function parseUnionOrIntersectionType$(_context187) {\n    while (1) {\n      switch (_context187.prev = _context187.next) {\n        case 0:\n          getIsAncestorParenthesizedType = function _ref71() {\n            for (var _i3 = context.parentStack.length - 1; _i3 >= 0; _i3--) {\n              switch (context.parentStack[_i3].type) {\n                case \"TSUnionType\":\n                case \"TSIntersectionType\":\n                  continue;\n\n                case \"TSParenthesizedType\":\n                  return true;\n\n                default:\n                  return false;\n              }\n            }\n\n            return false;\n          };\n\n          innerParse = function _ref70(index) {\n            return _regeneratorRuntime.wrap(function innerParse$(_context186) {\n              while (1) {\n                switch (_context186.prev = _context186.next) {\n                  case 0:\n                    if (!(index > 0)) {\n                      _context186.next = 3;\n                      break;\n                    }\n\n                    _context186.next = 3;\n                    return separator;\n\n                  case 3:\n                    return _context186.delegateYield(parseNode(node.types[index], context), \"t0\", 4);\n\n                  case 4:\n                  case \"end\":\n                    return _context186.stop();\n                }\n              }\n            }, _marked150);\n          };\n\n          _marked150 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(innerParse);\n          useNewLines = getUseNewlinesForNodes(node.types);\n          separator = node.type === \"TSUnionType\" ? \"| \" : \"& \";\n          isAncestorParenthesizedType = getIsAncestorParenthesizedType();\n          isAncestorUnionOrIntersectionType = context.parent.type === \"TSUnionType\" || context.parent.type === \"TSIntersectionType\";\n          i = 0;\n\n        case 8:\n          if (!(i < node.types.length)) {\n            _context187.next = 20;\n            break;\n          }\n\n          if (!(i > 0)) {\n            _context187.next = 12;\n            break;\n          }\n\n          _context187.next = 12;\n          return useNewLines ? core.Signal.NewLine : core.Signal.SpaceOrNewLine;\n\n        case 12:\n          if (!(isAncestorParenthesizedType || i == 0 && !isAncestorUnionOrIntersectionType)) {\n            _context187.next = 16;\n            break;\n          }\n\n          return _context187.delegateYield(innerParse(i), \"t0\", 14);\n\n        case 14:\n          _context187.next = 17;\n          break;\n\n        case 16:\n          return _context187.delegateYield(core.conditions.indentIfStartOfLine(innerParse(i)), \"t1\", 17);\n\n        case 17:\n          i++;\n          _context187.next = 8;\n          break;\n\n        case 20:\n        case \"end\":\n          return _context187.stop();\n      }\n    }\n  }, _marked151);\n}\n\nfunction parseJsxAttribute(node, context) {\n  return _regeneratorRuntime.wrap(function parseJsxAttribute$(_context188) {\n    while (1) {\n      switch (_context188.prev = _context188.next) {\n        case 0:\n          return _context188.delegateYield(parseNode(node.name, context), \"t0\", 1);\n\n        case 1:\n          _context188.next = 3;\n          return \"=\";\n\n        case 3:\n          return _context188.delegateYield(parseNode(node.value, context), \"t1\", 4);\n\n        case 4:\n        case \"end\":\n          return _context188.stop();\n      }\n    }\n  }, _marked152);\n}\n\nfunction parseJsxElement(node, context) {\n  return _regeneratorRuntime.wrap(function parseJsxElement$(_context189) {\n    while (1) {\n      switch (_context189.prev = _context189.next) {\n        case 0:\n          if (!(node.closingElement == null)) {\n            _context189.next = 4;\n            break;\n          }\n\n          return _context189.delegateYield(parseNode(node.openingElement, context), \"t0\", 2);\n\n        case 2:\n          _context189.next = 5;\n          break;\n\n        case 4:\n          return _context189.delegateYield(parseJsxWithOpeningAndClosing({\n            node: node,\n            children: node.children,\n            openingElement: node.openingElement,\n            closingElement: node.closingElement,\n            context: context\n          }), \"t1\", 5);\n\n        case 5:\n        case \"end\":\n          return _context189.stop();\n      }\n    }\n  }, _marked153);\n}\n\nfunction parseJsxEmptyExpression(node, context) {\n  return _regeneratorRuntime.wrap(function parseJsxEmptyExpression$(_context190) {\n    while (1) {\n      switch (_context190.prev = _context190.next) {\n        case 0:\n          if (!node.innerComments) {\n            _context190.next = 2;\n            break;\n          }\n\n          return _context190.delegateYield(parseCommentCollection(node.innerComments, undefined, context), \"t0\", 2);\n\n        case 2:\n        case \"end\":\n          return _context190.stop();\n      }\n    }\n  }, _marked154);\n}\n\nfunction parseJsxExpressionContainer(node, context) {\n  var surroundWithSpace;\n  return _regeneratorRuntime.wrap(function parseJsxExpressionContainer$(_context191) {\n    while (1) {\n      switch (_context191.prev = _context191.next) {\n        case 0:\n          surroundWithSpace = context.config[\"jsxExpressionContainer.spaceSurroundingExpression\"];\n          _context191.next = 3;\n          return \"{\";\n\n        case 3:\n          if (!surroundWithSpace) {\n            _context191.next = 6;\n            break;\n          }\n\n          _context191.next = 6;\n          return \" \";\n\n        case 6:\n          return _context191.delegateYield(parseNode(node.expression, context), \"t0\", 7);\n\n        case 7:\n          if (!surroundWithSpace) {\n            _context191.next = 10;\n            break;\n          }\n\n          _context191.next = 10;\n          return \" \";\n\n        case 10:\n          _context191.next = 12;\n          return \"}\";\n\n        case 12:\n        case \"end\":\n          return _context191.stop();\n      }\n    }\n  }, _marked155);\n}\n\nfunction parseJsxOpeningElement(node, context) {\n  var _marked157, isMultiLine, startInfo, parseAttributes, getIsMultiLine;\n\n  return _regeneratorRuntime.wrap(function parseJsxOpeningElement$(_context194) {\n    while (1) {\n      switch (_context194.prev = _context194.next) {\n        case 0:\n          getIsMultiLine = function _ref74() {\n            return getUseNewlinesForNodes([node.name, node.attributes[0]]);\n          };\n\n          parseAttributes = function _ref73() {\n            var _marked156, _iteratorNormalCompletion10, _didIteratorError10, _iteratorError10, _iterator10, _step10, attrib, parseAttrib;\n\n            return _regeneratorRuntime.wrap(function parseAttributes$(_context193) {\n              while (1) {\n                switch (_context193.prev = _context193.next) {\n                  case 0:\n                    parseAttrib = function _ref72(attrib) {\n                      return _regeneratorRuntime.wrap(function parseAttrib$(_context192) {\n                        while (1) {\n                          switch (_context192.prev = _context192.next) {\n                            case 0:\n                              if (!isMultiLine) {\n                                _context192.next = 5;\n                                break;\n                              }\n\n                              _context192.next = 3;\n                              return core.Signal.NewLine;\n\n                            case 3:\n                              _context192.next = 7;\n                              break;\n\n                            case 5:\n                              _context192.next = 7;\n                              return core.Signal.SpaceOrNewLine;\n\n                            case 7:\n                              return _context192.delegateYield(core.conditions.indentIfStartOfLine(parseNode(attrib, context)), \"t0\", 8);\n\n                            case 8:\n                            case \"end\":\n                              return _context192.stop();\n                          }\n                        }\n                      }, _marked156);\n                    };\n\n                    _marked156 =\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(parseAttrib);\n\n                    if (!(node.attributes.length === 0)) {\n                      _context193.next = 4;\n                      break;\n                    }\n\n                    return _context193.abrupt(\"return\");\n\n                  case 4:\n                    _iteratorNormalCompletion10 = true;\n                    _didIteratorError10 = false;\n                    _iteratorError10 = undefined;\n                    _context193.prev = 7;\n                    _iterator10 = node.attributes[Symbol.iterator]();\n\n                  case 9:\n                    if (_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done) {\n                      _context193.next = 15;\n                      break;\n                    }\n\n                    attrib = _step10.value;\n                    return _context193.delegateYield(parseAttrib(attrib), \"t0\", 12);\n\n                  case 12:\n                    _iteratorNormalCompletion10 = true;\n                    _context193.next = 9;\n                    break;\n\n                  case 15:\n                    _context193.next = 21;\n                    break;\n\n                  case 17:\n                    _context193.prev = 17;\n                    _context193.t1 = _context193[\"catch\"](7);\n                    _didIteratorError10 = true;\n                    _iteratorError10 = _context193.t1;\n\n                  case 21:\n                    _context193.prev = 21;\n                    _context193.prev = 22;\n\n                    if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n                      _iterator10.return();\n                    }\n\n                  case 24:\n                    _context193.prev = 24;\n\n                    if (!_didIteratorError10) {\n                      _context193.next = 27;\n                      break;\n                    }\n\n                    throw _iteratorError10;\n\n                  case 27:\n                    return _context193.finish(24);\n\n                  case 28:\n                    return _context193.finish(21);\n\n                  case 29:\n                    if (!isMultiLine) {\n                      _context193.next = 32;\n                      break;\n                    }\n\n                    _context193.next = 32;\n                    return core.Signal.NewLine;\n\n                  case 32:\n                  case \"end\":\n                    return _context193.stop();\n                }\n              }\n            }, _marked157, null, [[7, 17, 21, 29], [22,, 24, 28]]);\n          };\n\n          _marked157 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseAttributes);\n          isMultiLine = getIsMultiLine();\n          startInfo = createInfo(\"openingElementStartInfo\");\n          _context194.next = 7;\n          return startInfo;\n\n        case 7:\n          _context194.next = 9;\n          return \"<\";\n\n        case 9:\n          return _context194.delegateYield(parseNode(node.name, context), \"t0\", 10);\n\n        case 10:\n          return _context194.delegateYield(parseNode(node.typeParameters, context), \"t1\", 11);\n\n        case 11:\n          return _context194.delegateYield(parseAttributes(), \"t2\", 12);\n\n        case 12:\n          if (!node.selfClosing) {\n            _context194.next = 20;\n            break;\n          }\n\n          if (isMultiLine) {\n            _context194.next = 16;\n            break;\n          }\n\n          _context194.next = 16;\n          return \" \";\n\n        case 16:\n          _context194.next = 18;\n          return \"/\";\n\n        case 18:\n          _context194.next = 22;\n          break;\n\n        case 20:\n          _context194.next = 22;\n          return {\n            kind: core.PrintItemKind.Condition,\n            name: \"newlineIfHanging\",\n            condition: function condition(conditionContext) {\n              return core.conditionResolvers.isHanging(conditionContext, startInfo);\n            },\n            true: [core.Signal.NewLine]\n          };\n\n        case 22:\n          _context194.next = 24;\n          return \">\";\n\n        case 24:\n        case \"end\":\n          return _context194.stop();\n      }\n    }\n  }, _marked158);\n}\n\nfunction parseJsxClosingElement(node, context) {\n  return _regeneratorRuntime.wrap(function parseJsxClosingElement$(_context195) {\n    while (1) {\n      switch (_context195.prev = _context195.next) {\n        case 0:\n          _context195.next = 2;\n          return \"</\";\n\n        case 2:\n          return _context195.delegateYield(parseNode(node.name, context), \"t0\", 3);\n\n        case 3:\n          _context195.next = 5;\n          return \">\";\n\n        case 5:\n        case \"end\":\n          return _context195.stop();\n      }\n    }\n  }, _marked159);\n}\n\nfunction parseJsxFragment(node, context) {\n  return _regeneratorRuntime.wrap(function parseJsxFragment$(_context196) {\n    while (1) {\n      switch (_context196.prev = _context196.next) {\n        case 0:\n          return _context196.delegateYield(parseJsxWithOpeningAndClosing({\n            node: node,\n            children: node.children,\n            openingElement: node.openingFragment,\n            closingElement: node.closingFragment,\n            context: context\n          }), \"t0\", 1);\n\n        case 1:\n        case \"end\":\n          return _context196.stop();\n      }\n    }\n  }, _marked160);\n}\n\nfunction parseJsxOpeningFragment(node, context) {\n  return _regeneratorRuntime.wrap(function parseJsxOpeningFragment$(_context197) {\n    while (1) {\n      switch (_context197.prev = _context197.next) {\n        case 0:\n          _context197.next = 2;\n          return \"<>\";\n\n        case 2:\n        case \"end\":\n          return _context197.stop();\n      }\n    }\n  }, _marked161);\n}\n\nfunction parseJsxClosingFragment(node, context) {\n  return _regeneratorRuntime.wrap(function parseJsxClosingFragment$(_context198) {\n    while (1) {\n      switch (_context198.prev = _context198.next) {\n        case 0:\n          _context198.next = 2;\n          return \"</>\";\n\n        case 2:\n        case \"end\":\n          return _context198.stop();\n      }\n    }\n  }, _marked162);\n}\n\nfunction parseJsxIdentifier(node, context) {\n  return _regeneratorRuntime.wrap(function parseJsxIdentifier$(_context199) {\n    while (1) {\n      switch (_context199.prev = _context199.next) {\n        case 0:\n          _context199.next = 2;\n          return node.name;\n\n        case 2:\n        case \"end\":\n          return _context199.stop();\n      }\n    }\n  }, _marked163);\n}\n\nfunction parseJsxMemberExpression(node, context) {\n  return _regeneratorRuntime.wrap(function parseJsxMemberExpression$(_context200) {\n    while (1) {\n      switch (_context200.prev = _context200.next) {\n        case 0:\n          return _context200.delegateYield(parseNode(node.object, context), \"t0\", 1);\n\n        case 1:\n          _context200.next = 3;\n          return \".\";\n\n        case 3:\n          return _context200.delegateYield(parseNode(node.property, context), \"t1\", 4);\n\n        case 4:\n        case \"end\":\n          return _context200.stop();\n      }\n    }\n  }, _marked164);\n}\n\nfunction parseJsxNamespacedName(node, context) {\n  return _regeneratorRuntime.wrap(function parseJsxNamespacedName$(_context201) {\n    while (1) {\n      switch (_context201.prev = _context201.next) {\n        case 0:\n          return _context201.delegateYield(parseNode(node.namespace, context), \"t0\", 1);\n\n        case 1:\n          _context201.next = 3;\n          return \":\";\n\n        case 3:\n          return _context201.delegateYield(parseNode(node.name, context), \"t1\", 4);\n\n        case 4:\n        case \"end\":\n          return _context201.stop();\n      }\n    }\n  }, _marked165);\n}\n\nfunction parseJsxSpreadAttribute(node, context) {\n  return _regeneratorRuntime.wrap(function parseJsxSpreadAttribute$(_context202) {\n    while (1) {\n      switch (_context202.prev = _context202.next) {\n        case 0:\n          _context202.next = 2;\n          return \"{...\";\n\n        case 2:\n          return _context202.delegateYield(parseNode(node.argument, context), \"t0\", 3);\n\n        case 3:\n          _context202.next = 5;\n          return \"}\";\n\n        case 5:\n        case \"end\":\n          return _context202.stop();\n      }\n    }\n  }, _marked166);\n}\n\nfunction parseJsxSpreadChild(node, context) {\n  return _regeneratorRuntime.wrap(function parseJsxSpreadChild$(_context203) {\n    while (1) {\n      switch (_context203.prev = _context203.next) {\n        case 0:\n          _context203.next = 2;\n          return \"{...\";\n\n        case 2:\n          return _context203.delegateYield(parseNode(node.expression, context), \"t0\", 3);\n\n        case 3:\n          _context203.next = 5;\n          return \"}\";\n\n        case 5:\n        case \"end\":\n          return _context203.stop();\n      }\n    }\n  }, _marked167);\n}\n\nfunction parseJsxText(node, context) {\n  var lines, i, lineText;\n  return _regeneratorRuntime.wrap(function parseJsxText$(_context204) {\n    while (1) {\n      switch (_context204.prev = _context204.next) {\n        case 0:\n          lines = getJsxText(node).trim().split(/\\r?\\n/g).map(function (line) {\n            return line.trimRight();\n          });\n          i = 0;\n\n        case 2:\n          if (!(i < lines.length)) {\n            _context204.next = 14;\n            break;\n          }\n\n          lineText = lines[i];\n\n          if (!(i > 0)) {\n            _context204.next = 8;\n            break;\n          }\n\n          if (!(lineText.length > 0 || i === 1 || lines[i - 1].length === 0 && lines[i - 2].length > 0)) {\n            _context204.next = 8;\n            break;\n          }\n\n          _context204.next = 8;\n          return core.Signal.NewLine;\n\n        case 8:\n          if (!(lineText.length > 0)) {\n            _context204.next = 11;\n            break;\n          }\n\n          _context204.next = 11;\n          return lineText;\n\n        case 11:\n          i++;\n          _context204.next = 2;\n          break;\n\n        case 14:\n        case \"end\":\n          return _context204.stop();\n      }\n    }\n  }, _marked168);\n}\n\nfunction parseMemberedBody(opts) {\n  var _marked169, node, members, context, startHeaderInfo, bracePosition, shouldUseBlankLine, trailingCommas, parseBody;\n\n  return _regeneratorRuntime.wrap(function parseMemberedBody$(_context206) {\n    while (1) {\n      switch (_context206.prev = _context206.next) {\n        case 0:\n          parseBody = function _ref75() {\n            return _regeneratorRuntime.wrap(function parseBody$(_context205) {\n              while (1) {\n                switch (_context205.prev = _context205.next) {\n                  case 0:\n                    if (!(members.length > 0 || node.innerComments != null && node.innerComments.some(function (n) {\n                      return !context.handledComments.has(n);\n                    }))) {\n                      _context205.next = 3;\n                      break;\n                    }\n\n                    _context205.next = 3;\n                    return core.Signal.NewLine;\n\n                  case 3:\n                    return _context205.delegateYield(parseStatementOrMembers({\n                      items: members,\n                      innerComments: node.innerComments,\n                      lastNode: undefined,\n                      context: context,\n                      shouldUseBlankLine: shouldUseBlankLine,\n                      trailingCommas: trailingCommas\n                    }), \"t0\", 4);\n\n                  case 4:\n                  case \"end\":\n                    return _context205.stop();\n                }\n              }\n            }, _marked169);\n          };\n\n          _marked169 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseBody);\n          node = opts.node, members = opts.members, context = opts.context, startHeaderInfo = opts.startHeaderInfo, bracePosition = opts.bracePosition, shouldUseBlankLine = opts.shouldUseBlankLine, trailingCommas = opts.trailingCommas;\n          return _context206.delegateYield(parseBraceSeparator({\n            bracePosition: bracePosition,\n            bodyNode: getFirstOpenBraceTokenWithin(node, context) || node,\n            startHeaderInfo: startHeaderInfo,\n            context: context\n          }), \"t0\", 4);\n\n        case 4:\n          _context206.next = 6;\n          return \"{\";\n\n        case 6:\n          return _context206.delegateYield(parseFirstLineTrailingComments(node, members, context), \"t1\", 7);\n\n        case 7:\n          return _context206.delegateYield(withIndent(parseBody()), \"t2\", 8);\n\n        case 8:\n          _context206.next = 10;\n          return core.Signal.NewLine;\n\n        case 10:\n          _context206.next = 12;\n          return \"}\";\n\n        case 12:\n        case \"end\":\n          return _context206.stop();\n      }\n    }\n  }, _marked170);\n}\n\nfunction parseJsxWithOpeningAndClosing(opts) {\n  var node, allChildren, openingElement, closingElement, context, children, useMultilines, startInfo, endInfo, getUseMultilines;\n  return _regeneratorRuntime.wrap(function parseJsxWithOpeningAndClosing$(_context207) {\n    while (1) {\n      switch (_context207.prev = _context207.next) {\n        case 0:\n          getUseMultilines = function _ref76() {\n            var firstChild = allChildren[0];\n            if (firstChild != null && firstChild.type === \"JSXText\" && firstChild.value.indexOf(\"\\n\") >= 0) return true;\n            return getUseNewlinesForNodes([openingElement, children[0] || closingElement]);\n          };\n\n          node = opts.node, allChildren = opts.children, openingElement = opts.openingElement, closingElement = opts.closingElement, context = opts.context;\n          children = allChildren.filter(function (c) {\n            return c.type !== \"JSXText\" || !isStringEmptyOrWhiteSpace(c.value);\n          });\n          useMultilines = getUseMultilines();\n          startInfo = createInfo(\"startInfo\");\n          endInfo = createInfo(\"endInfo\");\n          _context207.next = 8;\n          return startInfo;\n\n        case 8:\n          return _context207.delegateYield(parseNode(openingElement, context), \"t0\", 9);\n\n        case 9:\n          return _context207.delegateYield(parseJsxChildren({\n            node: node,\n            children: children,\n            context: context,\n            parentStartInfo: startInfo,\n            parentEndInfo: endInfo,\n            useMultilines: useMultilines\n          }), \"t1\", 10);\n\n        case 10:\n          return _context207.delegateYield(parseNode(closingElement, context), \"t2\", 11);\n\n        case 11:\n          _context207.next = 13;\n          return endInfo;\n\n        case 13:\n        case \"end\":\n          return _context207.stop();\n      }\n    }\n  }, _marked171);\n}\n\nfunction parseJsxChildren(options) {\n  var _marked172, _marked173, node, children, context, parentStartInfo, parentEndInfo, useMultilines, parsedChildren, parseForNewLines, parseForSingleLine, shouldUseSpace;\n\n  return _regeneratorRuntime.wrap(function parseJsxChildren$(_context210) {\n    while (1) {\n      switch (_context210.prev = _context210.next) {\n        case 0:\n          shouldUseSpace = function _ref79(previousElement, nextElement) {\n            if (previousElement.type === \"JSXText\") return getJsxText(previousElement).endsWith(\" \");\n            if (nextElement.type === \"JSXText\") return getJsxText(nextElement).startsWith(\" \");\n            return false;\n          };\n\n          parseForSingleLine = function _ref78() {\n            var i;\n            return _regeneratorRuntime.wrap(function parseForSingleLine$(_context209) {\n              while (1) {\n                switch (_context209.prev = _context209.next) {\n                  case 0:\n                    if (!(children.length === 0)) {\n                      _context209.next = 5;\n                      break;\n                    }\n\n                    _context209.next = 3;\n                    return core.Signal.PossibleNewLine;\n\n                  case 3:\n                    _context209.next = 16;\n                    break;\n\n                  case 5:\n                    i = 0;\n\n                  case 6:\n                    if (!(i < children.length)) {\n                      _context209.next = 16;\n                      break;\n                    }\n\n                    if (!(i > 0 && shouldUseSpace(children[i - 1], children[i]))) {\n                      _context209.next = 10;\n                      break;\n                    }\n\n                    _context209.next = 10;\n                    return core.Signal.SpaceOrNewLine;\n\n                  case 10:\n                    return _context209.delegateYield(parsedChildren[i][1], \"t0\", 11);\n\n                  case 11:\n                    _context209.next = 13;\n                    return core.Signal.PossibleNewLine;\n\n                  case 13:\n                    i++;\n                    _context209.next = 6;\n                    break;\n\n                  case 16:\n                  case \"end\":\n                    return _context209.stop();\n                }\n              }\n            }, _marked173);\n          };\n\n          parseForNewLines = function _ref77() {\n            return _regeneratorRuntime.wrap(function parseForNewLines$(_context208) {\n              while (1) {\n                switch (_context208.prev = _context208.next) {\n                  case 0:\n                    _context208.next = 2;\n                    return core.Signal.NewLine;\n\n                  case 2:\n                    return _context208.delegateYield(withIndent(parseStatementOrMembers({\n                      context: context,\n                      innerComments: node.innerComments,\n                      items: parsedChildren,\n                      lastNode: undefined,\n                      shouldUseSpace: shouldUseSpace,\n                      shouldUseNewLine: function shouldUseNewLine(previousElement, nextElement) {\n                        if (nextElement.type === \"JSXText\") return !hasNoNewlinesInLeadingWhitespace(getJsxText(nextElement));\n                        if (previousElement.type === \"JSXText\") return !hasNoNewlinesInTrailingWhitespace(getJsxText(previousElement));\n                        return true;\n                      },\n                      shouldUseBlankLine: function shouldUseBlankLine(previousElement, nextElement) {\n                        if (previousElement.type === \"JSXText\") return hasNewLineOccurrencesInTrailingWhitespace(getJsxText(previousElement), 2);\n                        if (nextElement.type === \"JSXText\") return hasNewlineOccurrencesInLeadingWhitespace(getJsxText(nextElement), 2);\n                        return hasSeparatingBlankLine(previousElement, nextElement);\n                      }\n                    })), \"t0\", 3);\n\n                  case 3:\n                    if (!(children.length > 0)) {\n                      _context208.next = 6;\n                      break;\n                    }\n\n                    _context208.next = 6;\n                    return core.Signal.NewLine;\n\n                  case 6:\n                  case \"end\":\n                    return _context208.stop();\n                }\n              }\n            }, _marked172);\n          };\n\n          _marked172 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseForNewLines), _marked173 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseForSingleLine);\n          node = options.node, children = options.children, context = options.context, parentStartInfo = options.parentStartInfo, parentEndInfo = options.parentEndInfo, useMultilines = options.useMultilines;\n          parsedChildren = children.map(function (c) {\n            return [c, core.makeIterableRepeatable(parseNode(c, context))];\n          });\n\n          if (!useMultilines) {\n            _context210.next = 10;\n            break;\n          }\n\n          return _context210.delegateYield(parseForNewLines(), \"t0\", 8);\n\n        case 8:\n          _context210.next = 12;\n          break;\n\n        case 10:\n          _context210.next = 12;\n          return {\n            kind: core.PrintItemKind.Condition,\n            name: \"JsxChildrenNewLinesOrNot\",\n            condition: function condition(conditionContext) {\n              if (core.conditionResolvers.isMultipleLines(conditionContext, parentStartInfo, conditionContext.writerInfo)) return true;\n              return core.conditionResolvers.isMultipleLines(conditionContext, parentStartInfo, parentEndInfo);\n            },\n            true: parseForNewLines(),\n            false: parseForSingleLine()\n          };\n\n        case 12:\n        case \"end\":\n          return _context210.stop();\n      }\n    }\n  }, _marked174);\n}\n\nfunction parseStatements(block, context) {\n  var lastNode, _iteratorNormalCompletion11, _didIteratorError11, _iteratorError11, _iterator11, _step11, directive, statements;\n\n  return _regeneratorRuntime.wrap(function parseStatements$(_context211) {\n    while (1) {\n      switch (_context211.prev = _context211.next) {\n        case 0:\n          _iteratorNormalCompletion11 = true;\n          _didIteratorError11 = false;\n          _iteratorError11 = undefined;\n          _context211.prev = 3;\n          _iterator11 = block.directives[Symbol.iterator]();\n\n        case 5:\n          if (_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done) {\n            _context211.next = 18;\n            break;\n          }\n\n          directive = _step11.value;\n\n          if (!(lastNode != null)) {\n            _context211.next = 13;\n            break;\n          }\n\n          _context211.next = 10;\n          return core.Signal.NewLine;\n\n        case 10:\n          if (!hasSeparatingBlankLine(lastNode, directive)) {\n            _context211.next = 13;\n            break;\n          }\n\n          _context211.next = 13;\n          return core.Signal.NewLine;\n\n        case 13:\n          return _context211.delegateYield(parseNode(directive, context), \"t0\", 14);\n\n        case 14:\n          lastNode = directive;\n\n        case 15:\n          _iteratorNormalCompletion11 = true;\n          _context211.next = 5;\n          break;\n\n        case 18:\n          _context211.next = 24;\n          break;\n\n        case 20:\n          _context211.prev = 20;\n          _context211.t1 = _context211[\"catch\"](3);\n          _didIteratorError11 = true;\n          _iteratorError11 = _context211.t1;\n\n        case 24:\n          _context211.prev = 24;\n          _context211.prev = 25;\n\n          if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n            _iterator11.return();\n          }\n\n        case 27:\n          _context211.prev = 27;\n\n          if (!_didIteratorError11) {\n            _context211.next = 30;\n            break;\n          }\n\n          throw _iteratorError11;\n\n        case 30:\n          return _context211.finish(27);\n\n        case 31:\n          return _context211.finish(24);\n\n        case 32:\n          statements = block.body;\n          return _context211.delegateYield(parseStatementOrMembers({\n            items: statements,\n            innerComments: block.innerComments,\n            lastNode: lastNode,\n            context: context,\n            shouldUseBlankLine: function shouldUseBlankLine(previousStatement, nextStatement) {\n              return hasSeparatingBlankLine(previousStatement, nextStatement);\n            }\n          }), \"t2\", 34);\n\n        case 34:\n        case \"end\":\n          return _context211.stop();\n      }\n    }\n  }, _marked175, null, [[3, 20, 24, 32], [25,, 27, 31]]);\n}\n\nfunction parseStatementOrMembers(opts) {\n  var items, innerComments, context, shouldUseSpace, shouldUseNewLine, shouldUseBlankLine, trailingCommas, lastNode, _iteratorNormalCompletion12, _didIteratorError12, _iteratorError12, _loop4, _iterator12, _step12, result;\n\n  return _regeneratorRuntime.wrap(function parseStatementOrMembers$(_context214) {\n    while (1) {\n      switch (_context214.prev = _context214.next) {\n        case 0:\n          items = opts.items, innerComments = opts.innerComments, context = opts.context, shouldUseSpace = opts.shouldUseSpace, shouldUseNewLine = opts.shouldUseNewLine, shouldUseBlankLine = opts.shouldUseBlankLine, trailingCommas = opts.trailingCommas;\n          lastNode = opts.lastNode;\n          _iteratorNormalCompletion12 = true;\n          _didIteratorError12 = false;\n          _iteratorError12 = undefined;\n          _context214.prev = 5;\n          _loop4 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _loop4() {\n            var itemOrArray, item, parsedNode, endInfo;\n            return _regeneratorRuntime.wrap(function _loop4$(_context213) {\n              while (1) {\n                switch (_context213.prev = _context213.next) {\n                  case 0:\n                    itemOrArray = _step12.value;\n                    item = void 0;\n                    parsedNode = void 0;\n\n                    if (itemOrArray instanceof Array) {\n                      item = itemOrArray[0];\n                      parsedNode = itemOrArray[1];\n                    } else {\n                      item = itemOrArray;\n                    }\n\n                    if (!(lastNode != null)) {\n                      _context213.next = 16;\n                      break;\n                    }\n\n                    if (!(shouldUseNewLine == null || shouldUseNewLine(lastNode, item))) {\n                      _context213.next = 13;\n                      break;\n                    }\n\n                    _context213.next = 8;\n                    return core.Signal.NewLine;\n\n                  case 8:\n                    if (!shouldUseBlankLine(lastNode, item)) {\n                      _context213.next = 11;\n                      break;\n                    }\n\n                    _context213.next = 11;\n                    return core.Signal.NewLine;\n\n                  case 11:\n                    _context213.next = 16;\n                    break;\n\n                  case 13:\n                    if (!(shouldUseSpace != null && shouldUseSpace(lastNode, item))) {\n                      _context213.next = 16;\n                      break;\n                    }\n\n                    _context213.next = 16;\n                    return core.Signal.SpaceOrNewLine;\n\n                  case 16:\n                    endInfo = createInfo(\"endStatementOrMemberInfo\");\n                    context.endStatementOrMemberInfo.push(endInfo);\n                    return _context213.delegateYield(parsedNode || parseNode(item, context, {\n                      innerParse:\n                      /*#__PURE__*/\n                      _regeneratorRuntime.mark(function innerParse(iterator) {\n                        var _forceTrailingCommas;\n\n                        return _regeneratorRuntime.wrap(function innerParse$(_context212) {\n                          while (1) {\n                            switch (_context212.prev = _context212.next) {\n                              case 0:\n                                return _context212.delegateYield(iterator, \"t0\", 1);\n\n                              case 1:\n                                if (!trailingCommas) {\n                                  _context212.next = 6;\n                                  break;\n                                }\n\n                                _forceTrailingCommas = getForceTrailingCommas(trailingCommas, true);\n\n                                if (!(_forceTrailingCommas || items[items.length - 1] !== item)) {\n                                  _context212.next = 6;\n                                  break;\n                                }\n\n                                _context212.next = 6;\n                                return \",\";\n\n                              case 6:\n                              case \"end\":\n                                return _context212.stop();\n                            }\n                          }\n                        }, innerParse);\n                      })\n                    }), \"t0\", 19);\n\n                  case 19:\n                    _context213.next = 21;\n                    return context.endStatementOrMemberInfo.popOrThrow();\n\n                  case 21:\n                    lastNode = item;\n\n                  case 22:\n                  case \"end\":\n                    return _context213.stop();\n                }\n              }\n            }, _loop4);\n          });\n          _iterator12 = items[Symbol.iterator]();\n\n        case 8:\n          if (_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done) {\n            _context214.next = 13;\n            break;\n          }\n\n          return _context214.delegateYield(_loop4(), \"t0\", 10);\n\n        case 10:\n          _iteratorNormalCompletion12 = true;\n          _context214.next = 8;\n          break;\n\n        case 13:\n          _context214.next = 19;\n          break;\n\n        case 15:\n          _context214.prev = 15;\n          _context214.t1 = _context214[\"catch\"](5);\n          _didIteratorError12 = true;\n          _iteratorError12 = _context214.t1;\n\n        case 19:\n          _context214.prev = 19;\n          _context214.prev = 20;\n\n          if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n            _iterator12.return();\n          }\n\n        case 22:\n          _context214.prev = 22;\n\n          if (!_didIteratorError12) {\n            _context214.next = 25;\n            break;\n          }\n\n          throw _iteratorError12;\n\n        case 25:\n          return _context214.finish(22);\n\n        case 26:\n          return _context214.finish(19);\n\n        case 27:\n          if (!(lastNode != null)) {\n            _context214.next = 29;\n            break;\n          }\n\n          return _context214.delegateYield(parseTrailingCommentsAsStatements(lastNode, context), \"t2\", 29);\n\n        case 29:\n          if (!(innerComments != null)) {\n            _context214.next = 35;\n            break;\n          }\n\n          result = Array.from(parseCommentCollection(innerComments, undefined, context));\n\n          if (!(result.length > 0 && lastNode != null)) {\n            _context214.next = 34;\n            break;\n          }\n\n          _context214.next = 34;\n          return core.Signal.NewLine;\n\n        case 34:\n          return _context214.delegateYield(result, \"t3\", 35);\n\n        case 35:\n        case \"end\":\n          return _context214.stop();\n      }\n    }\n  }, _marked176, null, [[5, 15, 19, 27], [20,, 22, 26]]);\n}\n\nfunction parseTrailingCommentsAsStatements(node, context) {\n  var unhandledComments;\n  return _regeneratorRuntime.wrap(function parseTrailingCommentsAsStatements$(_context215) {\n    while (1) {\n      switch (_context215.prev = _context215.next) {\n        case 0:\n          unhandledComments = getTrailingCommentsAsStatements(node, context);\n          return _context215.delegateYield(parseCommentCollection(unhandledComments, node, context), \"t0\", 2);\n\n        case 2:\n        case \"end\":\n          return _context215.stop();\n      }\n    }\n  }, _marked177);\n}\n\nfunction getTrailingCommentsAsStatements(node, context) {\n  var _marked178, _iteratorNormalCompletion13, _didIteratorError13, _iteratorError13, _iterator13, _step13, comment, getPossibleComments;\n\n  return _regeneratorRuntime.wrap(function getTrailingCommentsAsStatements$(_context217) {\n    while (1) {\n      switch (_context217.prev = _context217.next) {\n        case 0:\n          getPossibleComments = function _ref80() {\n            var nodeBody;\n            return _regeneratorRuntime.wrap(function getPossibleComments$(_context216) {\n              while (1) {\n                switch (_context216.prev = _context216.next) {\n                  case 0:\n                    if (!node.trailingComments) {\n                      _context216.next = 2;\n                      break;\n                    }\n\n                    return _context216.delegateYield(node.trailingComments, \"t0\", 2);\n\n                  case 2:\n                    nodeBody = node.body;\n\n                    if (!(nodeBody && nodeBody.trailingComments)) {\n                      _context216.next = 5;\n                      break;\n                    }\n\n                    return _context216.delegateYield(nodeBody.trailingComments, \"t1\", 5);\n\n                  case 5:\n                  case \"end\":\n                    return _context216.stop();\n                }\n              }\n            }, _marked178);\n          };\n\n          _marked178 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(getPossibleComments);\n          _iteratorNormalCompletion13 = true;\n          _didIteratorError13 = false;\n          _iteratorError13 = undefined;\n          _context217.prev = 5;\n          _iterator13 = getPossibleComments()[Symbol.iterator]();\n\n        case 7:\n          if (_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done) {\n            _context217.next = 15;\n            break;\n          }\n\n          comment = _step13.value;\n\n          if (!(!context.handledComments.has(comment) && node.loc.end.line < comment.loc.end.line)) {\n            _context217.next = 12;\n            break;\n          }\n\n          _context217.next = 12;\n          return comment;\n\n        case 12:\n          _iteratorNormalCompletion13 = true;\n          _context217.next = 7;\n          break;\n\n        case 15:\n          _context217.next = 21;\n          break;\n\n        case 17:\n          _context217.prev = 17;\n          _context217.t0 = _context217[\"catch\"](5);\n          _didIteratorError13 = true;\n          _iteratorError13 = _context217.t0;\n\n        case 21:\n          _context217.prev = 21;\n          _context217.prev = 22;\n\n          if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n            _iterator13.return();\n          }\n\n        case 24:\n          _context217.prev = 24;\n\n          if (!_didIteratorError13) {\n            _context217.next = 27;\n            break;\n          }\n\n          throw _iteratorError13;\n\n        case 27:\n          return _context217.finish(24);\n\n        case 28:\n          return _context217.finish(21);\n\n        case 29:\n        case \"end\":\n          return _context217.stop();\n      }\n    }\n  }, _marked179, null, [[5, 17, 21, 29], [22,, 24, 28]]);\n}\n\nfunction parseParametersOrArguments(options) {\n  var _marked180, nodes, context, customCloseParen, _options$forceMultiLi, forceMultiLineWhenMultipleLines, startInfo, endInfo, useNewLines, parseItems, parseParameterList, multiLineOrHangingConditionResolver, getUseNewLines;\n\n  return _regeneratorRuntime.wrap(function parseParametersOrArguments$(_context219) {\n    while (1) {\n      switch (_context219.prev = _context219.next) {\n        case 0:\n          getUseNewLines = function _ref84() {\n            if (nodes.length === 0) return false;\n            return getUseNewlinesForNodes([getOpenParenToken(), nodes[0]]);\n\n            function getOpenParenToken() {\n              var paramHasParen = hasParentheses(nodes[0]);\n              var firstOpenParen = getFirstOpenParenTokenBefore(nodes[0], context);\n              if (firstOpenParen != null && firstOpenParen.start < context.parent.start) return undefined;\n              return paramHasParen ? getFirstOpenParenTokenBefore(firstOpenParen, context) : firstOpenParen;\n            }\n          };\n\n          multiLineOrHangingConditionResolver = function _ref83(conditionContext) {\n            if (useNewLines) return true;\n            if (forceMultiLineWhenMultipleLines && !isSingleFunction()) return core.conditionResolvers.isMultipleLines(conditionContext, startInfo, endInfo);\n            return false;\n\n            function isSingleFunction() {\n              return nodes.length === 1 && (nodes[0].type === \"FunctionExpression\" || nodes[0].type === \"ArrowFunctionExpression\");\n            }\n          };\n\n          parseParameterList = function _ref82() {\n            return parseCommaSeparatedValues({\n              values: nodes,\n              multiLineOrHangingConditionResolver: multiLineOrHangingConditionResolver,\n              context: context\n            });\n          };\n\n          parseItems = function _ref81() {\n            var paramList;\n            return _regeneratorRuntime.wrap(function parseItems$(_context218) {\n              while (1) {\n                switch (_context218.prev = _context218.next) {\n                  case 0:\n                    _context218.next = 2;\n                    return startInfo;\n\n                  case 2:\n                    _context218.next = 4;\n                    return \"(\";\n\n                  case 4:\n                    paramList = core.makeIterableRepeatable(parseParameterList());\n                    _context218.next = 7;\n                    return {\n                      kind: core.PrintItemKind.Condition,\n                      name: \"multiLineOrHanging\",\n                      condition: multiLineOrHangingConditionResolver,\n                      true: surroundWithNewLines(withIndent(paramList)),\n                      false: paramList\n                    };\n\n                  case 7:\n                    if (!customCloseParen) {\n                      _context218.next = 11;\n                      break;\n                    }\n\n                    return _context218.delegateYield(customCloseParen, \"t0\", 9);\n\n                  case 9:\n                    _context218.next = 13;\n                    break;\n\n                  case 11:\n                    _context218.next = 13;\n                    return \")\";\n\n                  case 13:\n                    _context218.next = 15;\n                    return endInfo;\n\n                  case 15:\n                  case \"end\":\n                    return _context218.stop();\n                }\n              }\n            }, _marked180);\n          };\n\n          _marked180 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseItems);\n          nodes = options.nodes, context = options.context, customCloseParen = options.customCloseParen, _options$forceMultiLi = options.forceMultiLineWhenMultipleLines, forceMultiLineWhenMultipleLines = _options$forceMultiLi === void 0 ? false : _options$forceMultiLi;\n          startInfo = createInfo(\"startParamsOrArgs\");\n          endInfo = createInfo(\"endParamsOrArgs\");\n          useNewLines = getUseNewLines();\n          return _context219.delegateYield(parseItems(), \"t0\", 10);\n\n        case 10:\n        case \"end\":\n          return _context219.stop();\n      }\n    }\n  }, _marked181);\n}\n\nfunction parseCommaSeparatedValues(options) {\n  var _marked182, values, context, multiLineOrHangingConditionResolver, _loop5, i, parseValue;\n\n  return _regeneratorRuntime.wrap(function parseCommaSeparatedValues$(_context225) {\n    while (1) {\n      switch (_context225.prev = _context225.next) {\n        case 0:\n          parseValue = function _ref85(param, hasComma) {\n            return _regeneratorRuntime.wrap(function parseValue$(_context221) {\n              while (1) {\n                switch (_context221.prev = _context221.next) {\n                  case 0:\n                    return _context221.delegateYield(newlineGroup(parseNode(param, context, {\n                      innerParse:\n                      /*#__PURE__*/\n                      _regeneratorRuntime.mark(function innerParse(iterator) {\n                        return _regeneratorRuntime.wrap(function innerParse$(_context220) {\n                          while (1) {\n                            switch (_context220.prev = _context220.next) {\n                              case 0:\n                                return _context220.delegateYield(iterator, \"t0\", 1);\n\n                              case 1:\n                                if (!hasComma) {\n                                  _context220.next = 4;\n                                  break;\n                                }\n\n                                _context220.next = 4;\n                                return \",\";\n\n                              case 4:\n                              case \"end\":\n                                return _context220.stop();\n                            }\n                          }\n                        }, innerParse);\n                      })\n                    })), \"t0\", 1);\n\n                  case 1:\n                  case \"end\":\n                    return _context221.stop();\n                }\n              }\n            }, _marked182);\n          };\n\n          _marked182 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseValue);\n          values = options.values, context = options.context, multiLineOrHangingConditionResolver = options.multiLineOrHangingConditionResolver;\n          _loop5 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _loop5(i) {\n            var param, hasComma, parsedParam;\n            return _regeneratorRuntime.wrap(function _loop5$(_context224) {\n              while (1) {\n                switch (_context224.prev = _context224.next) {\n                  case 0:\n                    param = values[i];\n                    hasComma = i < values.length - 1;\n                    parsedParam = core.makeIterableRepeatable(newlineGroup(parseValue(param, hasComma)));\n\n                    if (!(i === 0)) {\n                      _context224.next = 7;\n                      break;\n                    }\n\n                    return _context224.delegateYield(parsedParam, \"t0\", 5);\n\n                  case 5:\n                    _context224.next = 9;\n                    break;\n\n                  case 7:\n                    _context224.next = 9;\n                    return {\n                      kind: core.PrintItemKind.Condition,\n                      name: \"multiLineOrHangingCondition\",\n                      condition: multiLineOrHangingConditionResolver,\n                      true:\n                      /*#__PURE__*/\n                      _regeneratorRuntime.mark(function _callee27() {\n                        return _regeneratorRuntime.wrap(function _callee27$(_context222) {\n                          while (1) {\n                            switch (_context222.prev = _context222.next) {\n                              case 0:\n                                _context222.next = 2;\n                                return core.Signal.NewLine;\n\n                              case 2:\n                                return _context222.delegateYield(parsedParam, \"t0\", 3);\n\n                              case 3:\n                              case \"end\":\n                                return _context222.stop();\n                            }\n                          }\n                        }, _callee27);\n                      })(),\n                      false:\n                      /*#__PURE__*/\n                      _regeneratorRuntime.mark(function _callee28() {\n                        return _regeneratorRuntime.wrap(function _callee28$(_context223) {\n                          while (1) {\n                            switch (_context223.prev = _context223.next) {\n                              case 0:\n                                _context223.next = 2;\n                                return core.Signal.SpaceOrNewLine;\n\n                              case 2:\n                                return _context223.delegateYield(core.conditions.indentIfStartOfLine(parsedParam), \"t0\", 3);\n\n                              case 3:\n                              case \"end\":\n                                return _context223.stop();\n                            }\n                          }\n                        }, _callee28);\n                      })()\n                    };\n\n                  case 9:\n                  case \"end\":\n                    return _context224.stop();\n                }\n              }\n            }, _loop5);\n          });\n          i = 0;\n\n        case 5:\n          if (!(i < values.length)) {\n            _context225.next = 10;\n            break;\n          }\n\n          return _context225.delegateYield(_loop5(i), \"t0\", 7);\n\n        case 7:\n          i++;\n          _context225.next = 5;\n          break;\n\n        case 10:\n        case \"end\":\n          return _context225.stop();\n      }\n    }\n  }, _marked183);\n}\n\nfunction parseCloseParenWithType(opts) {\n  var _marked184, context, startInfo, typeNode, typeNodeSeparator, typeNodeStartInfo, typeNodeEndInfo, parsedTypeNodeIterator, parseTypeNode;\n\n  return _regeneratorRuntime.wrap(function parseCloseParenWithType$(_context229) {\n    while (1) {\n      switch (_context229.prev = _context229.next) {\n        case 0:\n          parseTypeNode = function _ref86() {\n            return _regeneratorRuntime.wrap(function parseTypeNode$(_context228) {\n              while (1) {\n                switch (_context228.prev = _context228.next) {\n                  case 0:\n                    if (typeNode) {\n                      _context228.next = 2;\n                      break;\n                    }\n\n                    return _context228.abrupt(\"return\");\n\n                  case 2:\n                    _context228.next = 4;\n                    return typeNodeStartInfo;\n\n                  case 4:\n                    if (!typeNodeSeparator) {\n                      _context228.next = 8;\n                      break;\n                    }\n\n                    return _context228.delegateYield(typeNodeSeparator, \"t0\", 6);\n\n                  case 6:\n                    _context228.next = 13;\n                    break;\n\n                  case 8:\n                    if (!context.config[\"typeAnnotation.spaceBeforeColon\"]) {\n                      _context228.next = 11;\n                      break;\n                    }\n\n                    _context228.next = 11;\n                    return \" \";\n\n                  case 11:\n                    _context228.next = 13;\n                    return \": \";\n\n                  case 13:\n                    return _context228.delegateYield(parseNode(typeNode, context), \"t1\", 14);\n\n                  case 14:\n                    _context228.next = 16;\n                    return typeNodeEndInfo;\n\n                  case 16:\n                  case \"end\":\n                    return _context228.stop();\n                }\n              }\n            }, _marked184);\n          };\n\n          _marked184 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseTypeNode);\n          context = opts.context, startInfo = opts.startInfo, typeNode = opts.typeNode, typeNodeSeparator = opts.typeNodeSeparator;\n          typeNodeStartInfo = createInfo(\"typeNodeStart\");\n          typeNodeEndInfo = createInfo(\"typeNodeEnd\");\n          parsedTypeNodeIterator = core.makeIterableRepeatable(parseTypeNode());\n          _context229.next = 8;\n          return {\n            kind: core.PrintItemKind.Condition,\n            name: \"newlineIfHeaderHangingAndTypeNodeMultipleLines\",\n            condition: function condition(conditionContext) {\n              return core.conditionResolvers.isHanging(conditionContext, startInfo) && core.conditionResolvers.isMultipleLines(conditionContext, typeNodeStartInfo, typeNodeEndInfo);\n            },\n            true:\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee29() {\n              return _regeneratorRuntime.wrap(function _callee29$(_context226) {\n                while (1) {\n                  switch (_context226.prev = _context226.next) {\n                    case 0:\n                      _context226.next = 2;\n                      return core.Signal.NewLine;\n\n                    case 2:\n                      _context226.next = 4;\n                      return \")\";\n\n                    case 4:\n                      return _context226.delegateYield(parsedTypeNodeIterator, \"t0\", 5);\n\n                    case 5:\n                    case \"end\":\n                      return _context226.stop();\n                  }\n                }\n              }, _callee29);\n            })(),\n            false:\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee30() {\n              return _regeneratorRuntime.wrap(function _callee30$(_context227) {\n                while (1) {\n                  switch (_context227.prev = _context227.next) {\n                    case 0:\n                      _context227.next = 2;\n                      return \")\";\n\n                    case 2:\n                      return _context227.delegateYield(parsedTypeNodeIterator, \"t0\", 3);\n\n                    case 3:\n                    case \"end\":\n                      return _context227.stop();\n                  }\n                }\n              }, _callee30);\n            })()\n          };\n\n        case 8:\n        case \"end\":\n          return _context229.stop();\n      }\n    }\n  }, _marked185);\n}\n\nfunction parseNodeInParens(options) {\n  var firstInnerNode, innerIterable, context, openParenToken, useNewLines;\n  return _regeneratorRuntime.wrap(function parseNodeInParens$(_context230) {\n    while (1) {\n      switch (_context230.prev = _context230.next) {\n        case 0:\n          firstInnerNode = options.firstInnerNode, innerIterable = options.innerIterable, context = options.context;\n          openParenToken = getFirstOpenParenTokenBefore(firstInnerNode, context);\n          useNewLines = getUseNewlinesForNodes([openParenToken, firstInnerNode]);\n          if (useNewLines) putDisableIndentInBagIfNecessaryForNode(firstInnerNode, context);\n          return _context230.delegateYield(parseIteratorInParens(innerIterable, useNewLines), \"t0\", 5);\n\n        case 5:\n        case \"end\":\n          return _context230.stop();\n      }\n    }\n  }, _marked186);\n}\n\nfunction parseIteratorInParens(iterator, useNewLines, context) {\n  return _regeneratorRuntime.wrap(function parseIteratorInParens$(_context232) {\n    while (1) {\n      switch (_context232.prev = _context232.next) {\n        case 0:\n          return _context232.delegateYield(newlineGroup(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee31() {\n            return _regeneratorRuntime.wrap(function _callee31$(_context231) {\n              while (1) {\n                switch (_context231.prev = _context231.next) {\n                  case 0:\n                    _context231.next = 2;\n                    return \"(\";\n\n                  case 2:\n                    if (!useNewLines) {\n                      _context231.next = 10;\n                      break;\n                    }\n\n                    _context231.next = 5;\n                    return core.Signal.NewLine;\n\n                  case 5:\n                    return _context231.delegateYield(withIndent(iterator), \"t0\", 6);\n\n                  case 6:\n                    _context231.next = 8;\n                    return core.Signal.NewLine;\n\n                  case 8:\n                    _context231.next = 11;\n                    break;\n\n                  case 10:\n                    return _context231.delegateYield(iterator, \"t1\", 11);\n\n                  case 11:\n                    _context231.next = 13;\n                    return \")\";\n\n                  case 13:\n                  case \"end\":\n                    return _context231.stop();\n                }\n              }\n            }, _callee31);\n          })()), \"t0\", 1);\n\n        case 1:\n        case \"end\":\n          return _context232.stop();\n      }\n    }\n  }, _marked187);\n}\n\nfunction parseNamedImportsOrExports(parentDeclaration, namedImportsOrExports, context) {\n  var _marked188, useNewLines, braceSeparator, getUseNewLines, parseSpecifiers, getUseSpace;\n\n  return _regeneratorRuntime.wrap(function parseNamedImportsOrExports$(_context234) {\n    while (1) {\n      switch (_context234.prev = _context234.next) {\n        case 0:\n          getUseSpace = function _ref89() {\n            switch (parentDeclaration.type) {\n              case \"ExportNamedDeclaration\":\n                return context.config[\"exportDeclaration.spaceSurroundingNamedExports\"];\n\n              case \"ImportDeclaration\":\n                return context.config[\"importDeclaration.spaceSurroundingNamedExports\"];\n\n              default:\n                return assertNever(parentDeclaration);\n            }\n          };\n\n          parseSpecifiers = function _ref88() {\n            var i;\n            return _regeneratorRuntime.wrap(function parseSpecifiers$(_context233) {\n              while (1) {\n                switch (_context233.prev = _context233.next) {\n                  case 0:\n                    i = 0;\n\n                  case 1:\n                    if (!(i < namedImportsOrExports.length)) {\n                      _context233.next = 15;\n                      break;\n                    }\n\n                    if (!(i > 0)) {\n                      _context233.next = 7;\n                      break;\n                    }\n\n                    _context233.next = 5;\n                    return \",\";\n\n                  case 5:\n                    _context233.next = 7;\n                    return useNewLines ? core.Signal.NewLine : core.Signal.SpaceOrNewLine;\n\n                  case 7:\n                    if (!useNewLines) {\n                      _context233.next = 11;\n                      break;\n                    }\n\n                    return _context233.delegateYield(parseNode(namedImportsOrExports[i], context), \"t0\", 9);\n\n                  case 9:\n                    _context233.next = 12;\n                    break;\n\n                  case 11:\n                    return _context233.delegateYield(core.conditions.indentIfStartOfLine(newlineGroup(parseNode(namedImportsOrExports[i], context))), \"t1\", 12);\n\n                  case 12:\n                    i++;\n                    _context233.next = 1;\n                    break;\n\n                  case 15:\n                  case \"end\":\n                    return _context233.stop();\n                }\n              }\n            }, _marked188);\n          };\n\n          getUseNewLines = function _ref87() {\n            if (namedImportsOrExports.length === 0) return false;\n            return getUseNewlinesForNodes([getFirstOpenBraceTokenWithin(parentDeclaration, context), namedImportsOrExports[0]]);\n          };\n\n          _marked188 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseSpecifiers);\n\n          if (!(namedImportsOrExports.length === 0)) {\n            _context234.next = 6;\n            break;\n          }\n\n          return _context234.abrupt(\"return\");\n\n        case 6:\n          useNewLines = getUseNewLines();\n          braceSeparator = useNewLines ? core.Signal.NewLine : getUseSpace() ? \" \" : \"\";\n          _context234.next = 10;\n          return \"{\";\n\n        case 10:\n          _context234.next = 12;\n          return braceSeparator;\n\n        case 12:\n          if (!useNewLines) {\n            _context234.next = 16;\n            break;\n          }\n\n          return _context234.delegateYield(withIndent(parseSpecifiers()), \"t0\", 14);\n\n        case 14:\n          _context234.next = 17;\n          break;\n\n        case 16:\n          return _context234.delegateYield(parseSpecifiers(), \"t1\", 17);\n\n        case 17:\n          _context234.next = 19;\n          return braceSeparator;\n\n        case 19:\n          _context234.next = 21;\n          return \"}\";\n\n        case 21:\n        case \"end\":\n          return _context234.stop();\n      }\n    }\n  }, _marked189);\n}\n\nfunction parseDecoratorsIfClass(declaration, context) {\n  return _regeneratorRuntime.wrap(function parseDecoratorsIfClass$(_context235) {\n    while (1) {\n      switch (_context235.prev = _context235.next) {\n        case 0:\n          if (!(declaration == null || declaration.type !== \"ClassDeclaration\" && declaration.type !== \"ClassExpression\")) {\n            _context235.next = 2;\n            break;\n          }\n\n          return _context235.abrupt(\"return\");\n\n        case 2:\n          return _context235.delegateYield(parseDecorators(declaration, context), \"t0\", 3);\n\n        case 3:\n        case \"end\":\n          return _context235.stop();\n      }\n    }\n  }, _marked190);\n}\n\nfunction parseDecorators(node, context) {\n  var decorators, isClassExpression, useNewlines, i;\n  return _regeneratorRuntime.wrap(function parseDecorators$(_context236) {\n    while (1) {\n      switch (_context236.prev = _context236.next) {\n        case 0:\n          decorators = node.decorators;\n\n          if (!(decorators == null || decorators.length === 0)) {\n            _context236.next = 3;\n            break;\n          }\n\n          return _context236.abrupt(\"return\");\n\n        case 3:\n          isClassExpression = node.type === \"ClassExpression\";\n          useNewlines = isClassExpression ? false : getUseNewlinesForNodes(decorators);\n          i = 0;\n\n        case 6:\n          if (!(i < decorators.length)) {\n            _context236.next = 23;\n            break;\n          }\n\n          if (!(i > 0)) {\n            _context236.next = 15;\n            break;\n          }\n\n          if (!useNewlines) {\n            _context236.next = 13;\n            break;\n          }\n\n          _context236.next = 11;\n          return core.Signal.NewLine;\n\n        case 11:\n          _context236.next = 15;\n          break;\n\n        case 13:\n          _context236.next = 15;\n          return core.Signal.SpaceOrNewLine;\n\n        case 15:\n          if (!isClassExpression) {\n            _context236.next = 19;\n            break;\n          }\n\n          return _context236.delegateYield(core.conditions.indentIfStartOfLine(newlineGroup(parseNode(decorators[i], context))), \"t0\", 17);\n\n        case 17:\n          _context236.next = 20;\n          break;\n\n        case 19:\n          return _context236.delegateYield(newlineGroup(parseNode(decorators[i], context)), \"t1\", 20);\n\n        case 20:\n          i++;\n          _context236.next = 6;\n          break;\n\n        case 23:\n          if (!isClassExpression) {\n            _context236.next = 28;\n            break;\n          }\n\n          _context236.next = 26;\n          return core.Signal.SpaceOrNewLine;\n\n        case 26:\n          _context236.next = 30;\n          break;\n\n        case 28:\n          _context236.next = 30;\n          return core.Signal.NewLine;\n\n        case 30:\n        case \"end\":\n          return _context236.stop();\n      }\n    }\n  }, _marked191);\n}\n\nfunction parseForMemberLikeExpression(parent, leftNode, rightNode, isComputed, context) {\n  var _marked192, useNewline, parseRightNode;\n\n  return _regeneratorRuntime.wrap(function parseForMemberLikeExpression$(_context238) {\n    while (1) {\n      switch (_context238.prev = _context238.next) {\n        case 0:\n          parseRightNode = function _ref90() {\n            return _regeneratorRuntime.wrap(function parseRightNode$(_context237) {\n              while (1) {\n                switch (_context237.prev = _context237.next) {\n                  case 0:\n                    if (!(parent.type === \"OptionalMemberExpression\" && parent.optional)) {\n                      _context237.next = 6;\n                      break;\n                    }\n\n                    _context237.next = 3;\n                    return \"?\";\n\n                  case 3:\n                    if (!isComputed) {\n                      _context237.next = 6;\n                      break;\n                    }\n\n                    _context237.next = 6;\n                    return \".\";\n\n                  case 6:\n                    if (!isComputed) {\n                      _context237.next = 11;\n                      break;\n                    }\n\n                    _context237.next = 9;\n                    return \"[\";\n\n                  case 9:\n                    _context237.next = 13;\n                    break;\n\n                  case 11:\n                    _context237.next = 13;\n                    return \".\";\n\n                  case 13:\n                    return _context237.delegateYield(parseNode(rightNode, context), \"t0\", 14);\n\n                  case 14:\n                    if (!isComputed) {\n                      _context237.next = 17;\n                      break;\n                    }\n\n                    _context237.next = 17;\n                    return \"]\";\n\n                  case 17:\n                  case \"end\":\n                    return _context237.stop();\n                }\n              }\n            }, _marked192);\n          };\n\n          _marked192 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseRightNode);\n          useNewline = getUseNewlinesForNodes([leftNode, rightNode]);\n          return _context238.delegateYield(parseNode(leftNode, context), \"t0\", 4);\n\n        case 4:\n          if (!useNewline) {\n            _context238.next = 9;\n            break;\n          }\n\n          _context238.next = 7;\n          return core.Signal.NewLine;\n\n        case 7:\n          _context238.next = 11;\n          break;\n\n        case 9:\n          _context238.next = 11;\n          return core.Signal.PossibleNewLine;\n\n        case 11:\n          return _context238.delegateYield(core.conditions.indentIfStartOfLine(parseRightNode()), \"t1\", 12);\n\n        case 12:\n        case \"end\":\n          return _context238.stop();\n      }\n    }\n  }, _marked193);\n}\n\nfunction parseExtendsOrImplements(opts) {\n  var text, items, context, startHeaderInfo;\n  return _regeneratorRuntime.wrap(function parseExtendsOrImplements$(_context241) {\n    while (1) {\n      switch (_context241.prev = _context241.next) {\n        case 0:\n          text = opts.text, items = opts.items, context = opts.context, startHeaderInfo = opts.startHeaderInfo;\n\n          if (!(!items || items.length === 0)) {\n            _context241.next = 3;\n            break;\n          }\n\n          return _context241.abrupt(\"return\");\n\n        case 3:\n          _context241.next = 5;\n          return core.conditions.newlineIfMultipleLinesSpaceOrNewlineOtherwise({\n            startInfo: startHeaderInfo\n          });\n\n        case 5:\n          return _context241.delegateYield(core.conditions.indentIfStartOfLine(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee33() {\n            return _regeneratorRuntime.wrap(function _callee33$(_context240) {\n              while (1) {\n                switch (_context240.prev = _context240.next) {\n                  case 0:\n                    return _context240.delegateYield(newlineGroup(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee32() {\n                      var i;\n                      return _regeneratorRuntime.wrap(function _callee32$(_context239) {\n                        while (1) {\n                          switch (_context239.prev = _context239.next) {\n                            case 0:\n                              _context239.next = 2;\n                              return \"\".concat(text, \" \");\n\n                            case 2:\n                              i = 0;\n\n                            case 3:\n                              if (!(i < items.length)) {\n                                _context239.next = 13;\n                                break;\n                              }\n\n                              if (!(i > 0)) {\n                                _context239.next = 9;\n                                break;\n                              }\n\n                              _context239.next = 7;\n                              return \",\";\n\n                            case 7:\n                              _context239.next = 9;\n                              return core.Signal.SpaceOrNewLine;\n\n                            case 9:\n                              return _context239.delegateYield(core.conditions.indentIfStartOfLine(newlineGroup(parseNode(items[i], context))), \"t0\", 10);\n\n                            case 10:\n                              i++;\n                              _context239.next = 3;\n                              break;\n\n                            case 13:\n                            case \"end\":\n                              return _context239.stop();\n                          }\n                        }\n                      }, _callee32);\n                    })()), \"t0\", 1);\n\n                  case 1:\n                  case \"end\":\n                    return _context240.stop();\n                }\n              }\n            }, _callee33);\n          })()), \"t0\", 6);\n\n        case 6:\n        case \"end\":\n          return _context241.stop();\n      }\n    }\n  }, _marked194);\n}\n\nfunction parseArrayLikeNodes(opts) {\n  var _marked196, node, elements, context, useNewlines, forceTrailingCommas, parseElements;\n\n  return _regeneratorRuntime.wrap(function parseArrayLikeNodes$(_context245) {\n    while (1) {\n      switch (_context245.prev = _context245.next) {\n        case 0:\n          parseElements = function _ref92() {\n            var _marked195, i, element, hasComma, parseElement;\n\n            return _regeneratorRuntime.wrap(function parseElements$(_context244) {\n              while (1) {\n                switch (_context244.prev = _context244.next) {\n                  case 0:\n                    parseElement = function _ref91(element, hasComma) {\n                      return _regeneratorRuntime.wrap(function parseElement$(_context243) {\n                        while (1) {\n                          switch (_context243.prev = _context243.next) {\n                            case 0:\n                              if (!element) {\n                                _context243.next = 4;\n                                break;\n                              }\n\n                              return _context243.delegateYield(parseNode(element, context, {\n                                innerParse:\n                                /*#__PURE__*/\n                                _regeneratorRuntime.mark(function innerParse(iterator) {\n                                  return _regeneratorRuntime.wrap(function innerParse$(_context242) {\n                                    while (1) {\n                                      switch (_context242.prev = _context242.next) {\n                                        case 0:\n                                          return _context242.delegateYield(iterator, \"t0\", 1);\n\n                                        case 1:\n                                          if (!hasComma) {\n                                            _context242.next = 4;\n                                            break;\n                                          }\n\n                                          _context242.next = 4;\n                                          return \",\";\n\n                                        case 4:\n                                        case \"end\":\n                                          return _context242.stop();\n                                      }\n                                    }\n                                  }, innerParse);\n                                })\n                              }), \"t0\", 2);\n\n                            case 2:\n                              _context243.next = 7;\n                              break;\n\n                            case 4:\n                              if (!hasComma) {\n                                _context243.next = 7;\n                                break;\n                              }\n\n                              _context243.next = 7;\n                              return \",\";\n\n                            case 7:\n                            case \"end\":\n                              return _context243.stop();\n                          }\n                        }\n                      }, _marked195);\n                    };\n\n                    _marked195 =\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(parseElement);\n\n                    if (!useNewlines) {\n                      _context244.next = 5;\n                      break;\n                    }\n\n                    _context244.next = 5;\n                    return core.Signal.NewLine;\n\n                  case 5:\n                    i = 0;\n\n                  case 6:\n                    if (!(i < elements.length)) {\n                      _context244.next = 19;\n                      break;\n                    }\n\n                    if (!(i > 0 && !useNewlines)) {\n                      _context244.next = 10;\n                      break;\n                    }\n\n                    _context244.next = 10;\n                    return core.Signal.SpaceOrNewLine;\n\n                  case 10:\n                    element = elements[i];\n                    hasComma = forceTrailingCommas || i < elements.length - 1;\n                    return _context244.delegateYield(core.conditions.indentIfStartOfLine(newlineGroup(parseElement(element, hasComma))), \"t0\", 13);\n\n                  case 13:\n                    if (!useNewlines) {\n                      _context244.next = 16;\n                      break;\n                    }\n\n                    _context244.next = 16;\n                    return core.Signal.NewLine;\n\n                  case 16:\n                    i++;\n                    _context244.next = 6;\n                    break;\n\n                  case 19:\n                  case \"end\":\n                    return _context244.stop();\n                }\n              }\n            }, _marked196);\n          };\n\n          _marked196 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseElements);\n          node = opts.node, elements = opts.elements, context = opts.context;\n          useNewlines = getUseNewlinesForNodes(elements ? [getFirstOpenBracketTokenWithin(node, context), elements[0]] : []);\n          forceTrailingCommas = getForceTrailingCommas(opts.trailingCommas, useNewlines);\n          _context245.next = 7;\n          return \"[\";\n\n        case 7:\n          if (!(elements.length > 0)) {\n            _context245.next = 9;\n            break;\n          }\n\n          return _context245.delegateYield(parseElements(), \"t0\", 9);\n\n        case 9:\n          _context245.next = 11;\n          return \"]\";\n\n        case 11:\n        case \"end\":\n          return _context245.stop();\n      }\n    }\n  }, _marked197);\n}\n\nfunction parseObjectLikeNode(opts) {\n  var _marked198, node, members, context, trailingCommas, multiLine, startInfo, endInfo, separator, getInner;\n\n  return _regeneratorRuntime.wrap(function parseObjectLikeNode$(_context249) {\n    while (1) {\n      switch (_context249.prev = _context249.next) {\n        case 0:\n          getInner = function _ref93() {\n            var _loop6, i;\n\n            return _regeneratorRuntime.wrap(function getInner$(_context248) {\n              while (1) {\n                switch (_context248.prev = _context248.next) {\n                  case 0:\n                    if (!multiLine) {\n                      _context248.next = 4;\n                      break;\n                    }\n\n                    return _context248.delegateYield(withIndent(parseStatementOrMembers({\n                      context: context,\n                      innerComments: node.innerComments,\n                      items: members,\n                      lastNode: undefined,\n                      shouldUseBlankLine: function shouldUseBlankLine(previousStatement, nextStatement) {\n                        return hasSeparatingBlankLine(previousStatement, nextStatement);\n                      },\n                      trailingCommas: trailingCommas\n                    })), \"t0\", 2);\n\n                  case 2:\n                    _context248.next = 11;\n                    break;\n\n                  case 4:\n                    _loop6 =\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _loop6(i) {\n                      return _regeneratorRuntime.wrap(function _loop6$(_context247) {\n                        while (1) {\n                          switch (_context247.prev = _context247.next) {\n                            case 0:\n                              if (!(i > 0)) {\n                                _context247.next = 3;\n                                break;\n                              }\n\n                              _context247.next = 3;\n                              return core.Signal.SpaceOrNewLine;\n\n                            case 3:\n                              return _context247.delegateYield(core.conditions.indentIfStartOfLine(newlineGroup(parseNode(members[i], context, {\n                                innerParse:\n                                /*#__PURE__*/\n                                _regeneratorRuntime.mark(function innerParse(iterator) {\n                                  var _forceTrailingCommas2;\n\n                                  return _regeneratorRuntime.wrap(function innerParse$(_context246) {\n                                    while (1) {\n                                      switch (_context246.prev = _context246.next) {\n                                        case 0:\n                                          return _context246.delegateYield(iterator, \"t0\", 1);\n\n                                        case 1:\n                                          if (!trailingCommas) {\n                                            _context246.next = 6;\n                                            break;\n                                          }\n\n                                          _forceTrailingCommas2 = getForceTrailingCommas(trailingCommas, multiLine);\n\n                                          if (!(_forceTrailingCommas2 || i < members.length - 1)) {\n                                            _context246.next = 6;\n                                            break;\n                                          }\n\n                                          _context246.next = 6;\n                                          return \",\";\n\n                                        case 6:\n                                        case \"end\":\n                                          return _context246.stop();\n                                      }\n                                    }\n                                  }, innerParse);\n                                })\n                              }))), \"t0\", 4);\n\n                            case 4:\n                            case \"end\":\n                              return _context247.stop();\n                          }\n                        }\n                      }, _loop6);\n                    });\n                    i = 0;\n\n                  case 6:\n                    if (!(i < members.length)) {\n                      _context248.next = 11;\n                      break;\n                    }\n\n                    return _context248.delegateYield(_loop6(i), \"t1\", 8);\n\n                  case 8:\n                    i++;\n                    _context248.next = 6;\n                    break;\n\n                  case 11:\n                  case \"end\":\n                    return _context248.stop();\n                }\n              }\n            }, _marked198);\n          };\n\n          _marked198 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(getInner);\n          node = opts.node, members = opts.members, context = opts.context, trailingCommas = opts.trailingCommas;\n\n          if (!(members.length === 0)) {\n            _context249.next = 7;\n            break;\n          }\n\n          _context249.next = 6;\n          return \"{}\";\n\n        case 6:\n          return _context249.abrupt(\"return\");\n\n        case 7:\n          multiLine = getUseNewlinesForNodes([getFirstOpenBraceTokenWithin(node, context), members[0]]);\n          startInfo = createInfo(\"startObject\");\n          endInfo = createInfo(\"endObject\");\n          separator = multiLine ? core.Signal.NewLine : \" \";\n          _context249.next = 13;\n          return startInfo;\n\n        case 13:\n          _context249.next = 15;\n          return \"{\";\n\n        case 15:\n          _context249.next = 17;\n          return separator;\n\n        case 17:\n          return _context249.delegateYield(getInner(), \"t0\", 18);\n\n        case 18:\n          _context249.next = 20;\n          return separator;\n\n        case 20:\n          _context249.next = 22;\n          return \"}\";\n\n        case 22:\n          _context249.next = 24;\n          return endInfo;\n\n        case 24:\n        case \"end\":\n          return _context249.stop();\n      }\n    }\n  }, _marked199);\n}\n\nfunction getWithComments(node, printItemIterator, context) {\n  return _regeneratorRuntime.wrap(function getWithComments$(_context250) {\n    while (1) {\n      switch (_context250.prev = _context250.next) {\n        case 0:\n          return _context250.delegateYield(parseLeadingComments(node, context), \"t0\", 1);\n\n        case 1:\n          return _context250.delegateYield(printItemIterator, \"t1\", 2);\n\n        case 2:\n          return _context250.delegateYield(parseTrailingComments(node, context), \"t2\", 3);\n\n        case 3:\n        case \"end\":\n          return _context250.stop();\n      }\n    }\n  }, _marked200);\n}\n\nfunction parseLeadingComments(node, context) {\n  return parseCommentsAsLeading(node, node.leadingComments, context);\n}\n\nfunction parseCommentsAsLeading(node, leadingComments, context) {\n  var lastComment, hasHandled;\n  return _regeneratorRuntime.wrap(function parseCommentsAsLeading$(_context251) {\n    while (1) {\n      switch (_context251.prev = _context251.next) {\n        case 0:\n          if (leadingComments) {\n            _context251.next = 2;\n            break;\n          }\n\n          return _context251.abrupt(\"return\");\n\n        case 2:\n          lastComment = leadingComments[leadingComments.length - 1];\n          hasHandled = lastComment == null || context.handledComments.has(lastComment);\n          return _context251.delegateYield(parseCommentCollection(leadingComments, undefined, context), \"t0\", 5);\n\n        case 5:\n          if (!(lastComment != null && !hasHandled)) {\n            _context251.next = 17;\n            break;\n          }\n\n          if (!(node.loc.start.line > lastComment.loc.end.line)) {\n            _context251.next = 14;\n            break;\n          }\n\n          _context251.next = 9;\n          return core.Signal.NewLine;\n\n        case 9:\n          if (!(node.loc.start.line - 1 > lastComment.loc.end.line)) {\n            _context251.next = 12;\n            break;\n          }\n\n          _context251.next = 12;\n          return core.Signal.NewLine;\n\n        case 12:\n          _context251.next = 17;\n          break;\n\n        case 14:\n          if (!(lastComment.type === \"CommentBlock\" && lastComment.loc.end.line === node.loc.start.line)) {\n            _context251.next = 17;\n            break;\n          }\n\n          _context251.next = 17;\n          return \" \";\n\n        case 17:\n        case \"end\":\n          return _context251.stop();\n      }\n    }\n  }, _marked201);\n}\n\nfunction parseTrailingComments(node, context) {\n  var trailingComments, getTrailingComments;\n  return _regeneratorRuntime.wrap(function parseTrailingComments$(_context252) {\n    while (1) {\n      switch (_context252.prev = _context252.next) {\n        case 0:\n          getTrailingComments = function _ref94() {\n            switch (context.parent.type) {\n              case \"ObjectExpression\":\n                return getTrailingCommentsWithNextLeading(context.parent.properties);\n\n              case \"ArrayExpression\":\n                return getTrailingCommentsWithNextLeading(context.parent.elements);\n\n              case \"TSTupleType\":\n                return getTrailingCommentsWithNextLeading(context.parent.elementTypes);\n\n              default:\n                return node.trailingComments;\n            }\n\n            function getTrailingCommentsWithNextLeading(nodes) {\n              var index = nodes.indexOf(node);\n              var nextProperty = nodes[index + 1];\n\n              if (nextProperty) {\n                return [].concat(_toConsumableArray(node.trailingComments || []), _toConsumableArray(nextProperty.leadingComments || []));\n              }\n\n              return node.trailingComments;\n            }\n          };\n\n          trailingComments = getTrailingComments();\n\n          if (trailingComments) {\n            _context252.next = 4;\n            break;\n          }\n\n          return _context252.abrupt(\"return\");\n\n        case 4:\n          return _context252.delegateYield(parseCommentsAsTrailing(node, trailingComments, context), \"t0\", 5);\n\n        case 5:\n        case \"end\":\n          return _context252.stop();\n      }\n    }\n  }, _marked202);\n}\n\nfunction parseCommentsAsTrailing(node, trailingComments, context) {\n  var trailingCommentsOnSameLine, firstUnhandledComment;\n  return _regeneratorRuntime.wrap(function parseCommentsAsTrailing$(_context253) {\n    while (1) {\n      switch (_context253.prev = _context253.next) {\n        case 0:\n          if (trailingComments) {\n            _context253.next = 2;\n            break;\n          }\n\n          return _context253.abrupt(\"return\");\n\n        case 2:\n          trailingCommentsOnSameLine = trailingComments.filter(function (c) {\n            return c.loc.start.line === node.loc.end.line;\n          });\n\n          if (!(trailingCommentsOnSameLine.length === 0)) {\n            _context253.next = 5;\n            break;\n          }\n\n          return _context253.abrupt(\"return\");\n\n        case 5:\n          firstUnhandledComment = trailingCommentsOnSameLine.find(function (c) {\n            return !context.handledComments.has(c);\n          });\n\n          if (!(firstUnhandledComment != null && firstUnhandledComment.type === \"CommentBlock\")) {\n            _context253.next = 9;\n            break;\n          }\n\n          _context253.next = 9;\n          return \" \";\n\n        case 9:\n          return _context253.delegateYield(parseCommentCollection(trailingCommentsOnSameLine, node, context), \"t0\", 10);\n\n        case 10:\n        case \"end\":\n          return _context253.stop();\n      }\n    }\n  }, _marked203);\n}\n\nfunction parseCommentCollection(comments, lastNode, context) {\n  var _iteratorNormalCompletion14, _didIteratorError14, _iteratorError14, _iterator14, _step14, comment;\n\n  return _regeneratorRuntime.wrap(function parseCommentCollection$(_context254) {\n    while (1) {\n      switch (_context254.prev = _context254.next) {\n        case 0:\n          _iteratorNormalCompletion14 = true;\n          _didIteratorError14 = false;\n          _iteratorError14 = undefined;\n          _context254.prev = 3;\n          _iterator14 = comments[Symbol.iterator]();\n\n        case 5:\n          if (_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done) {\n            _context254.next = 14;\n            break;\n          }\n\n          comment = _step14.value;\n\n          if (!context.handledComments.has(comment)) {\n            _context254.next = 9;\n            break;\n          }\n\n          return _context254.abrupt(\"continue\", 11);\n\n        case 9:\n          return _context254.delegateYield(parseCommentBasedOnLastNode(comment, lastNode, context), \"t0\", 10);\n\n        case 10:\n          lastNode = comment;\n\n        case 11:\n          _iteratorNormalCompletion14 = true;\n          _context254.next = 5;\n          break;\n\n        case 14:\n          _context254.next = 20;\n          break;\n\n        case 16:\n          _context254.prev = 16;\n          _context254.t1 = _context254[\"catch\"](3);\n          _didIteratorError14 = true;\n          _iteratorError14 = _context254.t1;\n\n        case 20:\n          _context254.prev = 20;\n          _context254.prev = 21;\n\n          if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n            _iterator14.return();\n          }\n\n        case 23:\n          _context254.prev = 23;\n\n          if (!_didIteratorError14) {\n            _context254.next = 26;\n            break;\n          }\n\n          throw _iteratorError14;\n\n        case 26:\n          return _context254.finish(23);\n\n        case 27:\n          return _context254.finish(20);\n\n        case 28:\n        case \"end\":\n          return _context254.stop();\n      }\n    }\n  }, _marked204, null, [[3, 16, 20, 28], [21,, 23, 27]]);\n}\n\nfunction parseCommentBasedOnLastNode(comment, lastNode, context) {\n  return _regeneratorRuntime.wrap(function parseCommentBasedOnLastNode$(_context255) {\n    while (1) {\n      switch (_context255.prev = _context255.next) {\n        case 0:\n          if (!(lastNode != null)) {\n            _context255.next = 17;\n            break;\n          }\n\n          if (!(comment.loc.start.line > lastNode.loc.end.line)) {\n            _context255.next = 9;\n            break;\n          }\n\n          _context255.next = 4;\n          return core.Signal.NewLine;\n\n        case 4:\n          if (!(comment.loc.start.line > lastNode.loc.end.line + 1)) {\n            _context255.next = 7;\n            break;\n          }\n\n          _context255.next = 7;\n          return core.Signal.NewLine;\n\n        case 7:\n          _context255.next = 17;\n          break;\n\n        case 9:\n          if (!(comment.type === \"CommentLine\")) {\n            _context255.next = 14;\n            break;\n          }\n\n          _context255.next = 12;\n          return \" \";\n\n        case 12:\n          _context255.next = 17;\n          break;\n\n        case 14:\n          if (!(lastNode.type === \"CommentBlock\")) {\n            _context255.next = 17;\n            break;\n          }\n\n          _context255.next = 17;\n          return \" \";\n\n        case 17:\n          return _context255.delegateYield(parseComment(comment, context), \"t0\", 18);\n\n        case 18:\n        case \"end\":\n          return _context255.stop();\n      }\n    }\n  }, _marked205);\n}\n\nfunction parseComment(comment, context) {\n  var _marked206, _marked207, parseCommentBlock, parseCommentLine;\n\n  return _regeneratorRuntime.wrap(function parseComment$(_context258) {\n    while (1) {\n      switch (_context258.prev = _context258.next) {\n        case 0:\n          parseCommentLine = function _ref96(comment) {\n            return _regeneratorRuntime.wrap(function parseCommentLine$(_context257) {\n              while (1) {\n                switch (_context257.prev = _context257.next) {\n                  case 0:\n                    _context257.next = 2;\n                    return core.parserHelpers.parseJsLikeCommentLine(comment.value);\n\n                  case 2:\n                    _context257.next = 4;\n                    return core.Signal.ExpectNewLine;\n\n                  case 4:\n                  case \"end\":\n                    return _context257.stop();\n                }\n              }\n            }, _marked207);\n          };\n\n          parseCommentBlock = function _ref95(comment) {\n            return _regeneratorRuntime.wrap(function parseCommentBlock$(_context256) {\n              while (1) {\n                switch (_context256.prev = _context256.next) {\n                  case 0:\n                    _context256.next = 2;\n                    return \"/*\";\n\n                  case 2:\n                    _context256.next = 4;\n                    return {\n                      kind: core.PrintItemKind.RawString,\n                      text: comment.value\n                    };\n\n                  case 4:\n                    _context256.next = 6;\n                    return \"*/\";\n\n                  case 6:\n                  case \"end\":\n                    return _context256.stop();\n                }\n              }\n            }, _marked206);\n          };\n\n          _marked206 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseCommentBlock), _marked207 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(parseCommentLine);\n\n          if (!context.handledComments.has(comment)) {\n            _context258.next = 7;\n            break;\n          }\n\n          return _context258.abrupt(\"return\");\n\n        case 7:\n          context.handledComments.add(comment);\n\n        case 8:\n          _context258.t0 = comment.type;\n          _context258.next = _context258.t0 === \"CommentBlock\" ? 11 : _context258.t0 === \"CommentLine\" ? 13 : 15;\n          break;\n\n        case 11:\n          return _context258.delegateYield(parseCommentBlock(comment), \"t1\", 12);\n\n        case 12:\n          return _context258.abrupt(\"break\", 16);\n\n        case 13:\n          return _context258.delegateYield(parseCommentLine(comment), \"t2\", 14);\n\n        case 14:\n          return _context258.abrupt(\"break\", 16);\n\n        case 15:\n          assertNever(comment);\n\n        case 16:\n        case \"end\":\n          return _context258.stop();\n      }\n    }\n  }, _marked208);\n}\n\nfunction parseFirstLineTrailingComments(node, members, context) {\n  var _marked209, _iteratorNormalCompletion15, _didIteratorError15, _iteratorError15, _iterator15, _step15, trailingComment, getComments;\n\n  return _regeneratorRuntime.wrap(function parseFirstLineTrailingComments$(_context260) {\n    while (1) {\n      switch (_context260.prev = _context260.next) {\n        case 0:\n          getComments = function _ref97() {\n            return _regeneratorRuntime.wrap(function getComments$(_context259) {\n              while (1) {\n                switch (_context259.prev = _context259.next) {\n                  case 0:\n                    if (!node.innerComments) {\n                      _context259.next = 2;\n                      break;\n                    }\n\n                    return _context259.delegateYield(node.innerComments, \"t0\", 2);\n\n                  case 2:\n                    if (!(members.length > 0 && members[0].leadingComments)) {\n                      _context259.next = 4;\n                      break;\n                    }\n\n                    return _context259.delegateYield(members[0].leadingComments, \"t1\", 4);\n\n                  case 4:\n                    if (!node.trailingComments) {\n                      _context259.next = 6;\n                      break;\n                    }\n\n                    return _context259.delegateYield(node.trailingComments, \"t2\", 6);\n\n                  case 6:\n                  case \"end\":\n                    return _context259.stop();\n                }\n              }\n            }, _marked209);\n          };\n\n          _marked209 =\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(getComments);\n          _iteratorNormalCompletion15 = true;\n          _didIteratorError15 = false;\n          _iteratorError15 = undefined;\n          _context260.prev = 5;\n          _iterator15 = getComments()[Symbol.iterator]();\n\n        case 7:\n          if (_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done) {\n            _context260.next = 19;\n            break;\n          }\n\n          trailingComment = _step15.value;\n\n          if (!context.handledComments.has(trailingComment)) {\n            _context260.next = 11;\n            break;\n          }\n\n          return _context260.abrupt(\"continue\", 16);\n\n        case 11:\n          if (!(trailingComment.loc.start.line === node.loc.start.line)) {\n            _context260.next = 16;\n            break;\n          }\n\n          if (!(trailingComment.type === \"CommentLine\")) {\n            _context260.next = 15;\n            break;\n          }\n\n          _context260.next = 15;\n          return \" \";\n\n        case 15:\n          return _context260.delegateYield(parseComment(trailingComment, context), \"t0\", 16);\n\n        case 16:\n          _iteratorNormalCompletion15 = true;\n          _context260.next = 7;\n          break;\n\n        case 19:\n          _context260.next = 25;\n          break;\n\n        case 21:\n          _context260.prev = 21;\n          _context260.t1 = _context260[\"catch\"](5);\n          _didIteratorError15 = true;\n          _iteratorError15 = _context260.t1;\n\n        case 25:\n          _context260.prev = 25;\n          _context260.prev = 26;\n\n          if (!_iteratorNormalCompletion15 && _iterator15.return != null) {\n            _iterator15.return();\n          }\n\n        case 28:\n          _context260.prev = 28;\n\n          if (!_didIteratorError15) {\n            _context260.next = 31;\n            break;\n          }\n\n          throw _iteratorError15;\n\n        case 31:\n          return _context260.finish(28);\n\n        case 32:\n          return _context260.finish(25);\n\n        case 33:\n        case \"end\":\n          return _context260.stop();\n      }\n    }\n  }, _marked210, null, [[5, 21, 25, 33], [26,, 28, 32]]);\n}\n\nfunction parseBraceSeparator(opts) {\n  var bracePosition, bodyNode, startHeaderInfo, context, isExpression;\n  return _regeneratorRuntime.wrap(function parseBraceSeparator$(_context261) {\n    while (1) {\n      switch (_context261.prev = _context261.next) {\n        case 0:\n          bracePosition = opts.bracePosition, bodyNode = opts.bodyNode, startHeaderInfo = opts.startHeaderInfo, context = opts.context;\n\n          if (!(bracePosition === \"nextLineIfHanging\")) {\n            _context261.next = 11;\n            break;\n          }\n\n          if (!(startHeaderInfo == null)) {\n            _context261.next = 7;\n            break;\n          }\n\n          _context261.next = 5;\n          return \" \";\n\n        case 5:\n          _context261.next = 9;\n          break;\n\n        case 7:\n          _context261.next = 9;\n          return core.conditions.newlineIfHangingSpaceOtherwise({\n            startInfo: startHeaderInfo\n          });\n\n        case 9:\n          _context261.next = 33;\n          break;\n\n        case 11:\n          if (!(bracePosition === \"sameLine\")) {\n            _context261.next = 16;\n            break;\n          }\n\n          _context261.next = 14;\n          return \" \";\n\n        case 14:\n          _context261.next = 33;\n          break;\n\n        case 16:\n          if (!(bracePosition === \"nextLine\")) {\n            _context261.next = 21;\n            break;\n          }\n\n          _context261.next = 19;\n          return core.Signal.NewLine;\n\n        case 19:\n          _context261.next = 33;\n          break;\n\n        case 21:\n          if (!(bracePosition === \"maintain\")) {\n            _context261.next = 32;\n            break;\n          }\n\n          isExpression = typeof bodyNode.type === \"string\" && bodyNode.type !== \"BlockStatement\";\n\n          if (!(!isExpression && isFirstNodeOnLine(bodyNode, context.fileText))) {\n            _context261.next = 28;\n            break;\n          }\n\n          _context261.next = 26;\n          return core.Signal.NewLine;\n\n        case 26:\n          _context261.next = 30;\n          break;\n\n        case 28:\n          _context261.next = 30;\n          return \" \";\n\n        case 30:\n          _context261.next = 33;\n          break;\n\n        case 32:\n          assertNever(bracePosition);\n\n        case 33:\n        case \"end\":\n          return _context261.stop();\n      }\n    }\n  }, _marked211);\n}\n\nfunction parseControlFlowSeparator(nextControlFlowPosition, nodeBlock, tokenText, context) {\n  var token, getFirstControlFlowToken;\n  return _regeneratorRuntime.wrap(function parseControlFlowSeparator$(_context262) {\n    while (1) {\n      switch (_context262.prev = _context262.next) {\n        case 0:\n          getFirstControlFlowToken = function _ref98() {\n            if (tokenText === \"catch\") return context.tokenFinder.getFirstTokenWithin(nodeBlock, tokenText);else return context.tokenFinder.getFirstTokenBefore(nodeBlock, tokenText);\n          };\n\n          if (!(nextControlFlowPosition === \"sameLine\")) {\n            _context262.next = 6;\n            break;\n          }\n\n          _context262.next = 4;\n          return \" \";\n\n        case 4:\n          _context262.next = 23;\n          break;\n\n        case 6:\n          if (!(nextControlFlowPosition === \"nextLine\")) {\n            _context262.next = 11;\n            break;\n          }\n\n          _context262.next = 9;\n          return core.Signal.NewLine;\n\n        case 9:\n          _context262.next = 23;\n          break;\n\n        case 11:\n          if (!(nextControlFlowPosition === \"maintain\")) {\n            _context262.next = 22;\n            break;\n          }\n\n          token = getFirstControlFlowToken();\n\n          if (!(token != null && isFirstNodeOnLine(token, context.fileText))) {\n            _context262.next = 18;\n            break;\n          }\n\n          _context262.next = 16;\n          return core.Signal.NewLine;\n\n        case 16:\n          _context262.next = 20;\n          break;\n\n        case 18:\n          _context262.next = 20;\n          return \" \";\n\n        case 20:\n          _context262.next = 23;\n          break;\n\n        case 22:\n          assertNever(nextControlFlowPosition);\n\n        case 23:\n        case \"end\":\n          return _context262.stop();\n      }\n    }\n  }, _marked212);\n}\n\nfunction parseTypeAnnotationWithColonIfExists(node, context) {\n  return _regeneratorRuntime.wrap(function parseTypeAnnotationWithColonIfExists$(_context263) {\n    while (1) {\n      switch (_context263.prev = _context263.next) {\n        case 0:\n          if (!(node == null)) {\n            _context263.next = 2;\n            break;\n          }\n\n          return _context263.abrupt(\"return\");\n\n        case 2:\n          if (!context.config[\"typeAnnotation.spaceBeforeColon\"]) {\n            _context263.next = 5;\n            break;\n          }\n\n          _context263.next = 5;\n          return \" \";\n\n        case 5:\n          return _context263.delegateYield(parseNodeWithPreceedingColon(node, context), \"t0\", 6);\n\n        case 6:\n        case \"end\":\n          return _context263.stop();\n      }\n    }\n  }, _marked213);\n}\n\nfunction parseNodeWithPreceedingColon(node, context) {\n  return _regeneratorRuntime.wrap(function parseNodeWithPreceedingColon$(_context264) {\n    while (1) {\n      switch (_context264.prev = _context264.next) {\n        case 0:\n          if (!(node == null)) {\n            _context264.next = 2;\n            break;\n          }\n\n          return _context264.abrupt(\"return\");\n\n        case 2:\n          _context264.next = 4;\n          return \":\";\n\n        case 4:\n          _context264.next = 6;\n          return core.Signal.SpaceOrNewLine;\n\n        case 6:\n          return _context264.delegateYield(core.conditions.indentIfStartOfLine(parseNode(node, context)), \"t0\", 7);\n\n        case 7:\n        case \"end\":\n          return _context264.stop();\n      }\n    }\n  }, _marked214);\n}\n\nfunction getForceTrailingCommas(option, useNewlines) {\n  switch (option) {\n    case \"always\":\n      return true;\n\n    case \"onlyMultiLine\":\n      return useNewlines;\n\n    case \"never\":\n      return false;\n\n    default:\n      return false;\n  }\n}\n\nfunction putDisableIndentInBagIfNecessaryForNode(node, context) {\n  if (node.type !== \"LogicalExpression\" && node.type !== \"BinaryExpression\") return;\n  context.bag.put(BAG_KEYS.DisableIndentBool, true);\n}\n\nfunction parseToBabelAst(filePath, fileText) {\n  var _marked215 =\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(getPlugins);\n\n  return parser.parse(fileText, {\n    sourceType: \"module\",\n    tokens: true,\n    plugins: Array.from(getPlugins()),\n    createParenthesizedExpressions: false,\n    strictMode: false,\n    allowAwaitOutsideFunction: true,\n    allowImportExportEverywhere: true,\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    allowUndeclaredExports: true\n  });\n\n  function getPlugins() {\n    var isJsx;\n    return _regeneratorRuntime.wrap(function getPlugins$(_context265) {\n      while (1) {\n        switch (_context265.prev = _context265.next) {\n          case 0:\n            isJsx = function _ref99() {\n              var fileExtension = core.getFileExtension(filePath).toLowerCase();\n              return fileExtension === \".tsx\" || fileExtension === \".jsx\" || fileExtension === \".js\";\n            };\n\n            if (!isJsx()) {\n              _context265.next = 4;\n              break;\n            }\n\n            _context265.next = 4;\n            return \"jsx\";\n\n          case 4:\n            _context265.next = 6;\n            return \"typescript\";\n\n          case 6:\n            _context265.next = 8;\n            return \"bigInt\";\n\n          case 8:\n            _context265.next = 10;\n            return \"classProperties\";\n\n          case 10:\n            _context265.next = 12;\n            return \"decorators-legacy\";\n\n          case 12:\n            _context265.next = 14;\n            return \"dynamicImport\";\n\n          case 14:\n            _context265.next = 16;\n            return \"exportDefaultFrom\";\n\n          case 16:\n            _context265.next = 18;\n            return \"exportNamespaceFrom\";\n\n          case 18:\n            _context265.next = 20;\n            return \"importMeta\";\n\n          case 20:\n            _context265.next = 22;\n            return \"nullishCoalescingOperator\";\n\n          case 22:\n            _context265.next = 24;\n            return \"numericSeparator\";\n\n          case 24:\n            _context265.next = 26;\n            return \"optionalChaining\";\n\n          case 26:\n            _context265.next = 28;\n            return \"v8intrinsic\";\n\n          case 28:\n          case \"end\":\n            return _context265.stop();\n        }\n      }\n    }, _marked215);\n  }\n}\n\nvar TypeScriptPlugin =\n/*#__PURE__*/\nfunction () {\n  function TypeScriptPlugin() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, TypeScriptPlugin);\n\n    this.version = \"0.10.0\";\n    this.name = \"dprint-plugin-typescript\";\n    this._unresolvedConfig = config;\n  }\n\n  _createClass(TypeScriptPlugin, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this._resolveConfigurationResult = resolveConfiguration(options.globalConfig, this._unresolvedConfig);\n      this._environment = options.environment;\n    }\n  }, {\n    key: \"shouldParseFile\",\n    value: function shouldParseFile(filePath) {\n      switch (core.getFileExtension(filePath).toLowerCase()) {\n        case \".ts\":\n        case \".tsx\":\n        case \".js\":\n        case \".jsx\":\n          return true;\n\n        default:\n          return false;\n      }\n    }\n  }, {\n    key: \"getConfiguration\",\n    value: function getConfiguration() {\n      return this._getResolveConfigurationResult().config;\n    }\n  }, {\n    key: \"getConfigurationDiagnostics\",\n    value: function getConfigurationDiagnostics() {\n      return this._getResolveConfigurationResult().diagnostics;\n    }\n  }, {\n    key: \"parseFile\",\n    value: function parseFile(filePath, fileText) {\n      var babelAst = parseToBabelAst(filePath, fileText);\n      return parseTypeScriptFile({\n        file: babelAst,\n        filePath: filePath,\n        fileText: fileText,\n        config: this.getConfiguration(),\n        environment: this._getEnvironment()\n      });\n    }\n  }, {\n    key: \"_getResolveConfigurationResult\",\n    value: function _getResolveConfigurationResult() {\n      if (this._resolveConfigurationResult == null) {\n        var globalConfig = core.resolveConfiguration({}).config;\n        this._resolveConfigurationResult = resolveConfiguration(globalConfig, this._unresolvedConfig);\n      }\n\n      return this._resolveConfigurationResult;\n    }\n  }, {\n    key: \"_getEnvironment\",\n    value: function _getEnvironment() {\n      if (this._environment == null) this._environment = new core.CliLoggingEnvironment();\n      return this._environment;\n    }\n  }]);\n\n  return TypeScriptPlugin;\n}();\n\nexports.TypeScriptPlugin = TypeScriptPlugin;","import React from \"react\";\nimport { BeatLoader } from \"react-spinners\";\n\nexport function Spinner(props: { backgroundColor?: string; }) {\n    const { backgroundColor } = props;\n    return (\n        <div className={\"verticallyCenter horizontallyCenter fillHeight\"} style={{ backgroundColor }}>\n            <BeatLoader color={\"#fff\"} loading={true} size={25} />\n        </div>\n    );\n}\n","import React from \"react\";\nimport ReactMonacoEditorForTypes from \"react-monaco-editor\";\nimport * as monacoEditorForTypes from \"monaco-editor\";\nimport { Spinner } from \"./Spinner\";\n\nexport interface CodeEditorProps {\n    onChange?: (text: string) => void;\n    text?: string;\n    readonly?: boolean;\n    lineWidth: number;\n    scrollTop: number;\n    onScrollTopChange: (scrollTop: number) => void;\n}\n\nexport interface CodeEditorState {\n    editorComponent: (typeof ReactMonacoEditorForTypes) | undefined | false;\n}\n\nexport class CodeEditor extends React.Component<CodeEditorProps, CodeEditorState> {\n    private editor: monacoEditorForTypes.editor.IStandaloneCodeEditor | undefined;\n\n    constructor(props: CodeEditorProps) {\n        super(props);\n        this.state = {\n            editorComponent: undefined\n        };\n        this.editorDidMount = this.editorDidMount.bind(this);\n\n        const reactMonacoEditorPromise = import(\"react-monaco-editor\");\n        import(\"monaco-editor\").then(monacoEditor => {\n            monacoEditor.languages.typescript.typescriptDefaults.setCompilerOptions({\n                noLib: true,\n                target: monacoEditor.languages.typescript.ScriptTarget.ESNext\n            });\n            monacoEditor.languages.typescript.typescriptDefaults.setDiagnosticsOptions({\n                noSyntaxValidation: true,\n                noSemanticValidation: true\n            });\n            monacoEditor.editor.defineTheme(\"dprint-theme\", {\n                base: \"vs-dark\",\n                inherit: true,\n                rules: [],\n                colors: {\n                    \"editorRuler.foreground\": \"#283430\"\n                }\n            });\n\n            reactMonacoEditorPromise.then(editor => {\n                this.setState({ editorComponent: editor.default });\n            }).catch(err => {\n                console.log(err);\n                this.setState({ editorComponent: false });\n            });\n        }).catch(err => {\n            console.log(err);\n            this.setState({ editorComponent: false });\n        });\n    }\n\n    render() {\n        this.updateScrollTop();\n\n        return (\n            <div id=\"codeEditor\">\n                {this.getEditor()}\n            </div>\n        );\n    }\n\n    private getEditor() {\n        if (this.state.editorComponent == null)\n            return <Spinner backgroundColor=\"#1e1e1e\" />;\n        if (this.state.editorComponent === false)\n            return <div className={\"errorMessage\"}>Error loading code editor. Please refresh the page to try again.</div>;\n\n        return (\n            <this.state.editorComponent\n                width=\"100%\"\n                height=\"100%\"\n                value={this.props.text}\n                theme=\"dprint-theme\"\n                language=\"typescript\"\n                onChange={text => this.props.onChange && this.props.onChange(text)}\n                editorDidMount={this.editorDidMount}\n                options={{\n                    automaticLayout: true,\n                    renderWhitespace: \"all\",\n                    readOnly: this.props.readonly || false,\n                    minimap: { enabled: false },\n                    quickSuggestions: false,\n                    wordBasedSuggestions: false,\n                    rulers: [this.props.lineWidth - 1]\n                }}\n            />\n        );\n    }\n\n    private editorDidMount(editor: monacoEditorForTypes.editor.IStandaloneCodeEditor) {\n        this.editor = editor;\n\n        this.editor.onDidChangeModelContent(() => {\n            if (this.props.readonly) {\n                this.editor!.setPosition({\n                    column: 1,\n                    lineNumber: 1\n                });\n            }\n        });\n\n        this.editor.onDidScrollChange(e => {\n            if (e.scrollTopChanged && this.props.onScrollTopChange)\n                this.props.onScrollTopChange(e.scrollTop);\n        });\n    }\n\n    private lastScrollTop = 0;\n    private updateScrollTop() {\n        if (this.editor == null || this.lastScrollTop === this.props.scrollTop)\n            return;\n\n        // todo: not sure how to not do this in the render method? I'm not a react/web person.\n        setTimeout(() => {\n            this.editor!.setScrollTop(this.props.scrollTop);\n            this.lastScrollTop = this.props.scrollTop;\n        }, 0);\n    }\n}\n","import React from \"react\";\nimport { AssertTrue, IsExact } from \"conditional-type-checks\";\nimport { TypeScriptConfiguration } from \"dprint-plugin-typescript\";\nimport \"./ConfigurationSelection.css\";\n\nexport interface ConfigurationSelectionProps {\n    config: TypeScriptConfiguration;\n    onUpdateConfig: (config: TypeScriptConfiguration) => void;\n}\n\nconst useBraceOptions = [\"maintain\", \"whenNotSingleLine\", \"always\", \"preferNone\"] as const;\ntype _assertUseBraces = AssertTrue<IsExact<typeof useBraceOptions[number], NonNullable<TypeScriptConfiguration[\"useBraces\"]>>>;\nconst bracePositionOptions = [\"maintain\", \"sameLine\", \"nextLine\", \"nextLineIfHanging\"] as const;\ntype _assertBracePosition = AssertTrue<IsExact<typeof bracePositionOptions[number], NonNullable<TypeScriptConfiguration[\"bracePosition\"]>>>;\nconst singleBodyPositionOptions = [\"maintain\", \"sameLine\", \"nextLine\"] as const;\ntype _assertSingleBodyPositionOptions = AssertTrue<IsExact<typeof singleBodyPositionOptions[number],\n    NonNullable<TypeScriptConfiguration[\"singleBodyPosition\"]>>>;\nconst nextControlFlowPositionOptions = [\"maintain\", \"sameLine\", \"nextLine\"] as const;\ntype _assertNextControlFlowPosition = AssertTrue<IsExact<typeof nextControlFlowPositionOptions[number],\n    NonNullable<TypeScriptConfiguration[\"nextControlFlowPosition\"]>>>;\nconst operatorPositionOptions = [\"maintain\", \"sameLine\", \"nextLine\"] as const;\ntype _assertOperatorPosition = AssertTrue<IsExact<typeof operatorPositionOptions[number], NonNullable<TypeScriptConfiguration[\"operatorPosition\"]>>>;\nconst trailingCommaOptions = [\"never\", \"always\", \"onlyMultiLine\"] as const;\ntype _assertTrailingCommas = AssertTrue<IsExact<typeof trailingCommaOptions[number], NonNullable<TypeScriptConfiguration[\"trailingCommas\"]>>>;\nconst arrowFunctionUseParenthesesOptions = [\"force\", \"maintain\", \"preferNone\"] as const;\ntype _assertArrowFunctionUseParentheses = AssertTrue<IsExact<typeof arrowFunctionUseParenthesesOptions[number],\n    NonNullable<TypeScriptConfiguration[\"arrowFunctionExpression.useParentheses\"]>>>;\nconst enumMemberSpacingOptions = [\"newline\", \"blankline\", \"maintain\"] as const;\ntype _assertEnumMemberSpacing = AssertTrue<IsExact<typeof enumMemberSpacingOptions[number],\n    NonNullable<TypeScriptConfiguration[\"enumDeclaration.memberSpacing\"]>>>;\n\nexport class ConfigurationSelection extends React.Component<ConfigurationSelectionProps> {\n    render() {\n        return <div id=\"configuration\">\n            <ConfigurationItem title=\"Line width\">\n                {this.getNumberConfig(\"lineWidth\")}\n            </ConfigurationItem>\n            <ConfigurationItem title=\"Indent width\">\n                {this.getNumberConfig(\"indentWidth\")}\n            </ConfigurationItem>\n            <ConfigurationItem title=\"Use tabs\">\n                {this.getBooleanConfig(\"useTabs\")}\n            </ConfigurationItem>\n            <ConfigurationItem title=\"Semicolons\">\n                {this.getBooleanConfig(\"semiColons\")}\n            </ConfigurationItem>\n            <ConfigurationItem title=\"Single quotes\">\n                {this.getBooleanConfig(\"singleQuotes\")}\n            </ConfigurationItem>\n            <ConfigurationItem title=\"Use braces\">\n                {this.getSelectForConfig(\"useBraces\", useBraceOptions)}\n            </ConfigurationItem>\n            <ConfigurationItem title=\"Brace position\">\n                {this.getSelectForConfig(\"bracePosition\", bracePositionOptions)}\n            </ConfigurationItem>\n            <ConfigurationItem title=\"Single body position\">\n                {this.getSelectForConfig(\"singleBodyPosition\", singleBodyPositionOptions)}\n            </ConfigurationItem>\n            <ConfigurationItem title=\"Operator position\">\n                {this.getSelectForConfig(\"operatorPosition\", operatorPositionOptions)}\n            </ConfigurationItem>\n            <ConfigurationItem title=\"Next control flow position\">\n                {this.getSelectForConfig(\"nextControlFlowPosition\", nextControlFlowPositionOptions)}\n            </ConfigurationItem>\n            <ConfigurationItem title=\"Trailing commas\">\n                {this.getSelectForConfig(\"trailingCommas\", trailingCommaOptions)}\n            </ConfigurationItem>\n            <ConfigurationItem title=\"Force multi-line arguments\">\n                {this.getBooleanConfig(\"forceMultiLineArguments\")}\n            </ConfigurationItem>\n            <ConfigurationItem title=\"Force multi-line parameters\">\n                {this.getBooleanConfig(\"forceMultiLineParameters\")}\n            </ConfigurationItem>\n            <ConfigurationItem title=\"Arrow Function - Use parentheses\">\n                {this.getSelectForConfig(\"arrowFunctionExpression.useParentheses\", arrowFunctionUseParenthesesOptions)}\n            </ConfigurationItem>\n            <ConfigurationItem title=\"Enum member spacing\">\n                {this.getSelectForConfig(\"enumDeclaration.memberSpacing\", enumMemberSpacingOptions)}\n            </ConfigurationItem>\n        </div>;\n    }\n\n    private getBooleanConfig(configKey: keyof TypeScriptConfiguration) {\n        const { config } = this.props;\n        return (\n            <input type=\"checkbox\" checked={config[configKey] as boolean} onChange={() => this.updateConfig({ [configKey]: !config[configKey] })} />\n        );\n    }\n\n    private getSelectForConfig(configKey: keyof TypeScriptConfiguration, values: readonly string[]) {\n        const { config } = this.props;\n        return (\n            <select value={config[configKey] as string} onChange={e => this.updateConfig({ [configKey]: e.target.value as any })}>\n                {getOptionsForValues()}\n            </select>\n        );\n\n        function getOptionsForValues() {\n            return values.map((value, i) => (<option key={i} value={value}>{value}</option>));\n        }\n    }\n\n    private getNumberConfig(configKey: keyof TypeScriptConfiguration) {\n        const { config } = this.props;\n        return (\n            <input type=\"number\" inputMode=\"numeric\" value={config[configKey] as number} onChange={e => {\n                const result = Math.max(0, Math.round(e.target.valueAsNumber));\n                this.updateConfig({ [configKey]: result });\n            }} />\n        );\n    }\n\n    private updateConfig(newConfig: Partial<TypeScriptConfiguration>) {\n        this.props.onUpdateConfig({ ...this.props.config, ...newConfig });\n    }\n}\n\ninterface ConfigurationItemProps {\n    title: string;\n}\n\nclass ConfigurationItem extends React.Component<ConfigurationItemProps> {\n    render() {\n        return (\n            <div className=\"configurationItem\">\n                <label>\n                    {this.props.title}:\n                    {this.props.children}\n                </label>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nexport function ExternalLink(props: { text: string; url: string; id?: string; }): React.ReactElement {\n    return <a id={props.id} href={props.url} rel=\"noopener noreferrer\">{props.text}</a>;\n}\n","import { TypeScriptConfiguration } from \"dprint-plugin-typescript\";\nimport { decompressFromEncodedURIComponent, compressToEncodedURIComponent } from \"lz-string\";\n\nexport class UrlSaver {\n    getUrlInfo() {\n        const locationHash = document.location.hash || \"\";\n\n        return {\n            text: getText(),\n            config: getConfig()\n        };\n\n        function getText() {\n            const matches = /code\\/([^/]+)/.exec(locationHash);\n            if (matches == null || matches.length !== 2)\n                return \"\";\n\n            try {\n                return decompress(matches[1]);\n            } catch (err) {\n                console.error(err);\n                return \"\";\n            }\n        }\n\n        function getConfig(): TypeScriptConfiguration {\n            const matches = /config\\/([^/]+)/.exec(locationHash);\n            if (matches == null || matches.length !== 2)\n                return getDefaultConfig();\n\n            try {\n                return JSON.parse(decompress(matches[1]));\n            } catch (err) {\n                console.error(err);\n                return getDefaultConfig();\n            }\n\n            function getDefaultConfig(): TypeScriptConfiguration {\n                return {\n                    lineWidth: 80\n                };\n            }\n        }\n    }\n\n    updateUrl({ text, config }: { text: string; config: TypeScriptConfiguration; }) {\n        window.history.replaceState(\n            undefined,\n            \"\",\n            `#code/${compressToEncodedURIComponent(text)}/config/${compressToEncodedURIComponent(JSON.stringify(config))}`\n        );\n    }\n}\n\nfunction decompress(text: string) {\n    return decompressFromEncodedURIComponent(text.trim()) || \"\"; // will be null on error\n}\n","import React from \"react\";\nimport SplitPane from \"react-split-pane\";\nimport { formatFileText, resolveConfiguration, LoggingEnvironment } from \"@dprint/core\";\nimport { TypeScriptPlugin, TypeScriptConfiguration } from \"dprint-plugin-typescript\";\nimport { CodeEditor, ConfigurationSelection, ExternalLink } from \"./components\";\nimport { UrlSaver } from \"./utils\";\nimport \"./Playground.css\";\nimport \"./external/react-splitpane.css\";\n\nexport interface PlaygroundState {\n    text: string;\n    formattedText: string;\n    scrollTop: number;\n    config: TypeScriptConfiguration;\n}\nconst initialLineWidth = 80;\nconst urlSaver = new UrlSaver();\nconst environment: LoggingEnvironment = {\n    error: () => {},\n    log: () => {},\n    warn: () => {}\n};\n\nexport class Playground extends React.Component<{}, PlaygroundState> {\n    constructor(props: {}) {\n        super(props);\n\n        const { text: initialText, config: initialUnresolvedConfig } = urlSaver.getUrlInfo();\n        const initialConfig = this.getResolvedConfiguration(initialUnresolvedConfig);\n        const config: TypeScriptConfiguration = {\n            lineWidth: initialConfig.lineWidth,\n            indentWidth: initialConfig.indentWidth,\n            useTabs: initialConfig.useTabs,\n            semiColons: initialConfig[\"breakStatement.semiColon\"],\n            singleQuotes: initialConfig.singleQuotes,\n            trailingCommas: initialConfig[\"tupleType.trailingCommas\"],\n            useBraces: initialConfig[\"ifStatement.useBraces\"],\n            bracePosition: initialConfig[\"arrowFunctionExpression.bracePosition\"],\n            singleBodyPosition: initialConfig[\"ifStatement.singleBodyPosition\"],\n            nextControlFlowPosition: initialConfig[\"ifStatement.nextControlFlowPosition\"],\n            operatorPosition: initialConfig[\"binaryExpression.operatorPosition\"],\n            forceMultiLineArguments: initialConfig[\"callExpression.forceMultiLineArguments\"],\n            forceMultiLineParameters: initialConfig[\"functionDeclaration.forceMultiLineParameters\"],\n            \"enumDeclaration.memberSpacing\": initialConfig[\"enumDeclaration.memberSpacing\"],\n            \"arrowFunctionExpression.useParentheses\": initialConfig[\"arrowFunctionExpression.useParentheses\"]\n        };\n\n        this.state = {\n            text: initialText,\n            formattedText: this.formatText(initialText, config),\n            scrollTop: 0,\n            config\n        };\n\n        this.onConfigUpdate = this.onConfigUpdate.bind(this);\n        this.onTextChange = this.onTextChange.bind(this);\n        this.onScrollTopChange = this.onScrollTopChange.bind(this);\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <SplitPane split=\"horizontal\" defaultSize={50} allowResize={false}>\n                    <header className=\"appHeader\">\n                        <h1 id=\"title\">dprint - Playground</h1>\n                        <div id=\"headerRight\">\n                            <a href=\"/\">Overview</a>\n                            <a href=\"/playground\">Playground</a>\n                            <ExternalLink url=\"https://github.com/dsherret/dprint\" text=\"View on GitHub\" />\n                        </div>\n                    </header>\n                    {/* Todo: re-enable resizing, but doesn't seem to work well with monaco editor on\n                    the right side as it won't reduce its width after being expanded. */}\n                    <SplitPane split=\"vertical\" minSize={50} defaultSize={200} allowResize={false}>\n                        <ConfigurationSelection\n                            config={this.state.config}\n                            onUpdateConfig={this.onConfigUpdate}\n                        />\n                        <SplitPane split=\"vertical\" minSize={50} defaultSize=\"50%\" allowResize={false}>\n                            <CodeEditor\n                                onChange={this.onTextChange}\n                                text={this.state.text}\n                                lineWidth={this.state.config.lineWidth || initialLineWidth}\n                                onScrollTopChange={this.onScrollTopChange}\n                                scrollTop={this.state.scrollTop}\n                            />\n                            <CodeEditor\n                                text={this.state.formattedText}\n                                readonly={true}\n                                lineWidth={this.state.config.lineWidth || initialLineWidth}\n                                onScrollTopChange={this.onScrollTopChange}\n                                scrollTop={this.state.scrollTop}\n                            />\n                        </SplitPane>\n                    </SplitPane>\n                </SplitPane>\n            </div>\n        );\n    }\n\n    private onConfigUpdate(config: TypeScriptConfiguration) {\n        this.setState({ config, formattedText: this.getFormattedText(config) });\n        this.updateUrl({ text: this.state.text, config });\n    }\n\n    private lastUpdateTimeout: NodeJS.Timeout | undefined;\n    private onTextChange(newText: string) {\n        if (this.lastUpdateTimeout != null)\n            clearTimeout(this.lastUpdateTimeout);\n\n        this.setState({ text: newText });\n\n        this.lastUpdateTimeout = setTimeout(() => {\n            this.setState({ formattedText: this.getFormattedText() });\n            this.updateUrl({ text: newText, config: this.state.config });\n        }, 250);\n    }\n\n    private updateUrl(urlInfo: { text: string; config: TypeScriptConfiguration; }) {\n        urlSaver.updateUrl(urlInfo);\n    }\n\n    private getFormattedText(config?: TypeScriptConfiguration) {\n        return this.formatText(this.state.text, config || this.state.config);\n    }\n\n    private onScrollTopChange(scrollTop: number) {\n        this.setState({ scrollTop });\n    }\n\n    private formatText(text: string, typeScriptConfig: TypeScriptConfiguration) {\n        try {\n            const typeScriptPlugin = new TypeScriptPlugin(typeScriptConfig);\n            const config = resolveConfiguration({}).config;\n            typeScriptPlugin.initialize({\n                environment,\n                globalConfig: config\n            });\n\n            return formatFileText({\n                filePath: \"/file.ts\",\n                fileText: text,\n                plugins: [typeScriptPlugin]\n            });\n        } catch (err) {\n            return err.toString();\n        }\n    }\n\n    private getResolvedConfiguration(config: TypeScriptConfiguration) {\n        try {\n            return new TypeScriptPlugin(config).getConfiguration();\n        } catch (err) {\n            console.error(err);\n            return new TypeScriptPlugin({ lineWidth: 80 }).getConfiguration();\n        }\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\"\n        // [::1] is the IPv6 localhost address.\n        || window.location.hostname === \"[::1]\"\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        || window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config: any) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL!, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \"\n                            + \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            }\n            else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config: any) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null)\n                    return;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \"\n                                    + \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate)\n                                config.onUpdate(registration);\n                        }\n                        else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess)\n                                config.onSuccess(registration);\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config: any) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404\n                || (contentType != null && contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            }\n            else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Playground } from \"./Playground\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Playground />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}